{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install numpy pandas matplotlib seaborn missingno category-encoders scikit-learn catboost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import missingno as msno\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df=pd.read_csv(\"train.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Location</th>\n",
       "      <th>MinTemp</th>\n",
       "      <th>MaxTemp</th>\n",
       "      <th>Rainfall</th>\n",
       "      <th>Evaporation</th>\n",
       "      <th>Sunshine</th>\n",
       "      <th>WindGustDir</th>\n",
       "      <th>WindGustSpeed</th>\n",
       "      <th>WindDir9am</th>\n",
       "      <th>...</th>\n",
       "      <th>Humidity9am</th>\n",
       "      <th>Humidity3pm</th>\n",
       "      <th>Pressure9am</th>\n",
       "      <th>Pressure3pm</th>\n",
       "      <th>Cloud9am</th>\n",
       "      <th>Cloud3pm</th>\n",
       "      <th>Temp9am</th>\n",
       "      <th>Temp3pm</th>\n",
       "      <th>RainToday</th>\n",
       "      <th>Task</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2017-04-24</td>\n",
       "      <td>Navi-Mumbai</td>\n",
       "      <td>14.5</td>\n",
       "      <td>17.8</td>\n",
       "      <td>14.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>94.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1024.1</td>\n",
       "      <td>1022.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013-10-11</td>\n",
       "      <td>Kota</td>\n",
       "      <td>24.6</td>\n",
       "      <td>39.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SE</td>\n",
       "      <td>31.0</td>\n",
       "      <td>N</td>\n",
       "      <td>...</td>\n",
       "      <td>52.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>1011.8</td>\n",
       "      <td>1006.6</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>30.1</td>\n",
       "      <td>39.2</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-02-18</td>\n",
       "      <td>Vadodara</td>\n",
       "      <td>14.7</td>\n",
       "      <td>26.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>3.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>SSE</td>\n",
       "      <td>30.0</td>\n",
       "      <td>SW</td>\n",
       "      <td>...</td>\n",
       "      <td>87.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>1018.2</td>\n",
       "      <td>1015.4</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>17.3</td>\n",
       "      <td>24.5</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-02-18</td>\n",
       "      <td>Kanpur</td>\n",
       "      <td>18.3</td>\n",
       "      <td>26.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SE</td>\n",
       "      <td>28.0</td>\n",
       "      <td>WSW</td>\n",
       "      <td>...</td>\n",
       "      <td>79.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>1017.0</td>\n",
       "      <td>1016.5</td>\n",
       "      <td>6.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.0</td>\n",
       "      <td>25.4</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2011-10-11</td>\n",
       "      <td>Srinagar</td>\n",
       "      <td>11.4</td>\n",
       "      <td>19.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.4</td>\n",
       "      <td>8.9</td>\n",
       "      <td>W</td>\n",
       "      <td>31.0</td>\n",
       "      <td>SW</td>\n",
       "      <td>...</td>\n",
       "      <td>63.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1018.6</td>\n",
       "      <td>1017.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14.4</td>\n",
       "      <td>18.3</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116363</th>\n",
       "      <td>2013-10-22</td>\n",
       "      <td>Navi-Mumbai</td>\n",
       "      <td>10.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.6</td>\n",
       "      <td>8.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SW</td>\n",
       "      <td>...</td>\n",
       "      <td>58.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>1025.7</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>13.8</td>\n",
       "      <td>16.0</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116364</th>\n",
       "      <td>2015-05-29</td>\n",
       "      <td>Ranchi</td>\n",
       "      <td>7.7</td>\n",
       "      <td>21.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>8.9</td>\n",
       "      <td>E</td>\n",
       "      <td>35.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>...</td>\n",
       "      <td>69.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>1026.7</td>\n",
       "      <td>1023.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>20.1</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116365</th>\n",
       "      <td>2012-03-17</td>\n",
       "      <td>Dhanbad</td>\n",
       "      <td>7.6</td>\n",
       "      <td>21.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>11.2</td>\n",
       "      <td>SE</td>\n",
       "      <td>39.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>...</td>\n",
       "      <td>85.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>1021.1</td>\n",
       "      <td>1019.6</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.7</td>\n",
       "      <td>21.2</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116366</th>\n",
       "      <td>2014-06-23</td>\n",
       "      <td>Vijayawada</td>\n",
       "      <td>8.8</td>\n",
       "      <td>14.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NNE</td>\n",
       "      <td>56.0</td>\n",
       "      <td>N</td>\n",
       "      <td>...</td>\n",
       "      <td>56.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>998.7</td>\n",
       "      <td>990.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>13.6</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116367</th>\n",
       "      <td>2012-03-12</td>\n",
       "      <td>Jabalpur</td>\n",
       "      <td>15.8</td>\n",
       "      <td>40.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.2</td>\n",
       "      <td>11.3</td>\n",
       "      <td>WSW</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>...</td>\n",
       "      <td>28.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1008.0</td>\n",
       "      <td>1005.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>30.1</td>\n",
       "      <td>33.9</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>116368 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Date     Location  MinTemp  MaxTemp  Rainfall  Evaporation  \\\n",
       "0       2017-04-24  Navi-Mumbai     14.5     17.8      14.2          NaN   \n",
       "1       2013-10-11         Kota     24.6     39.5       0.0         12.0   \n",
       "2       2012-02-18     Vadodara     14.7     26.6       0.2          3.2   \n",
       "3       2012-02-18       Kanpur     18.3     26.6       0.0          NaN   \n",
       "4       2011-10-11     Srinagar     11.4     19.3       0.6          2.4   \n",
       "...            ...          ...      ...      ...       ...          ...   \n",
       "116363  2013-10-22  Navi-Mumbai     10.0     17.2       0.0          9.6   \n",
       "116364  2015-05-29       Ranchi      7.7     21.1       0.0          1.4   \n",
       "116365  2012-03-17      Dhanbad      7.6     21.7       0.0          6.0   \n",
       "116366  2014-06-23   Vijayawada      8.8     14.8       0.0          1.2   \n",
       "116367  2012-03-12     Jabalpur     15.8     40.6       0.0          9.2   \n",
       "\n",
       "        Sunshine WindGustDir  WindGustSpeed WindDir9am  ... Humidity9am  \\\n",
       "0            NaN         NaN            NaN        NaN  ...        94.0   \n",
       "1            NaN          SE           31.0          N  ...        52.0   \n",
       "2            8.0         SSE           30.0         SW  ...        87.0   \n",
       "3            NaN          SE           28.0        WSW  ...        79.0   \n",
       "4            8.9           W           31.0         SW  ...        63.0   \n",
       "...          ...         ...            ...        ...  ...         ...   \n",
       "116363       8.8         NaN            NaN         SW  ...        58.0   \n",
       "116364       8.9           E           35.0         NE  ...        69.0   \n",
       "116365      11.2          SE           39.0         NE  ...        85.0   \n",
       "116366       2.0         NNE           56.0          N  ...        56.0   \n",
       "116367      11.3         WSW           31.0         NE  ...        28.0   \n",
       "\n",
       "        Humidity3pm  Pressure9am  Pressure3pm  Cloud9am  Cloud3pm  Temp9am  \\\n",
       "0               NaN       1024.1       1022.5       8.0       NaN     16.2   \n",
       "1              21.0       1011.8       1006.6       2.0       4.0     30.1   \n",
       "2              57.0       1018.2       1015.4       7.0       3.0     17.3   \n",
       "3              67.0       1017.0       1016.5       6.0       NaN     23.0   \n",
       "4              47.0       1018.6       1017.1       NaN       NaN     14.4   \n",
       "...             ...          ...          ...       ...       ...      ...   \n",
       "116363         58.0       1027.2       1025.7       7.0       1.0     13.8   \n",
       "116364         43.0       1026.7       1023.0       1.0       1.0     12.3   \n",
       "116365         42.0       1021.1       1019.6       2.0       2.0     13.7   \n",
       "116366         62.0        998.7        990.9       3.0       7.0     14.1   \n",
       "116367         28.0       1008.0       1005.1       2.0       2.0     30.1   \n",
       "\n",
       "        Temp3pm  RainToday  Task  \n",
       "0           NaN        Yes   1.0  \n",
       "1          39.2         No   0.0  \n",
       "2          24.5         No   0.0  \n",
       "3          25.4         No   0.0  \n",
       "4          18.3         No   0.0  \n",
       "...         ...        ...   ...  \n",
       "116363     16.0         No   0.0  \n",
       "116364     20.1         No   0.0  \n",
       "116365     21.2         No   0.0  \n",
       "116366     13.6         No   0.0  \n",
       "116367     33.9         No   0.0  \n",
       "\n",
       "[116368 rows x 23 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_df = pd.read_csv(\"test.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Splitting Date into seperate columns\n",
    "train_df['Date'] = pd.to_datetime(train_df['Date'])\n",
    "\n",
    "train_df['Year'] = train_df['Date'].dt.year\n",
    "train_df['Month'] = train_df['Date'].dt.month\n",
    "train_df['Day'] = train_df['Date'].dt.day\n",
    "\n",
    "train_df.drop(['Date'], axis=1, inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Nasik': 879,\n",
       " 'Kalyan-Dombivali': 765,\n",
       " 'Coimbatore': 762,\n",
       " 'Navi-Mumbai': 744,\n",
       " 'Aurangabad': 744,\n",
       " 'Surat': 743,\n",
       " 'Meerut': 729,\n",
       " 'Hyderabad': 700,\n",
       " 'Allahabad': 699,\n",
       " 'Raipur': 686,\n",
       " 'Sydney': 662,\n",
       " 'Bhopal': 653,\n",
       " 'Kolkata': 653,\n",
       " 'Vijayawada': 626,\n",
       " 'Visakhapatnam': 625,\n",
       " 'Vasai-Virar': 615,\n",
       " 'Jaipur': 606,\n",
       " 'Chennai': 593,\n",
       " 'Faridabad': 586,\n",
       " 'Rajkot': 566,\n",
       " 'Jodhpur': 561,\n",
       " 'Nagpore': 561,\n",
       " 'Srinagar': 554,\n",
       " 'Kanpur': 552,\n",
       " 'Patna': 518,\n",
       " 'Vadodara': 518,\n",
       " 'Ghaziabad': 510,\n",
       " 'Indore': 509,\n",
       " 'Jabalpur': 501,\n",
       " 'Dhanbad': 488,\n",
       " 'Penrith': 477,\n",
       " 'Mumbai': 473,\n",
       " 'Delhi': 471,\n",
       " 'Ranchi': 459,\n",
       " 'Thane': 453,\n",
       " 'Pimpri-Chinchwad': 450,\n",
       " 'Lucknow': 430,\n",
       " 'Pune': 430,\n",
       " 'Varanasi': 417,\n",
       " 'Howrah': 399,\n",
       " 'Gwalior': 373,\n",
       " 'Ahmedabad': 311,\n",
       " 'Bangalore': 299,\n",
       " 'Ludhiana': 257,\n",
       " 'Kota': 204,\n",
       " 'Agra': 200,\n",
       " 'Madurai': 194,\n",
       " 'Amritsar': 158,\n",
       " 'Guwahati': 94}"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# counts stores counts of Locations where the Task is 1\n",
    "counts = train_df[train_df['Task'] == 1]['Location'].value_counts().to_dict()\n",
    "totCounts = train_df[\"Location\"].value_counts()\n",
    "counts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location\n",
       "Indore              2778\n",
       "Sydney              2623\n",
       "Rajkot              2587\n",
       "Vijayawada          2572\n",
       "Ghaziabad           2566\n",
       "Srinagar            2564\n",
       "Raipur              2560\n",
       "Jabalpur            2530\n",
       "Navi-Mumbai         2455\n",
       "Kalyan-Dombivali    2455\n",
       "Aurangabad          2451\n",
       "Thane               2446\n",
       "Patna               2444\n",
       "Chennai             2442\n",
       "Bhopal              2442\n",
       "Penrith             2440\n",
       "Jodhpur             2439\n",
       "Delhi               2439\n",
       "Visakhapatnam       2439\n",
       "Ranchi              2434\n",
       "Vasai-Virar         2431\n",
       "Nagpore             2430\n",
       "Varanasi            2428\n",
       "Nasik               2426\n",
       "Kolkata             2424\n",
       "Hyderabad           2422\n",
       "Mumbai              2421\n",
       "Madurai             2419\n",
       "Allahabad           2416\n",
       "Ahmedabad           2414\n",
       "Bangalore           2411\n",
       "Surat               2410\n",
       "Dhanbad             2410\n",
       "Vadodara            2401\n",
       "Pimpri-Chinchwad    2398\n",
       "Meerut              2395\n",
       "Lucknow             2393\n",
       "Amritsar            2391\n",
       "Coimbatore          2390\n",
       "Kanpur              2390\n",
       "Jaipur              2386\n",
       "Faridabad           2386\n",
       "Howrah              2382\n",
       "Ludhiana            2379\n",
       "Gwalior             2372\n",
       "Pune                2358\n",
       "Agra                1264\n",
       "Kota                1258\n",
       "Guwahati            1257\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "totCounts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# msno.bar(train_df)\n",
    "# plt.savefig('NULL_msno_bar.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# msno.matrix(train_df)\n",
    "# plt.savefig('NULL_msno_matrix.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# train_df.hist(figsize=(20, 20), xrot=45)\n",
    "# plt.savefig('numerical_cols_hist.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import numpy as np\n",
    "# import matplotlib.pyplot as plt\n",
    "# _, axes = plt.subplots(5,4, figsize=(15, 15))\n",
    "# yes = train_df[train_df[\"Task\"]==1]\n",
    "# no = train_df[train_df[\"Task\"]==0]\n",
    "\n",
    "# ax = axes.ravel()\n",
    "# # flatten the 2D array\n",
    "# num_columns = train_df.select_dtypes(include=['number']).columns\n",
    "\n",
    "# count = 0\n",
    "# for i in num_columns:                   # for each of the 30 features\n",
    "#     bins = 80\n",
    "#     ax[count].hist(yes.loc[:,i], bins=bins, color='r', alpha=.5)\n",
    "#     ax[count].hist(no.loc[:,i], bins=bins, color='b', alpha=0.3)\n",
    "#     ax[count].set_title(i, fontsize=12)\n",
    "#     ax[count].legend(['yes','no'], loc='best', fontsize=8)\n",
    "#     count += 1\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.savefig('carAndMeanoftask01.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# categorical_columns = train_df.select_dtypes(include=['category', 'object']).columns\n",
    "\n",
    "# categorical_columns = categorical_columns.drop(\"Location\")\n",
    "# # Set up a grid of subplots\n",
    "# fig, axes = plt.subplots(len(categorical_columns), 1, figsize=(12, 20))\n",
    "\n",
    "# # Iterate through categorical columns and create count plots\n",
    "# for i, column in enumerate(categorical_columns):\n",
    "#     sns.countplot(y=column, data=train_df, ax=axes[i])\n",
    "#     axes[i].set_title(f\"Count Plot for {column}\")\n",
    "\n",
    "# # Adjust layout and show the plots\n",
    "# plt.savefig('cat_cols_hist.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Adding new column Counts, this contains the fraction of value for which Task of the Location is 1.\n",
    "train_df[\"Counts\"] = train_df[\"Location\"].apply(lambda x: counts[x]/totCounts[x])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "column_to_check = 'Task'\n",
    "train_df = train_df.dropna(subset=[column_to_check])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>MinTemp</th>\n",
       "      <th>MaxTemp</th>\n",
       "      <th>Rainfall</th>\n",
       "      <th>Evaporation</th>\n",
       "      <th>Sunshine</th>\n",
       "      <th>WindGustDir</th>\n",
       "      <th>WindGustSpeed</th>\n",
       "      <th>WindDir9am</th>\n",
       "      <th>WindDir3pm</th>\n",
       "      <th>...</th>\n",
       "      <th>Cloud9am</th>\n",
       "      <th>Cloud3pm</th>\n",
       "      <th>Temp9am</th>\n",
       "      <th>Temp3pm</th>\n",
       "      <th>RainToday</th>\n",
       "      <th>Task</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Navi-Mumbai</td>\n",
       "      <td>14.5</td>\n",
       "      <td>17.8</td>\n",
       "      <td>14.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>4</td>\n",
       "      <td>24</td>\n",
       "      <td>0.303055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Kota</td>\n",
       "      <td>24.6</td>\n",
       "      <td>39.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SE</td>\n",
       "      <td>31.0</td>\n",
       "      <td>N</td>\n",
       "      <td>NW</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>30.1</td>\n",
       "      <td>39.2</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2013</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>0.162162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Vadodara</td>\n",
       "      <td>14.7</td>\n",
       "      <td>26.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>3.2</td>\n",
       "      <td>8.0</td>\n",
       "      <td>SSE</td>\n",
       "      <td>30.0</td>\n",
       "      <td>SW</td>\n",
       "      <td>S</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>17.3</td>\n",
       "      <td>24.5</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>0.215743</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Kanpur</td>\n",
       "      <td>18.3</td>\n",
       "      <td>26.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SE</td>\n",
       "      <td>28.0</td>\n",
       "      <td>WSW</td>\n",
       "      <td>SSE</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.0</td>\n",
       "      <td>25.4</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>0.230962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Srinagar</td>\n",
       "      <td>11.4</td>\n",
       "      <td>19.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.4</td>\n",
       "      <td>8.9</td>\n",
       "      <td>W</td>\n",
       "      <td>31.0</td>\n",
       "      <td>SW</td>\n",
       "      <td>SSW</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14.4</td>\n",
       "      <td>18.3</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2011</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>0.216069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116363</th>\n",
       "      <td>Navi-Mumbai</td>\n",
       "      <td>10.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.6</td>\n",
       "      <td>8.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SW</td>\n",
       "      <td>SSE</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>13.8</td>\n",
       "      <td>16.0</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2013</td>\n",
       "      <td>10</td>\n",
       "      <td>22</td>\n",
       "      <td>0.303055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116364</th>\n",
       "      <td>Ranchi</td>\n",
       "      <td>7.7</td>\n",
       "      <td>21.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>8.9</td>\n",
       "      <td>E</td>\n",
       "      <td>35.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>SSE</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>20.1</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2015</td>\n",
       "      <td>5</td>\n",
       "      <td>29</td>\n",
       "      <td>0.188578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116365</th>\n",
       "      <td>Dhanbad</td>\n",
       "      <td>7.6</td>\n",
       "      <td>21.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>11.2</td>\n",
       "      <td>SE</td>\n",
       "      <td>39.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>ESE</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.7</td>\n",
       "      <td>21.2</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>0.202490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116366</th>\n",
       "      <td>Vijayawada</td>\n",
       "      <td>8.8</td>\n",
       "      <td>14.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NNE</td>\n",
       "      <td>56.0</td>\n",
       "      <td>N</td>\n",
       "      <td>NNE</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>13.6</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>6</td>\n",
       "      <td>23</td>\n",
       "      <td>0.243390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116367</th>\n",
       "      <td>Jabalpur</td>\n",
       "      <td>15.8</td>\n",
       "      <td>40.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.2</td>\n",
       "      <td>11.3</td>\n",
       "      <td>WSW</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>WSW</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>30.1</td>\n",
       "      <td>33.9</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>0.198024</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>113761 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Location  MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine  \\\n",
       "0       Navi-Mumbai     14.5     17.8      14.2          NaN       NaN   \n",
       "1              Kota     24.6     39.5       0.0         12.0       NaN   \n",
       "2          Vadodara     14.7     26.6       0.2          3.2       8.0   \n",
       "3            Kanpur     18.3     26.6       0.0          NaN       NaN   \n",
       "4          Srinagar     11.4     19.3       0.6          2.4       8.9   \n",
       "...             ...      ...      ...       ...          ...       ...   \n",
       "116363  Navi-Mumbai     10.0     17.2       0.0          9.6       8.8   \n",
       "116364       Ranchi      7.7     21.1       0.0          1.4       8.9   \n",
       "116365      Dhanbad      7.6     21.7       0.0          6.0      11.2   \n",
       "116366   Vijayawada      8.8     14.8       0.0          1.2       2.0   \n",
       "116367     Jabalpur     15.8     40.6       0.0          9.2      11.3   \n",
       "\n",
       "       WindGustDir  WindGustSpeed WindDir9am WindDir3pm  ...  Cloud9am  \\\n",
       "0              NaN            NaN        NaN        NaN  ...       8.0   \n",
       "1               SE           31.0          N         NW  ...       2.0   \n",
       "2              SSE           30.0         SW          S  ...       7.0   \n",
       "3               SE           28.0        WSW        SSE  ...       6.0   \n",
       "4                W           31.0         SW        SSW  ...       NaN   \n",
       "...            ...            ...        ...        ...  ...       ...   \n",
       "116363         NaN            NaN         SW        SSE  ...       7.0   \n",
       "116364           E           35.0         NE        SSE  ...       1.0   \n",
       "116365          SE           39.0         NE        ESE  ...       2.0   \n",
       "116366         NNE           56.0          N        NNE  ...       3.0   \n",
       "116367         WSW           31.0         NE        WSW  ...       2.0   \n",
       "\n",
       "        Cloud3pm  Temp9am  Temp3pm  RainToday  Task  Year  Month  Day  \\\n",
       "0            NaN     16.2      NaN        Yes   1.0  2017      4   24   \n",
       "1            4.0     30.1     39.2         No   0.0  2013     10   11   \n",
       "2            3.0     17.3     24.5         No   0.0  2012      2   18   \n",
       "3            NaN     23.0     25.4         No   0.0  2012      2   18   \n",
       "4            NaN     14.4     18.3         No   0.0  2011     10   11   \n",
       "...          ...      ...      ...        ...   ...   ...    ...  ...   \n",
       "116363       1.0     13.8     16.0         No   0.0  2013     10   22   \n",
       "116364       1.0     12.3     20.1         No   0.0  2015      5   29   \n",
       "116365       2.0     13.7     21.2         No   0.0  2012      3   17   \n",
       "116366       7.0     14.1     13.6         No   0.0  2014      6   23   \n",
       "116367       2.0     30.1     33.9         No   0.0  2012      3   12   \n",
       "\n",
       "          Counts  \n",
       "0       0.303055  \n",
       "1       0.162162  \n",
       "2       0.215743  \n",
       "3       0.230962  \n",
       "4       0.216069  \n",
       "...          ...  \n",
       "116363  0.303055  \n",
       "116364  0.188578  \n",
       "116365  0.202490  \n",
       "116366  0.243390  \n",
       "116367  0.198024  \n",
       "\n",
       "[113761 rows x 26 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location          0.000000\n",
       "MinTemp           0.448308\n",
       "MaxTemp           0.229428\n",
       "Rainfall          0.981004\n",
       "Evaporation      42.880249\n",
       "Sunshine         47.754503\n",
       "WindGustDir       6.578704\n",
       "WindGustSpeed     6.539148\n",
       "WindDir9am        7.026134\n",
       "WindDir3pm        2.685455\n",
       "WindSpeed9am      0.951996\n",
       "WindSpeed3pm      1.871467\n",
       "Humidity9am       1.255263\n",
       "Humidity3pm       2.566785\n",
       "Pressure9am       9.883000\n",
       "Pressure3pm       9.869815\n",
       "Cloud9am         37.791510\n",
       "Cloud3pm         40.212375\n",
       "Temp9am           0.639059\n",
       "Temp3pm           1.941790\n",
       "RainToday         0.981004\n",
       "Task              0.000000\n",
       "Year              0.000000\n",
       "Month             0.000000\n",
       "Day               0.000000\n",
       "Counts            0.000000\n",
       "dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "null_value_percentages=(train_df.isna().sum()/train_df.shape[0])*100\n",
    "null_value_percentages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dropping these columns as they contain nearly 40% null values\n",
    "to_drop = ['Evaporation', 'Sunshine', 'Cloud9am','Cloud3pm',]\n",
    "train_df.drop(to_drop,inplace=True,axis=1)\n",
    "test_df.drop(to_drop,inplace=True,axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>MinTemp</th>\n",
       "      <th>MaxTemp</th>\n",
       "      <th>Rainfall</th>\n",
       "      <th>WindGustDir</th>\n",
       "      <th>WindGustSpeed</th>\n",
       "      <th>WindDir9am</th>\n",
       "      <th>WindDir3pm</th>\n",
       "      <th>WindSpeed9am</th>\n",
       "      <th>WindSpeed3pm</th>\n",
       "      <th>...</th>\n",
       "      <th>Pressure9am</th>\n",
       "      <th>Pressure3pm</th>\n",
       "      <th>Temp9am</th>\n",
       "      <th>Temp3pm</th>\n",
       "      <th>RainToday</th>\n",
       "      <th>Task</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Navi-Mumbai</td>\n",
       "      <td>14.5</td>\n",
       "      <td>17.8</td>\n",
       "      <td>14.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1024.1</td>\n",
       "      <td>1022.5</td>\n",
       "      <td>16.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>4</td>\n",
       "      <td>24</td>\n",
       "      <td>0.303055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Varanasi</td>\n",
       "      <td>22.3</td>\n",
       "      <td>27.6</td>\n",
       "      <td>11.6</td>\n",
       "      <td>SE</td>\n",
       "      <td>43.0</td>\n",
       "      <td>SSW</td>\n",
       "      <td>SSE</td>\n",
       "      <td>19.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1016.4</td>\n",
       "      <td>1015.2</td>\n",
       "      <td>22.7</td>\n",
       "      <td>24.5</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2016</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "      <td>0.171746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Ghaziabad</td>\n",
       "      <td>12.3</td>\n",
       "      <td>22.1</td>\n",
       "      <td>0.6</td>\n",
       "      <td>N</td>\n",
       "      <td>63.0</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>26.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1018.8</td>\n",
       "      <td>1015.2</td>\n",
       "      <td>15.8</td>\n",
       "      <td>20.3</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>5</td>\n",
       "      <td>26</td>\n",
       "      <td>0.198753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Patna</td>\n",
       "      <td>7.2</td>\n",
       "      <td>19.2</td>\n",
       "      <td>0.4</td>\n",
       "      <td>E</td>\n",
       "      <td>52.0</td>\n",
       "      <td>NW</td>\n",
       "      <td>E</td>\n",
       "      <td>6.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1025.2</td>\n",
       "      <td>1025.1</td>\n",
       "      <td>12.3</td>\n",
       "      <td>17.9</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2011</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0.211948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Meerut</td>\n",
       "      <td>12.5</td>\n",
       "      <td>21.1</td>\n",
       "      <td>0.4</td>\n",
       "      <td>SE</td>\n",
       "      <td>37.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>ESE</td>\n",
       "      <td>13.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1025.2</td>\n",
       "      <td>1023.3</td>\n",
       "      <td>13.0</td>\n",
       "      <td>20.1</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>3</td>\n",
       "      <td>25</td>\n",
       "      <td>0.304384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116344</th>\n",
       "      <td>Vijayawada</td>\n",
       "      <td>5.5</td>\n",
       "      <td>16.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NNW</td>\n",
       "      <td>28.0</td>\n",
       "      <td>NNW</td>\n",
       "      <td>E</td>\n",
       "      <td>17.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1021.2</td>\n",
       "      <td>1017.7</td>\n",
       "      <td>8.1</td>\n",
       "      <td>14.8</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2010</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>0.243390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116349</th>\n",
       "      <td>Dhanbad</td>\n",
       "      <td>13.0</td>\n",
       "      <td>24.6</td>\n",
       "      <td>0.4</td>\n",
       "      <td>ESE</td>\n",
       "      <td>41.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>ESE</td>\n",
       "      <td>20.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1021.8</td>\n",
       "      <td>1019.5</td>\n",
       "      <td>14.5</td>\n",
       "      <td>22.7</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2011</td>\n",
       "      <td>3</td>\n",
       "      <td>14</td>\n",
       "      <td>0.202490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116364</th>\n",
       "      <td>Ranchi</td>\n",
       "      <td>7.7</td>\n",
       "      <td>21.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>E</td>\n",
       "      <td>35.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>SSE</td>\n",
       "      <td>15.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1026.7</td>\n",
       "      <td>1023.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>20.1</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2015</td>\n",
       "      <td>5</td>\n",
       "      <td>29</td>\n",
       "      <td>0.188578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116365</th>\n",
       "      <td>Dhanbad</td>\n",
       "      <td>7.6</td>\n",
       "      <td>21.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>39.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>ESE</td>\n",
       "      <td>6.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1021.1</td>\n",
       "      <td>1019.6</td>\n",
       "      <td>13.7</td>\n",
       "      <td>21.2</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>0.202490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116367</th>\n",
       "      <td>Jabalpur</td>\n",
       "      <td>15.8</td>\n",
       "      <td>40.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>WSW</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>WSW</td>\n",
       "      <td>9.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1008.0</td>\n",
       "      <td>1005.1</td>\n",
       "      <td>30.1</td>\n",
       "      <td>33.9</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>0.198024</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>29885 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Location  MinTemp  MaxTemp  Rainfall WindGustDir  WindGustSpeed  \\\n",
       "0       Navi-Mumbai     14.5     17.8      14.2         NaN            NaN   \n",
       "9          Varanasi     22.3     27.6      11.6          SE           43.0   \n",
       "18        Ghaziabad     12.3     22.1       0.6           N           63.0   \n",
       "23            Patna      7.2     19.2       0.4           E           52.0   \n",
       "26           Meerut     12.5     21.1       0.4          SE           37.0   \n",
       "...             ...      ...      ...       ...         ...            ...   \n",
       "116344   Vijayawada      5.5     16.3       0.0         NNW           28.0   \n",
       "116349      Dhanbad     13.0     24.6       0.4         ESE           41.0   \n",
       "116364       Ranchi      7.7     21.1       0.0           E           35.0   \n",
       "116365      Dhanbad      7.6     21.7       0.0          SE           39.0   \n",
       "116367     Jabalpur     15.8     40.6       0.0         WSW           31.0   \n",
       "\n",
       "       WindDir9am WindDir3pm  WindSpeed9am  WindSpeed3pm  ...  Pressure9am  \\\n",
       "0             NaN        NaN           0.0           NaN  ...       1024.1   \n",
       "9             SSW        SSE          19.0          24.0  ...       1016.4   \n",
       "18              N          N          26.0          31.0  ...       1018.8   \n",
       "23             NW          E           6.0          33.0  ...       1025.2   \n",
       "26             SE        ESE          13.0          15.0  ...       1025.2   \n",
       "...           ...        ...           ...           ...  ...          ...   \n",
       "116344        NNW          E          17.0           4.0  ...       1021.2   \n",
       "116349         SE        ESE          20.0          19.0  ...       1021.8   \n",
       "116364         NE        SSE          15.0           9.0  ...       1026.7   \n",
       "116365         NE        ESE           6.0          17.0  ...       1021.1   \n",
       "116367         NE        WSW           9.0          13.0  ...       1008.0   \n",
       "\n",
       "        Pressure3pm  Temp9am  Temp3pm  RainToday  Task  Year  Month  Day  \\\n",
       "0            1022.5     16.2      NaN        Yes   1.0  2017      4   24   \n",
       "9            1015.2     22.7     24.5        Yes   1.0  2016      4   14   \n",
       "18           1015.2     15.8     20.3         No   0.0  2014      5   26   \n",
       "23           1025.1     12.3     17.9         No   0.0  2011      3    5   \n",
       "26           1023.3     13.0     20.1         No   0.0  2014      3   25   \n",
       "...             ...      ...      ...        ...   ...   ...    ...  ...   \n",
       "116344       1017.7      8.1     14.8         No   0.0  2010      5   17   \n",
       "116349       1019.5     14.5     22.7         No   0.0  2011      3   14   \n",
       "116364       1023.0     12.3     20.1         No   0.0  2015      5   29   \n",
       "116365       1019.6     13.7     21.2         No   0.0  2012      3   17   \n",
       "116367       1005.1     30.1     33.9         No   0.0  2012      3   12   \n",
       "\n",
       "          Counts  \n",
       "0       0.303055  \n",
       "9       0.171746  \n",
       "18      0.198753  \n",
       "23      0.211948  \n",
       "26      0.304384  \n",
       "...          ...  \n",
       "116344  0.243390  \n",
       "116349  0.202490  \n",
       "116364  0.188578  \n",
       "116365  0.202490  \n",
       "116367  0.198024  \n",
       "\n",
       "[29885 rows x 22 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Finding dataframe for each of the seasons\n",
    "spring_df = train_df[train_df[\"Month\"].isin([3, 4, 5])]\n",
    "summer_df = train_df[train_df[\"Month\"].isin([6,7,8])]\n",
    "fall_df = train_df[train_df[\"Month\"].isin([9,10,11])]\n",
    "winter_df = train_df[train_df[\"Month\"].isin([12,1,2])]\n",
    "\n",
    "seasons = [spring_df,summer_df,fall_df,winter_df]\n",
    "(spring_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>MinTemp</th>\n",
       "      <th>MaxTemp</th>\n",
       "      <th>Rainfall</th>\n",
       "      <th>WindGustDir</th>\n",
       "      <th>WindGustSpeed</th>\n",
       "      <th>WindDir9am</th>\n",
       "      <th>WindDir3pm</th>\n",
       "      <th>WindSpeed9am</th>\n",
       "      <th>WindSpeed3pm</th>\n",
       "      <th>...</th>\n",
       "      <th>Pressure9am</th>\n",
       "      <th>Pressure3pm</th>\n",
       "      <th>Temp9am</th>\n",
       "      <th>Temp3pm</th>\n",
       "      <th>RainToday</th>\n",
       "      <th>Task</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Navi-Mumbai</td>\n",
       "      <td>14.5</td>\n",
       "      <td>17.8</td>\n",
       "      <td>14.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1024.1</td>\n",
       "      <td>1022.5</td>\n",
       "      <td>16.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>4</td>\n",
       "      <td>24</td>\n",
       "      <td>0.303055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Kota</td>\n",
       "      <td>24.6</td>\n",
       "      <td>39.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>31.0</td>\n",
       "      <td>N</td>\n",
       "      <td>NW</td>\n",
       "      <td>9.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1011.8</td>\n",
       "      <td>1006.6</td>\n",
       "      <td>30.1</td>\n",
       "      <td>39.2</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2013</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>0.162162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Vadodara</td>\n",
       "      <td>14.7</td>\n",
       "      <td>26.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>SSE</td>\n",
       "      <td>30.0</td>\n",
       "      <td>SW</td>\n",
       "      <td>S</td>\n",
       "      <td>7.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1018.2</td>\n",
       "      <td>1015.4</td>\n",
       "      <td>17.3</td>\n",
       "      <td>24.5</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>0.215743</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Kanpur</td>\n",
       "      <td>18.3</td>\n",
       "      <td>26.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>28.0</td>\n",
       "      <td>WSW</td>\n",
       "      <td>SSE</td>\n",
       "      <td>11.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1017.0</td>\n",
       "      <td>1016.5</td>\n",
       "      <td>23.0</td>\n",
       "      <td>25.4</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>0.230962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Srinagar</td>\n",
       "      <td>11.4</td>\n",
       "      <td>19.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>W</td>\n",
       "      <td>31.0</td>\n",
       "      <td>SW</td>\n",
       "      <td>SSW</td>\n",
       "      <td>13.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1018.6</td>\n",
       "      <td>1017.1</td>\n",
       "      <td>14.4</td>\n",
       "      <td>18.3</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2011</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>0.216069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116363</th>\n",
       "      <td>Navi-Mumbai</td>\n",
       "      <td>10.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SW</td>\n",
       "      <td>SSE</td>\n",
       "      <td>2.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1027.2</td>\n",
       "      <td>1025.7</td>\n",
       "      <td>13.8</td>\n",
       "      <td>16.0</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2013</td>\n",
       "      <td>10</td>\n",
       "      <td>22</td>\n",
       "      <td>0.303055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116364</th>\n",
       "      <td>Ranchi</td>\n",
       "      <td>7.7</td>\n",
       "      <td>21.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>E</td>\n",
       "      <td>35.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>SSE</td>\n",
       "      <td>15.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1026.7</td>\n",
       "      <td>1023.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>20.1</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2015</td>\n",
       "      <td>5</td>\n",
       "      <td>29</td>\n",
       "      <td>0.188578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116365</th>\n",
       "      <td>Dhanbad</td>\n",
       "      <td>7.6</td>\n",
       "      <td>21.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>39.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>ESE</td>\n",
       "      <td>6.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1021.1</td>\n",
       "      <td>1019.6</td>\n",
       "      <td>13.7</td>\n",
       "      <td>21.2</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "      <td>17</td>\n",
       "      <td>0.202490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116366</th>\n",
       "      <td>Vijayawada</td>\n",
       "      <td>8.8</td>\n",
       "      <td>14.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NNE</td>\n",
       "      <td>56.0</td>\n",
       "      <td>N</td>\n",
       "      <td>NNE</td>\n",
       "      <td>19.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>...</td>\n",
       "      <td>998.7</td>\n",
       "      <td>990.9</td>\n",
       "      <td>14.1</td>\n",
       "      <td>13.6</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>6</td>\n",
       "      <td>23</td>\n",
       "      <td>0.243390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116367</th>\n",
       "      <td>Jabalpur</td>\n",
       "      <td>15.8</td>\n",
       "      <td>40.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>WSW</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>WSW</td>\n",
       "      <td>9.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1008.0</td>\n",
       "      <td>1005.1</td>\n",
       "      <td>30.1</td>\n",
       "      <td>33.9</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>0.198024</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>113761 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Location  MinTemp  MaxTemp  Rainfall WindGustDir  WindGustSpeed  \\\n",
       "0       Navi-Mumbai     14.5     17.8      14.2         NaN            NaN   \n",
       "1              Kota     24.6     39.5       0.0          SE           31.0   \n",
       "2          Vadodara     14.7     26.6       0.2         SSE           30.0   \n",
       "3            Kanpur     18.3     26.6       0.0          SE           28.0   \n",
       "4          Srinagar     11.4     19.3       0.6           W           31.0   \n",
       "...             ...      ...      ...       ...         ...            ...   \n",
       "116363  Navi-Mumbai     10.0     17.2       0.0         NaN            NaN   \n",
       "116364       Ranchi      7.7     21.1       0.0           E           35.0   \n",
       "116365      Dhanbad      7.6     21.7       0.0          SE           39.0   \n",
       "116366   Vijayawada      8.8     14.8       0.0         NNE           56.0   \n",
       "116367     Jabalpur     15.8     40.6       0.0         WSW           31.0   \n",
       "\n",
       "       WindDir9am WindDir3pm  WindSpeed9am  WindSpeed3pm  ...  Pressure9am  \\\n",
       "0             NaN        NaN           0.0           NaN  ...       1024.1   \n",
       "1               N         NW           9.0          17.0  ...       1011.8   \n",
       "2              SW          S           7.0          11.0  ...       1018.2   \n",
       "3             WSW        SSE          11.0          22.0  ...       1017.0   \n",
       "4              SW        SSW          13.0          19.0  ...       1018.6   \n",
       "...           ...        ...           ...           ...  ...          ...   \n",
       "116363         SW        SSE           2.0          15.0  ...       1027.2   \n",
       "116364         NE        SSE          15.0           9.0  ...       1026.7   \n",
       "116365         NE        ESE           6.0          17.0  ...       1021.1   \n",
       "116366          N        NNE          19.0          28.0  ...        998.7   \n",
       "116367         NE        WSW           9.0          13.0  ...       1008.0   \n",
       "\n",
       "        Pressure3pm  Temp9am  Temp3pm  RainToday  Task  Year  Month  Day  \\\n",
       "0            1022.5     16.2      NaN        Yes   1.0  2017      4   24   \n",
       "1            1006.6     30.1     39.2         No   0.0  2013     10   11   \n",
       "2            1015.4     17.3     24.5         No   0.0  2012      2   18   \n",
       "3            1016.5     23.0     25.4         No   0.0  2012      2   18   \n",
       "4            1017.1     14.4     18.3         No   0.0  2011     10   11   \n",
       "...             ...      ...      ...        ...   ...   ...    ...  ...   \n",
       "116363       1025.7     13.8     16.0         No   0.0  2013     10   22   \n",
       "116364       1023.0     12.3     20.1         No   0.0  2015      5   29   \n",
       "116365       1019.6     13.7     21.2         No   0.0  2012      3   17   \n",
       "116366        990.9     14.1     13.6         No   0.0  2014      6   23   \n",
       "116367       1005.1     30.1     33.9         No   0.0  2012      3   12   \n",
       "\n",
       "          Counts  \n",
       "0       0.303055  \n",
       "1       0.162162  \n",
       "2       0.215743  \n",
       "3       0.230962  \n",
       "4       0.216069  \n",
       "...          ...  \n",
       "116363  0.303055  \n",
       "116364  0.188578  \n",
       "116365  0.202490  \n",
       "116366  0.243390  \n",
       "116367  0.198024  \n",
       "\n",
       "[113761 rows x 22 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Filling the null values of the numerical colums with the median of the season it belongs to and\n",
    "#  categorical columns with the mode of season it  belongs to\n",
    "num_columns = train_df.select_dtypes(include=['number']).columns\n",
    "for i in seasons:\n",
    "    i[num_columns] = i[num_columns].fillna(i[num_columns].median())\n",
    "\n",
    "    categorical_columns = i.select_dtypes(include=['object']).columns\n",
    "    for column in categorical_columns:\n",
    "        mode_value = i[column].mode().iloc[0]\n",
    "        i[column].fillna(mode_value, inplace=True)\n",
    "\n",
    "train_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>MinTemp</th>\n",
       "      <th>MaxTemp</th>\n",
       "      <th>Rainfall</th>\n",
       "      <th>WindGustDir</th>\n",
       "      <th>WindGustSpeed</th>\n",
       "      <th>WindDir9am</th>\n",
       "      <th>WindDir3pm</th>\n",
       "      <th>WindSpeed9am</th>\n",
       "      <th>WindSpeed3pm</th>\n",
       "      <th>...</th>\n",
       "      <th>Pressure9am</th>\n",
       "      <th>Pressure3pm</th>\n",
       "      <th>Temp9am</th>\n",
       "      <th>Temp3pm</th>\n",
       "      <th>RainToday</th>\n",
       "      <th>Task</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Navi-Mumbai</td>\n",
       "      <td>14.5</td>\n",
       "      <td>17.8</td>\n",
       "      <td>14.2</td>\n",
       "      <td>SE</td>\n",
       "      <td>35.0</td>\n",
       "      <td>E</td>\n",
       "      <td>SE</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1024.1</td>\n",
       "      <td>1022.5</td>\n",
       "      <td>16.2</td>\n",
       "      <td>21.8</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017</td>\n",
       "      <td>4</td>\n",
       "      <td>24</td>\n",
       "      <td>0.303055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Varanasi</td>\n",
       "      <td>22.3</td>\n",
       "      <td>27.6</td>\n",
       "      <td>11.6</td>\n",
       "      <td>SE</td>\n",
       "      <td>43.0</td>\n",
       "      <td>SSW</td>\n",
       "      <td>SSE</td>\n",
       "      <td>19.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1016.4</td>\n",
       "      <td>1015.2</td>\n",
       "      <td>22.7</td>\n",
       "      <td>24.5</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2016</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "      <td>0.171746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Ghaziabad</td>\n",
       "      <td>12.3</td>\n",
       "      <td>22.1</td>\n",
       "      <td>0.6</td>\n",
       "      <td>N</td>\n",
       "      <td>63.0</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>26.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1018.8</td>\n",
       "      <td>1015.2</td>\n",
       "      <td>15.8</td>\n",
       "      <td>20.3</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>5</td>\n",
       "      <td>26</td>\n",
       "      <td>0.198753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Patna</td>\n",
       "      <td>7.2</td>\n",
       "      <td>19.2</td>\n",
       "      <td>0.4</td>\n",
       "      <td>E</td>\n",
       "      <td>52.0</td>\n",
       "      <td>NW</td>\n",
       "      <td>E</td>\n",
       "      <td>6.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1025.2</td>\n",
       "      <td>1025.1</td>\n",
       "      <td>12.3</td>\n",
       "      <td>17.9</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2011</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0.211948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Meerut</td>\n",
       "      <td>12.5</td>\n",
       "      <td>21.1</td>\n",
       "      <td>0.4</td>\n",
       "      <td>SE</td>\n",
       "      <td>37.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>ESE</td>\n",
       "      <td>13.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1025.2</td>\n",
       "      <td>1023.3</td>\n",
       "      <td>13.0</td>\n",
       "      <td>20.1</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2014</td>\n",
       "      <td>3</td>\n",
       "      <td>25</td>\n",
       "      <td>0.304384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116348</th>\n",
       "      <td>Rajkot</td>\n",
       "      <td>21.5</td>\n",
       "      <td>31.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ENE</td>\n",
       "      <td>22.0</td>\n",
       "      <td>S</td>\n",
       "      <td>ENE</td>\n",
       "      <td>4.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1017.3</td>\n",
       "      <td>1013.4</td>\n",
       "      <td>27.4</td>\n",
       "      <td>30.3</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>2</td>\n",
       "      <td>19</td>\n",
       "      <td>0.218786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116351</th>\n",
       "      <td>Vadodara</td>\n",
       "      <td>11.0</td>\n",
       "      <td>21.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>S</td>\n",
       "      <td>39.0</td>\n",
       "      <td>SSW</td>\n",
       "      <td>S</td>\n",
       "      <td>20.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1009.9</td>\n",
       "      <td>1010.3</td>\n",
       "      <td>16.5</td>\n",
       "      <td>19.2</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2011</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0.215743</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116353</th>\n",
       "      <td>Mumbai</td>\n",
       "      <td>20.1</td>\n",
       "      <td>33.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ENE</td>\n",
       "      <td>61.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>SSE</td>\n",
       "      <td>17.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1013.8</td>\n",
       "      <td>1010.6</td>\n",
       "      <td>26.7</td>\n",
       "      <td>32.5</td>\n",
       "      <td>No</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2011</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.195374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116358</th>\n",
       "      <td>Gwalior</td>\n",
       "      <td>7.5</td>\n",
       "      <td>29.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ENE</td>\n",
       "      <td>33.0</td>\n",
       "      <td>ENE</td>\n",
       "      <td>ESE</td>\n",
       "      <td>19.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1013.4</td>\n",
       "      <td>1011.3</td>\n",
       "      <td>19.9</td>\n",
       "      <td>27.5</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2016</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.157251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116359</th>\n",
       "      <td>Allahabad</td>\n",
       "      <td>15.8</td>\n",
       "      <td>34.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>41.0</td>\n",
       "      <td>SE</td>\n",
       "      <td>S</td>\n",
       "      <td>11.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1015.0</td>\n",
       "      <td>1012.3</td>\n",
       "      <td>23.5</td>\n",
       "      <td>30.5</td>\n",
       "      <td>No</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012</td>\n",
       "      <td>2</td>\n",
       "      <td>21</td>\n",
       "      <td>0.289321</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>113761 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Location  MinTemp  MaxTemp  Rainfall WindGustDir  WindGustSpeed  \\\n",
       "0       Navi-Mumbai     14.5     17.8      14.2          SE           35.0   \n",
       "9          Varanasi     22.3     27.6      11.6          SE           43.0   \n",
       "18        Ghaziabad     12.3     22.1       0.6           N           63.0   \n",
       "23            Patna      7.2     19.2       0.4           E           52.0   \n",
       "26           Meerut     12.5     21.1       0.4          SE           37.0   \n",
       "...             ...      ...      ...       ...         ...            ...   \n",
       "116348       Rajkot     21.5     31.3       0.0         ENE           22.0   \n",
       "116351     Vadodara     11.0     21.5       0.0           S           39.0   \n",
       "116353       Mumbai     20.1     33.0       0.0         ENE           61.0   \n",
       "116358      Gwalior      7.5     29.3       0.0         ENE           33.0   \n",
       "116359    Allahabad     15.8     34.0       0.0          SE           41.0   \n",
       "\n",
       "       WindDir9am WindDir3pm  WindSpeed9am  WindSpeed3pm  ...  Pressure9am  \\\n",
       "0               E         SE           0.0          17.0  ...       1024.1   \n",
       "9             SSW        SSE          19.0          24.0  ...       1016.4   \n",
       "18              N          N          26.0          31.0  ...       1018.8   \n",
       "23             NW          E           6.0          33.0  ...       1025.2   \n",
       "26             SE        ESE          13.0          15.0  ...       1025.2   \n",
       "...           ...        ...           ...           ...  ...          ...   \n",
       "116348          S        ENE           4.0          11.0  ...       1017.3   \n",
       "116351        SSW          S          20.0          26.0  ...       1009.9   \n",
       "116353         SE        SSE          17.0          22.0  ...       1013.8   \n",
       "116358        ENE        ESE          19.0          19.0  ...       1013.4   \n",
       "116359         SE          S          11.0          20.0  ...       1015.0   \n",
       "\n",
       "        Pressure3pm  Temp9am  Temp3pm  RainToday  Task  Year  Month  Day  \\\n",
       "0            1022.5     16.2     21.8        Yes   1.0  2017      4   24   \n",
       "9            1015.2     22.7     24.5        Yes   1.0  2016      4   14   \n",
       "18           1015.2     15.8     20.3         No   0.0  2014      5   26   \n",
       "23           1025.1     12.3     17.9         No   0.0  2011      3    5   \n",
       "26           1023.3     13.0     20.1         No   0.0  2014      3   25   \n",
       "...             ...      ...      ...        ...   ...   ...    ...  ...   \n",
       "116348       1013.4     27.4     30.3         No   0.0  2012      2   19   \n",
       "116351       1010.3     16.5     19.2         No   0.0  2011      1    5   \n",
       "116353       1010.6     26.7     32.5         No   1.0  2011      1    9   \n",
       "116358       1011.3     19.9     27.5         No   0.0  2016      2    4   \n",
       "116359       1012.3     23.5     30.5         No   0.0  2012      2   21   \n",
       "\n",
       "          Counts  \n",
       "0       0.303055  \n",
       "9       0.171746  \n",
       "18      0.198753  \n",
       "23      0.211948  \n",
       "26      0.304384  \n",
       "...          ...  \n",
       "116348  0.218786  \n",
       "116351  0.215743  \n",
       "116353  0.195374  \n",
       "116358  0.157251  \n",
       "116359  0.289321  \n",
       "\n",
       "[113761 rows x 22 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df = pd.concat([seasons[0],seasons[1],seasons[2],seasons[3]])\n",
    "train_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df['Task'].value_counts()\n",
    "sum = len(train_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Shuffling the rows of train_df after concatenating the seasons \n",
    "train_df = train_df.sample(frac = 1)\n",
    "train_df.reset_index(drop=True, inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "numerical_columns = train_df.select_dtypes(include=['number']).columns\n",
    "column_to_remove = 'Task'\n",
    "\n",
    "# # Remove the specified column from numerical_columns\n",
    "numerical_columns = [col for col in numerical_columns if col != column_to_remove]\n",
    "# num_plots = len(numerical_columns)\n",
    "# num_rows = num_plots // 5 + (num_plots % 5 > 0)  # Calculate the number of rows needed\n",
    "\n",
    "# fig, axes = plt.subplots(num_rows, 5, figsize=(20, 4 * num_rows))\n",
    "\n",
    "# for i, column in enumerate(numerical_columns):\n",
    "#     row_index, col_index = divmod(i, 5)\n",
    "#     sns.boxplot(data=train_df[column], ax=axes[row_index, col_index])\n",
    "#     axes[row_index, col_index].set_title(f'Box Plot for {column}')\n",
    "\n",
    "# # Remove any empty subplots in the last row\n",
    "# if num_plots % 5 > 0:\n",
    "#     for j in range(num_plots % 5, 5):\n",
    "#         fig.delaxes(axes[num_rows - 1, j])\n",
    "\n",
    "# plt.tight_layout()\n",
    "# plt.savefig('outlier.png')\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "class outlierremoval:\n",
    "    def __init__(self, col):\n",
    "        q1 = col.quantile(0.25)\n",
    "        q3 = col.quantile(0.75)\n",
    "        inter_quartile_range=q3-q1\n",
    "        self.upper_whisker=q3+inter_quartile_range*1.5\n",
    "        self.lower_whisker=q1-inter_quartile_range*1.5\n",
    "\n",
    "    def remove(self, row):\n",
    "        if(row<=self.upper_whisker and row>=self.lower_whisker):\n",
    "            return row\n",
    "        elif row < self.lower_whisker:\n",
    "            return self.lower_whisker\n",
    "        else:\n",
    "            return self.upper_whisker\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Outlier Removal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in numerical_columns:\n",
    "    if(i!='Task'):\n",
    "        remover = outlierremoval(train_df[i])\n",
    "        train_df[i]=train_df[i].apply(remover.remove)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Converting the direction into angles \n",
    "dir = {'N': 0, 'NNE': 22.5, 'NE': 45.0, 'ENE': 67.5, 'E': 90.0, 'ESE': 112.5, 'SE': 135.0, 'SSE': 157.5, 'S':\n",
    "180.0, 'SSW': 202.5, 'SW': 225.0, 'WSW': 247.5, 'W': 270.0, 'WNW': 292.5, 'NW': 315.0, 'NNW':\n",
    "337.5}\n",
    "dir_col = ['WindGustDir','WindDir9am','WindDir3pm']\n",
    "for i in dir_col:\n",
    "    train_df[i] = train_df[i].apply(lambda x: dir[x]).astype('float64')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 113761 entries, 0 to 113760\n",
      "Data columns (total 22 columns):\n",
      " #   Column         Non-Null Count   Dtype  \n",
      "---  ------         --------------   -----  \n",
      " 0   Location       113761 non-null  object \n",
      " 1   MinTemp        113761 non-null  float64\n",
      " 2   MaxTemp        113761 non-null  float64\n",
      " 3   Rainfall       113761 non-null  float64\n",
      " 4   WindGustDir    113761 non-null  float64\n",
      " 5   WindGustSpeed  113761 non-null  float64\n",
      " 6   WindDir9am     113761 non-null  float64\n",
      " 7   WindDir3pm     113761 non-null  float64\n",
      " 8   WindSpeed9am   113761 non-null  float64\n",
      " 9   WindSpeed3pm   113761 non-null  float64\n",
      " 10  Humidity9am    113761 non-null  float64\n",
      " 11  Humidity3pm    113761 non-null  float64\n",
      " 12  Pressure9am    113761 non-null  float64\n",
      " 13  Pressure3pm    113761 non-null  float64\n",
      " 14  Temp9am        113761 non-null  float64\n",
      " 15  Temp3pm        113761 non-null  float64\n",
      " 16  RainToday      113761 non-null  object \n",
      " 17  Task           113761 non-null  float64\n",
      " 18  Year           113761 non-null  int64  \n",
      " 19  Month          113761 non-null  int64  \n",
      " 20  Day            113761 non-null  int64  \n",
      " 21  Counts         113761 non-null  float64\n",
      "dtypes: float64(17), int64(3), object(2)\n",
      "memory usage: 19.1+ MB\n"
     ]
    }
   ],
   "source": [
    "train_df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Converting train_df to have equal number of Task 0's and 1's"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "category0 = train_df[train_df['Task'] == 0]\n",
    "category1 = train_df[train_df['Task'] == 1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "62847"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "diff = len(category0) - len(category1)\n",
    "class_0_size = len(category0)\n",
    "class_1_size = len(category1)\n",
    "diff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Task\n",
       "0.0    56881\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here we decrease the number of 0s to bring it to half of total number of rows\n",
    "num_rows_to_drop = int((class_0_size - sum/2) )\n",
    "\n",
    "# Randomly sample the rows to drop\n",
    "rows_to_drop = category0.sample(n=num_rows_to_drop, random_state=42)\n",
    "\n",
    "# Create a new DataFrame excluding the sampled rows\n",
    "category0 = category0.drop(rows_to_drop.index)\n",
    "\n",
    "category0.reset_index(drop=True, inplace=True)\n",
    "category0['Task'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "31424"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "diff = len(category0) - len(category1)\n",
    "class_0_size = len(category0)\n",
    "class_1_size = len(category1)\n",
    "diff\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Task\n",
       "0.0    56881\n",
       "1.0    56881\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Ḥere we increase the number of 1's to half of total number of rows\n",
    "category1_oversampled = category1.sample(n=class_0_size, replace=True,random_state=42)\n",
    "\n",
    "# Concatenate the oversampled class 1 with the original class 0\n",
    "train_df = pd.concat([category0, category1_oversampled])\n",
    "train_df['Task'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location         0\n",
       "MinTemp          0\n",
       "MaxTemp          0\n",
       "Rainfall         0\n",
       "WindGustDir      0\n",
       "WindGustSpeed    0\n",
       "WindDir9am       0\n",
       "WindDir3pm       0\n",
       "WindSpeed9am     0\n",
       "WindSpeed3pm     0\n",
       "Humidity9am      0\n",
       "Humidity3pm      0\n",
       "Pressure9am      0\n",
       "Pressure3pm      0\n",
       "Temp9am          0\n",
       "Temp3pm          0\n",
       "RainToday        0\n",
       "Task             0\n",
       "Year             0\n",
       "Month            0\n",
       "Day              0\n",
       "Counts           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df = train_df.sample(frac = 1)\n",
    "train_df.reset_index(drop=True, inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Location         0\n",
       "MinTemp          0\n",
       "MaxTemp          0\n",
       "Rainfall         0\n",
       "WindGustDir      0\n",
       "WindGustSpeed    0\n",
       "WindDir9am       0\n",
       "WindDir3pm       0\n",
       "WindSpeed9am     0\n",
       "WindSpeed3pm     0\n",
       "Humidity9am      0\n",
       "Humidity3pm      0\n",
       "Pressure9am      0\n",
       "Pressure3pm      0\n",
       "Temp9am          0\n",
       "Temp3pm          0\n",
       "RainToday        0\n",
       "Task             0\n",
       "Year             0\n",
       "Month            0\n",
       "Day              0\n",
       "Counts           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = train_df.drop('Task', axis=1)\n",
    "Y = train_df['Task']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install category_encoders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "import category_encoders as ce\n",
    "encoder = ce.TargetEncoder(cols=categorical_columns)\n",
    "X = encoder.fit_transform(X, Y)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df = X.copy()\n",
    "train_df[\"Task\"] = Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "# plt.figure(figsize=(20,20))\n",
    "# sns.heatmap(train_df.corr(), cmap=\"YlGnBu\", annot=True)\n",
    "# plt.savefig(\"corellation.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>MinTemp</th>\n",
       "      <th>MaxTemp</th>\n",
       "      <th>Rainfall</th>\n",
       "      <th>WindGustDir</th>\n",
       "      <th>WindGustSpeed</th>\n",
       "      <th>WindDir9am</th>\n",
       "      <th>WindDir3pm</th>\n",
       "      <th>WindSpeed9am</th>\n",
       "      <th>WindSpeed3pm</th>\n",
       "      <th>...</th>\n",
       "      <th>Humidity3pm</th>\n",
       "      <th>Pressure9am</th>\n",
       "      <th>Pressure3pm</th>\n",
       "      <th>Temp9am</th>\n",
       "      <th>Temp3pm</th>\n",
       "      <th>RainToday</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.470458</td>\n",
       "      <td>2.9</td>\n",
       "      <td>22.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.552399</td>\n",
       "      <td>68.5</td>\n",
       "      <td>0.556179</td>\n",
       "      <td>0.500340</td>\n",
       "      <td>19.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>...</td>\n",
       "      <td>31.0</td>\n",
       "      <td>1008.9</td>\n",
       "      <td>1007.4</td>\n",
       "      <td>15.8</td>\n",
       "      <td>19.8</td>\n",
       "      <td>0.389544</td>\n",
       "      <td>2016</td>\n",
       "      <td>9</td>\n",
       "      <td>27</td>\n",
       "      <td>0.193112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.429603</td>\n",
       "      <td>18.0</td>\n",
       "      <td>30.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.385161</td>\n",
       "      <td>48.0</td>\n",
       "      <td>0.380682</td>\n",
       "      <td>0.425255</td>\n",
       "      <td>26.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>...</td>\n",
       "      <td>27.0</td>\n",
       "      <td>1019.7</td>\n",
       "      <td>1017.9</td>\n",
       "      <td>23.1</td>\n",
       "      <td>28.9</td>\n",
       "      <td>0.389544</td>\n",
       "      <td>2012</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>0.179691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.560096</td>\n",
       "      <td>22.7</td>\n",
       "      <td>27.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.392328</td>\n",
       "      <td>37.0</td>\n",
       "      <td>0.425889</td>\n",
       "      <td>0.412293</td>\n",
       "      <td>28.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>...</td>\n",
       "      <td>82.0</td>\n",
       "      <td>1021.8</td>\n",
       "      <td>1018.8</td>\n",
       "      <td>25.2</td>\n",
       "      <td>25.4</td>\n",
       "      <td>0.389544</td>\n",
       "      <td>2011</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>0.252982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.507879</td>\n",
       "      <td>11.4</td>\n",
       "      <td>13.5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.552399</td>\n",
       "      <td>41.0</td>\n",
       "      <td>0.425889</td>\n",
       "      <td>0.451711</td>\n",
       "      <td>9.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>...</td>\n",
       "      <td>72.0</td>\n",
       "      <td>1008.8</td>\n",
       "      <td>1008.5</td>\n",
       "      <td>9.7</td>\n",
       "      <td>13.3</td>\n",
       "      <td>0.751824</td>\n",
       "      <td>2009</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>0.230012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.440074</td>\n",
       "      <td>16.2</td>\n",
       "      <td>26.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.466211</td>\n",
       "      <td>41.0</td>\n",
       "      <td>0.494542</td>\n",
       "      <td>0.412293</td>\n",
       "      <td>9.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>...</td>\n",
       "      <td>42.0</td>\n",
       "      <td>1022.9</td>\n",
       "      <td>1022.8</td>\n",
       "      <td>19.8</td>\n",
       "      <td>25.1</td>\n",
       "      <td>0.389544</td>\n",
       "      <td>2010</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>0.182358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113757</th>\n",
       "      <td>0.560096</td>\n",
       "      <td>13.4</td>\n",
       "      <td>21.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.510914</td>\n",
       "      <td>54.0</td>\n",
       "      <td>0.462232</td>\n",
       "      <td>0.488865</td>\n",
       "      <td>28.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>...</td>\n",
       "      <td>60.0</td>\n",
       "      <td>1021.8</td>\n",
       "      <td>1020.2</td>\n",
       "      <td>18.3</td>\n",
       "      <td>19.7</td>\n",
       "      <td>0.389544</td>\n",
       "      <td>2009</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "      <td>0.252982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113758</th>\n",
       "      <td>0.606463</td>\n",
       "      <td>10.4</td>\n",
       "      <td>19.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.578037</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.609205</td>\n",
       "      <td>0.587249</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>59.0</td>\n",
       "      <td>1000.8</td>\n",
       "      <td>998.4</td>\n",
       "      <td>17.0</td>\n",
       "      <td>17.8</td>\n",
       "      <td>0.751824</td>\n",
       "      <td>2011</td>\n",
       "      <td>7</td>\n",
       "      <td>28</td>\n",
       "      <td>0.303055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113759</th>\n",
       "      <td>0.533546</td>\n",
       "      <td>10.2</td>\n",
       "      <td>13.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.578037</td>\n",
       "      <td>63.0</td>\n",
       "      <td>0.556179</td>\n",
       "      <td>0.573774</td>\n",
       "      <td>20.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>...</td>\n",
       "      <td>63.0</td>\n",
       "      <td>1003.8</td>\n",
       "      <td>998.4</td>\n",
       "      <td>11.2</td>\n",
       "      <td>13.3</td>\n",
       "      <td>0.389544</td>\n",
       "      <td>2016</td>\n",
       "      <td>6</td>\n",
       "      <td>23</td>\n",
       "      <td>0.245599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113760</th>\n",
       "      <td>0.559767</td>\n",
       "      <td>15.9</td>\n",
       "      <td>27.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.510914</td>\n",
       "      <td>33.0</td>\n",
       "      <td>0.494542</td>\n",
       "      <td>0.451711</td>\n",
       "      <td>7.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>43.0</td>\n",
       "      <td>1013.2</td>\n",
       "      <td>1011.8</td>\n",
       "      <td>19.0</td>\n",
       "      <td>24.3</td>\n",
       "      <td>0.389544</td>\n",
       "      <td>2009</td>\n",
       "      <td>12</td>\n",
       "      <td>22</td>\n",
       "      <td>0.198753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113761</th>\n",
       "      <td>0.446650</td>\n",
       "      <td>6.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.578037</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.556179</td>\n",
       "      <td>0.580181</td>\n",
       "      <td>13.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>...</td>\n",
       "      <td>46.0</td>\n",
       "      <td>1021.8</td>\n",
       "      <td>1017.9</td>\n",
       "      <td>13.7</td>\n",
       "      <td>18.6</td>\n",
       "      <td>0.751824</td>\n",
       "      <td>2009</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>0.167506</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>113762 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Location  MinTemp  MaxTemp  Rainfall  WindGustDir  WindGustSpeed  \\\n",
       "0       0.470458      2.9     22.0       0.0     0.552399           68.5   \n",
       "1       0.429603     18.0     30.3       0.0     0.385161           48.0   \n",
       "2       0.560096     22.7     27.8       0.0     0.392328           37.0   \n",
       "3       0.507879     11.4     13.5       1.5     0.552399           41.0   \n",
       "4       0.440074     16.2     26.1       0.0     0.466211           41.0   \n",
       "...          ...      ...      ...       ...          ...            ...   \n",
       "113757  0.560096     13.4     21.1       0.0     0.510914           54.0   \n",
       "113758  0.606463     10.4     19.5       1.4     0.578037           35.0   \n",
       "113759  0.533546     10.2     13.8       0.0     0.578037           63.0   \n",
       "113760  0.559767     15.9     27.5       0.0     0.510914           33.0   \n",
       "113761  0.446650      6.0     18.9       1.5     0.578037           24.0   \n",
       "\n",
       "        WindDir9am  WindDir3pm  WindSpeed9am  WindSpeed3pm  ...  Humidity3pm  \\\n",
       "0         0.556179    0.500340          19.0          28.0  ...         31.0   \n",
       "1         0.380682    0.425255          26.0          20.0  ...         27.0   \n",
       "2         0.425889    0.412293          28.0          30.0  ...         82.0   \n",
       "3         0.425889    0.451711           9.0          22.0  ...         72.0   \n",
       "4         0.494542    0.412293           9.0          28.0  ...         42.0   \n",
       "...            ...         ...           ...           ...  ...          ...   \n",
       "113757    0.462232    0.488865          28.0          30.0  ...         60.0   \n",
       "113758    0.609205    0.587249          15.0          15.0  ...         59.0   \n",
       "113759    0.556179    0.573774          20.0          24.0  ...         63.0   \n",
       "113760    0.494542    0.451711           7.0          15.0  ...         43.0   \n",
       "113761    0.556179    0.580181          13.0          17.0  ...         46.0   \n",
       "\n",
       "        Pressure9am  Pressure3pm  Temp9am  Temp3pm  RainToday  Year  Month  \\\n",
       "0            1008.9       1007.4     15.8     19.8   0.389544  2016      9   \n",
       "1            1019.7       1017.9     23.1     28.9   0.389544  2012      1   \n",
       "2            1021.8       1018.8     25.2     25.4   0.389544  2011      3   \n",
       "3            1008.8       1008.5      9.7     13.3   0.751824  2009      9   \n",
       "4            1022.9       1022.8     19.8     25.1   0.389544  2010      2   \n",
       "...             ...          ...      ...      ...        ...   ...    ...   \n",
       "113757       1021.8       1020.2     18.3     19.7   0.389544  2009      6   \n",
       "113758       1000.8        998.4     17.0     17.8   0.751824  2011      7   \n",
       "113759       1003.8        998.4     11.2     13.3   0.389544  2016      6   \n",
       "113760       1013.2       1011.8     19.0     24.3   0.389544  2009     12   \n",
       "113761       1021.8       1017.9     13.7     18.6   0.751824  2009      9   \n",
       "\n",
       "        Day    Counts  \n",
       "0        27  0.193112  \n",
       "1        22  0.179691  \n",
       "2        13  0.252982  \n",
       "3         8  0.230012  \n",
       "4        18  0.182358  \n",
       "...     ...       ...  \n",
       "113757   18  0.252982  \n",
       "113758   28  0.303055  \n",
       "113759   23  0.245599  \n",
       "113760   22  0.198753  \n",
       "113761    8  0.167506  \n",
       "\n",
       "[113762 rows x 21 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         0.0\n",
       "1         0.0\n",
       "2         0.0\n",
       "3         1.0\n",
       "4         0.0\n",
       "         ... \n",
       "113757    0.0\n",
       "113758    1.0\n",
       "113759    1.0\n",
       "113760    0.0\n",
       "113761    0.0\n",
       "Name: Task, Length: 113762, dtype: float64"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # Here we use xgboost with validation set, to choose the best model\n",
    "# from sklearn.model_selection import train_test_split\n",
    "# import xgboost as xgb\n",
    "\n",
    "# X_train, X_valid, y_train, y_valid = train_test_split(X, Y, test_size=0.05, random_state=42)\n",
    "\n",
    "# dtrain = xgb.DMatrix(X_train, label=y_train)\n",
    "# dvalid = xgb.DMatrix(X_valid, label=y_valid)\n",
    "\n",
    "# params = {\n",
    "#     'objective': 'binary:logistic',\n",
    "#     'max_depth': 8,\n",
    "#     'learning_rate': 0.05,\n",
    "#     'eval_metric': 'logloss',\n",
    "#     'n_estimators':750,\n",
    "#     'min_child_weight':1,\n",
    "#     'subsample':0.6,\n",
    "#     'colsample_bytree': 1.0,\n",
    "#     'gamma':0.5,\n",
    "#     'reg_alpha':0.1,\n",
    "#     'reg_lambda':2\n",
    "# }\n",
    "\n",
    "# num_boost_round = 500\n",
    "\n",
    "# evals = [(dvalid, 'eval')]\n",
    "# early_stopping_rounds = 10\n",
    "\n",
    "# xgb_model = xgb.train(params, dtrain, num_boost_round=num_boost_round, evals=evals, early_stopping_rounds=early_stopping_rounds)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier, VotingClassifier\n",
    "from sklearn.svm import SVC\n",
    "from xgboost import XGBClassifier\n",
    "from lightgbm import LGBMClassifier\n",
    "from catboost import CatBoostClassifier\n",
    "from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n",
    "from sklearn.datasets import make_classification\n",
    "\n",
    "X_train = X\n",
    "y_train = Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,\n",
       "              device=None, early_stopping_rounds=None, enable_categorical=False,\n",
       "              eval_metric=None, feature_types=None, gamma=0.5, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.05, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=8,\n",
       "              max_leaves=None, min_child_weight=1, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=750,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=42, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,\n",
       "              device=None, early_stopping_rounds=None, enable_categorical=False,\n",
       "              eval_metric=None, feature_types=None, gamma=0.5, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.05, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=8,\n",
       "              max_leaves=None, min_child_weight=1, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=750,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=42, ...)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,\n",
       "              device=None, early_stopping_rounds=None, enable_categorical=False,\n",
       "              eval_metric=None, feature_types=None, gamma=0.5, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.05, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=8,\n",
       "              max_leaves=None, min_child_weight=1, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=750,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=42, ...)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_xgb = XGBClassifier(\n",
    "    learning_rate=0.05,\n",
    "    n_estimators=750,\n",
    "    max_depth=8,\n",
    "    min_child_weight=1,\n",
    "    gamma=0.5,\n",
    "    subsample=0.6,\n",
    "    colsample_bytree=1,\n",
    "    reg_alpha=0.1,\n",
    "    random_state=42,\n",
    "    reg_lambda=2\n",
    ")\n",
    "\n",
    "model_xgb.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[LightGBM] [Info] Number of positive: 56881, number of negative: 56881\n",
      "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.008486 seconds.\n",
      "You can set `force_col_wise=true` to remove the overhead.\n",
      "[LightGBM] [Info] Total Bins 2020\n",
      "[LightGBM] [Info] Number of data points in the train set: 113762, number of used features: 21\n",
      "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LGBMClassifier(colsample_bytree=1, learning_rate=0.05, max_depth=8,\n",
       "               n_estimators=750, num_leaves=4, random_state=42, reg_alpha=0.1,\n",
       "               subsample=0.6)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LGBMClassifier</label><div class=\"sk-toggleable__content\"><pre>LGBMClassifier(colsample_bytree=1, learning_rate=0.05, max_depth=8,\n",
       "               n_estimators=750, num_leaves=4, random_state=42, reg_alpha=0.1,\n",
       "               subsample=0.6)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LGBMClassifier(colsample_bytree=1, learning_rate=0.05, max_depth=8,\n",
       "               n_estimators=750, num_leaves=4, random_state=42, reg_alpha=0.1,\n",
       "               subsample=0.6)"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_lgbm = LGBMClassifier(\n",
    "    learning_rate=0.05,\n",
    "    n_estimators=750,\n",
    "    max_depth=8,\n",
    "    subsample=0.6,\n",
    "    colsample_bytree=1,\n",
    "    reg_alpha=0.1,\n",
    "    random_state=42,\n",
    "    num_leaves=4\n",
    ")\n",
    "\n",
    "model_lgbm.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0:\tlearn: 0.6481974\ttotal: 164ms\tremaining: 1m 21s\n",
      "1:\tlearn: 0.6132391\ttotal: 181ms\tremaining: 45.1s\n",
      "2:\tlearn: 0.5873360\ttotal: 198ms\tremaining: 32.7s\n",
      "3:\tlearn: 0.5670161\ttotal: 216ms\tremaining: 26.8s\n",
      "4:\tlearn: 0.5498595\ttotal: 234ms\tremaining: 23.2s\n",
      "5:\tlearn: 0.5346506\ttotal: 251ms\tremaining: 20.7s\n",
      "6:\tlearn: 0.5222284\ttotal: 272ms\tremaining: 19.1s\n",
      "7:\tlearn: 0.5126557\ttotal: 292ms\tremaining: 18s\n",
      "8:\tlearn: 0.5052121\ttotal: 313ms\tremaining: 17.1s\n",
      "9:\tlearn: 0.4989817\ttotal: 338ms\tremaining: 16.5s\n",
      "10:\tlearn: 0.4934037\ttotal: 357ms\tremaining: 15.8s\n",
      "11:\tlearn: 0.4879776\ttotal: 380ms\tremaining: 15.4s\n",
      "12:\tlearn: 0.4841587\ttotal: 403ms\tremaining: 15.1s\n",
      "13:\tlearn: 0.4806399\ttotal: 426ms\tremaining: 14.8s\n",
      "14:\tlearn: 0.4772098\ttotal: 448ms\tremaining: 14.5s\n",
      "15:\tlearn: 0.4739294\ttotal: 471ms\tremaining: 14.3s\n",
      "16:\tlearn: 0.4714404\ttotal: 493ms\tremaining: 14s\n",
      "17:\tlearn: 0.4690203\ttotal: 515ms\tremaining: 13.8s\n",
      "18:\tlearn: 0.4666430\ttotal: 539ms\tremaining: 13.6s\n",
      "19:\tlearn: 0.4646009\ttotal: 560ms\tremaining: 13.4s\n",
      "20:\tlearn: 0.4624483\ttotal: 586ms\tremaining: 13.4s\n",
      "21:\tlearn: 0.4607643\ttotal: 611ms\tremaining: 13.3s\n",
      "22:\tlearn: 0.4594271\ttotal: 637ms\tremaining: 13.2s\n",
      "23:\tlearn: 0.4575935\ttotal: 656ms\tremaining: 13s\n",
      "24:\tlearn: 0.4560619\ttotal: 675ms\tremaining: 12.8s\n",
      "25:\tlearn: 0.4545588\ttotal: 692ms\tremaining: 12.6s\n",
      "26:\tlearn: 0.4532975\ttotal: 709ms\tremaining: 12.4s\n",
      "27:\tlearn: 0.4522048\ttotal: 727ms\tremaining: 12.3s\n",
      "28:\tlearn: 0.4512019\ttotal: 744ms\tremaining: 12.1s\n",
      "29:\tlearn: 0.4497717\ttotal: 762ms\tremaining: 11.9s\n",
      "30:\tlearn: 0.4486225\ttotal: 780ms\tremaining: 11.8s\n",
      "31:\tlearn: 0.4478355\ttotal: 796ms\tremaining: 11.6s\n",
      "32:\tlearn: 0.4468437\ttotal: 817ms\tremaining: 11.6s\n",
      "33:\tlearn: 0.4460566\ttotal: 839ms\tremaining: 11.5s\n",
      "34:\tlearn: 0.4450856\ttotal: 858ms\tremaining: 11.4s\n",
      "35:\tlearn: 0.4441608\ttotal: 874ms\tremaining: 11.3s\n",
      "36:\tlearn: 0.4431290\ttotal: 893ms\tremaining: 11.2s\n",
      "37:\tlearn: 0.4422189\ttotal: 912ms\tremaining: 11.1s\n",
      "38:\tlearn: 0.4414307\ttotal: 930ms\tremaining: 11s\n",
      "39:\tlearn: 0.4405960\ttotal: 947ms\tremaining: 10.9s\n",
      "40:\tlearn: 0.4395743\ttotal: 964ms\tremaining: 10.8s\n",
      "41:\tlearn: 0.4388400\ttotal: 982ms\tremaining: 10.7s\n",
      "42:\tlearn: 0.4380693\ttotal: 1000ms\tremaining: 10.6s\n",
      "43:\tlearn: 0.4372096\ttotal: 1.02s\tremaining: 10.6s\n",
      "44:\tlearn: 0.4365575\ttotal: 1.03s\tremaining: 10.5s\n",
      "45:\tlearn: 0.4359455\ttotal: 1.05s\tremaining: 10.4s\n",
      "46:\tlearn: 0.4352182\ttotal: 1.07s\tremaining: 10.4s\n",
      "47:\tlearn: 0.4344915\ttotal: 1.09s\tremaining: 10.3s\n",
      "48:\tlearn: 0.4339844\ttotal: 1.11s\tremaining: 10.2s\n",
      "49:\tlearn: 0.4332232\ttotal: 1.13s\tremaining: 10.1s\n",
      "50:\tlearn: 0.4322423\ttotal: 1.15s\tremaining: 10.1s\n",
      "51:\tlearn: 0.4317429\ttotal: 1.16s\tremaining: 10s\n",
      "52:\tlearn: 0.4309024\ttotal: 1.18s\tremaining: 9.95s\n",
      "53:\tlearn: 0.4301731\ttotal: 1.2s\tremaining: 9.88s\n",
      "54:\tlearn: 0.4295995\ttotal: 1.21s\tremaining: 9.8s\n",
      "55:\tlearn: 0.4290265\ttotal: 1.23s\tremaining: 9.74s\n",
      "56:\tlearn: 0.4283908\ttotal: 1.25s\tremaining: 9.68s\n",
      "57:\tlearn: 0.4277163\ttotal: 1.27s\tremaining: 9.65s\n",
      "58:\tlearn: 0.4271775\ttotal: 1.29s\tremaining: 9.64s\n",
      "59:\tlearn: 0.4266029\ttotal: 1.31s\tremaining: 9.6s\n",
      "60:\tlearn: 0.4259887\ttotal: 1.33s\tremaining: 9.55s\n",
      "61:\tlearn: 0.4252893\ttotal: 1.34s\tremaining: 9.51s\n",
      "62:\tlearn: 0.4244404\ttotal: 1.36s\tremaining: 9.46s\n",
      "63:\tlearn: 0.4239101\ttotal: 1.38s\tremaining: 9.4s\n",
      "64:\tlearn: 0.4233110\ttotal: 1.4s\tremaining: 9.35s\n",
      "65:\tlearn: 0.4228212\ttotal: 1.41s\tremaining: 9.3s\n",
      "66:\tlearn: 0.4221198\ttotal: 1.43s\tremaining: 9.26s\n",
      "67:\tlearn: 0.4214123\ttotal: 1.45s\tremaining: 9.21s\n",
      "68:\tlearn: 0.4209371\ttotal: 1.47s\tremaining: 9.16s\n",
      "69:\tlearn: 0.4201275\ttotal: 1.49s\tremaining: 9.14s\n",
      "70:\tlearn: 0.4195140\ttotal: 1.51s\tremaining: 9.11s\n",
      "71:\tlearn: 0.4189901\ttotal: 1.52s\tremaining: 9.06s\n",
      "72:\tlearn: 0.4184057\ttotal: 1.54s\tremaining: 9.02s\n",
      "73:\tlearn: 0.4179484\ttotal: 1.56s\tremaining: 8.97s\n",
      "74:\tlearn: 0.4174019\ttotal: 1.57s\tremaining: 8.92s\n",
      "75:\tlearn: 0.4166372\ttotal: 1.59s\tremaining: 8.88s\n",
      "76:\tlearn: 0.4159930\ttotal: 1.61s\tremaining: 8.85s\n",
      "77:\tlearn: 0.4152109\ttotal: 1.63s\tremaining: 8.82s\n",
      "78:\tlearn: 0.4144652\ttotal: 1.65s\tremaining: 8.78s\n",
      "79:\tlearn: 0.4138346\ttotal: 1.66s\tremaining: 8.73s\n",
      "80:\tlearn: 0.4134500\ttotal: 1.68s\tremaining: 8.7s\n",
      "81:\tlearn: 0.4130115\ttotal: 1.7s\tremaining: 8.67s\n",
      "82:\tlearn: 0.4124637\ttotal: 1.72s\tremaining: 8.64s\n",
      "83:\tlearn: 0.4119634\ttotal: 1.74s\tremaining: 8.61s\n",
      "84:\tlearn: 0.4112715\ttotal: 1.76s\tremaining: 8.57s\n",
      "85:\tlearn: 0.4108024\ttotal: 1.77s\tremaining: 8.54s\n",
      "86:\tlearn: 0.4104974\ttotal: 1.79s\tremaining: 8.5s\n",
      "87:\tlearn: 0.4099704\ttotal: 1.81s\tremaining: 8.47s\n",
      "88:\tlearn: 0.4093609\ttotal: 1.82s\tremaining: 8.43s\n",
      "89:\tlearn: 0.4088832\ttotal: 1.84s\tremaining: 8.4s\n",
      "90:\tlearn: 0.4081269\ttotal: 1.86s\tremaining: 8.37s\n",
      "91:\tlearn: 0.4075088\ttotal: 1.88s\tremaining: 8.34s\n",
      "92:\tlearn: 0.4067476\ttotal: 1.9s\tremaining: 8.31s\n",
      "93:\tlearn: 0.4064231\ttotal: 1.92s\tremaining: 8.27s\n",
      "94:\tlearn: 0.4059659\ttotal: 1.94s\tremaining: 8.26s\n",
      "95:\tlearn: 0.4054307\ttotal: 1.96s\tremaining: 8.23s\n",
      "96:\tlearn: 0.4050239\ttotal: 1.97s\tremaining: 8.2s\n",
      "97:\tlearn: 0.4047187\ttotal: 1.99s\tremaining: 8.17s\n",
      "98:\tlearn: 0.4042154\ttotal: 2.01s\tremaining: 8.13s\n",
      "99:\tlearn: 0.4038038\ttotal: 2.03s\tremaining: 8.11s\n",
      "100:\tlearn: 0.4032556\ttotal: 2.05s\tremaining: 8.09s\n",
      "101:\tlearn: 0.4026434\ttotal: 2.07s\tremaining: 8.06s\n",
      "102:\tlearn: 0.4021713\ttotal: 2.08s\tremaining: 8.03s\n",
      "103:\tlearn: 0.4016961\ttotal: 2.1s\tremaining: 8s\n",
      "104:\tlearn: 0.4012272\ttotal: 2.12s\tremaining: 7.98s\n",
      "105:\tlearn: 0.4009487\ttotal: 2.14s\tremaining: 7.97s\n",
      "106:\tlearn: 0.4004641\ttotal: 2.16s\tremaining: 7.94s\n",
      "107:\tlearn: 0.4000781\ttotal: 2.18s\tremaining: 7.91s\n",
      "108:\tlearn: 0.3995329\ttotal: 2.2s\tremaining: 7.88s\n",
      "109:\tlearn: 0.3990069\ttotal: 2.21s\tremaining: 7.86s\n",
      "110:\tlearn: 0.3986390\ttotal: 2.23s\tremaining: 7.82s\n",
      "111:\tlearn: 0.3980677\ttotal: 2.25s\tremaining: 7.79s\n",
      "112:\tlearn: 0.3975777\ttotal: 2.27s\tremaining: 7.77s\n",
      "113:\tlearn: 0.3970932\ttotal: 2.29s\tremaining: 7.74s\n",
      "114:\tlearn: 0.3963167\ttotal: 2.31s\tremaining: 7.72s\n",
      "115:\tlearn: 0.3958280\ttotal: 2.33s\tremaining: 7.7s\n",
      "116:\tlearn: 0.3954328\ttotal: 2.35s\tremaining: 7.68s\n",
      "117:\tlearn: 0.3951083\ttotal: 2.37s\tremaining: 7.67s\n",
      "118:\tlearn: 0.3945788\ttotal: 2.39s\tremaining: 7.64s\n",
      "119:\tlearn: 0.3939444\ttotal: 2.41s\tremaining: 7.62s\n",
      "120:\tlearn: 0.3934700\ttotal: 2.42s\tremaining: 7.59s\n",
      "121:\tlearn: 0.3930988\ttotal: 2.44s\tremaining: 7.57s\n",
      "122:\tlearn: 0.3926321\ttotal: 2.46s\tremaining: 7.54s\n",
      "123:\tlearn: 0.3921010\ttotal: 2.48s\tremaining: 7.51s\n",
      "124:\tlearn: 0.3917470\ttotal: 2.49s\tremaining: 7.48s\n",
      "125:\tlearn: 0.3912472\ttotal: 2.51s\tremaining: 7.45s\n",
      "126:\tlearn: 0.3908063\ttotal: 2.53s\tremaining: 7.43s\n",
      "127:\tlearn: 0.3904035\ttotal: 2.55s\tremaining: 7.4s\n",
      "128:\tlearn: 0.3897958\ttotal: 2.57s\tremaining: 7.38s\n",
      "129:\tlearn: 0.3892977\ttotal: 2.59s\tremaining: 7.36s\n",
      "130:\tlearn: 0.3888215\ttotal: 2.6s\tremaining: 7.34s\n",
      "131:\tlearn: 0.3883825\ttotal: 2.62s\tremaining: 7.32s\n",
      "132:\tlearn: 0.3878710\ttotal: 2.64s\tremaining: 7.29s\n",
      "133:\tlearn: 0.3873359\ttotal: 2.66s\tremaining: 7.26s\n",
      "134:\tlearn: 0.3870444\ttotal: 2.67s\tremaining: 7.23s\n",
      "135:\tlearn: 0.3866687\ttotal: 2.69s\tremaining: 7.21s\n",
      "136:\tlearn: 0.3862841\ttotal: 2.71s\tremaining: 7.18s\n",
      "137:\tlearn: 0.3857571\ttotal: 2.73s\tremaining: 7.15s\n",
      "138:\tlearn: 0.3852237\ttotal: 2.74s\tremaining: 7.13s\n",
      "139:\tlearn: 0.3848454\ttotal: 2.76s\tremaining: 7.11s\n",
      "140:\tlearn: 0.3845735\ttotal: 2.78s\tremaining: 7.08s\n",
      "141:\tlearn: 0.3841837\ttotal: 2.8s\tremaining: 7.06s\n",
      "142:\tlearn: 0.3836160\ttotal: 2.82s\tremaining: 7.04s\n",
      "143:\tlearn: 0.3831407\ttotal: 2.84s\tremaining: 7.01s\n",
      "144:\tlearn: 0.3827877\ttotal: 2.85s\tremaining: 6.99s\n",
      "145:\tlearn: 0.3822213\ttotal: 2.88s\tremaining: 6.97s\n",
      "146:\tlearn: 0.3816035\ttotal: 2.89s\tremaining: 6.95s\n",
      "147:\tlearn: 0.3812336\ttotal: 2.91s\tremaining: 6.92s\n",
      "148:\tlearn: 0.3808577\ttotal: 2.93s\tremaining: 6.9s\n",
      "149:\tlearn: 0.3801954\ttotal: 2.95s\tremaining: 6.88s\n",
      "150:\tlearn: 0.3796989\ttotal: 2.97s\tremaining: 6.86s\n",
      "151:\tlearn: 0.3793348\ttotal: 2.99s\tremaining: 6.84s\n",
      "152:\tlearn: 0.3788843\ttotal: 3.01s\tremaining: 6.82s\n",
      "153:\tlearn: 0.3783291\ttotal: 3.02s\tremaining: 6.79s\n",
      "154:\tlearn: 0.3776486\ttotal: 3.04s\tremaining: 6.77s\n",
      "155:\tlearn: 0.3772182\ttotal: 3.06s\tremaining: 6.75s\n",
      "156:\tlearn: 0.3767964\ttotal: 3.08s\tremaining: 6.73s\n",
      "157:\tlearn: 0.3763543\ttotal: 3.1s\tremaining: 6.7s\n",
      "158:\tlearn: 0.3760447\ttotal: 3.11s\tremaining: 6.68s\n",
      "159:\tlearn: 0.3755730\ttotal: 3.13s\tremaining: 6.66s\n",
      "160:\tlearn: 0.3752093\ttotal: 3.15s\tremaining: 6.64s\n",
      "161:\tlearn: 0.3747544\ttotal: 3.17s\tremaining: 6.61s\n",
      "162:\tlearn: 0.3741821\ttotal: 3.19s\tremaining: 6.59s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "163:\tlearn: 0.3735257\ttotal: 3.21s\tremaining: 6.57s\n",
      "164:\tlearn: 0.3729583\ttotal: 3.23s\tremaining: 6.56s\n",
      "165:\tlearn: 0.3725307\ttotal: 3.25s\tremaining: 6.53s\n",
      "166:\tlearn: 0.3721977\ttotal: 3.26s\tremaining: 6.51s\n",
      "167:\tlearn: 0.3717120\ttotal: 3.28s\tremaining: 6.48s\n",
      "168:\tlearn: 0.3712708\ttotal: 3.3s\tremaining: 6.46s\n",
      "169:\tlearn: 0.3708315\ttotal: 3.32s\tremaining: 6.44s\n",
      "170:\tlearn: 0.3704685\ttotal: 3.33s\tremaining: 6.41s\n",
      "171:\tlearn: 0.3699860\ttotal: 3.35s\tremaining: 6.39s\n",
      "172:\tlearn: 0.3695337\ttotal: 3.37s\tremaining: 6.37s\n",
      "173:\tlearn: 0.3692383\ttotal: 3.38s\tremaining: 6.34s\n",
      "174:\tlearn: 0.3687911\ttotal: 3.4s\tremaining: 6.32s\n",
      "175:\tlearn: 0.3684708\ttotal: 3.42s\tremaining: 6.3s\n",
      "176:\tlearn: 0.3679775\ttotal: 3.44s\tremaining: 6.28s\n",
      "177:\tlearn: 0.3675312\ttotal: 3.46s\tremaining: 6.26s\n",
      "178:\tlearn: 0.3671661\ttotal: 3.48s\tremaining: 6.24s\n",
      "179:\tlearn: 0.3668329\ttotal: 3.49s\tremaining: 6.21s\n",
      "180:\tlearn: 0.3662299\ttotal: 3.51s\tremaining: 6.19s\n",
      "181:\tlearn: 0.3657643\ttotal: 3.53s\tremaining: 6.17s\n",
      "182:\tlearn: 0.3654284\ttotal: 3.55s\tremaining: 6.15s\n",
      "183:\tlearn: 0.3650777\ttotal: 3.56s\tremaining: 6.12s\n",
      "184:\tlearn: 0.3647627\ttotal: 3.58s\tremaining: 6.1s\n",
      "185:\tlearn: 0.3643467\ttotal: 3.6s\tremaining: 6.08s\n",
      "186:\tlearn: 0.3639713\ttotal: 3.62s\tremaining: 6.06s\n",
      "187:\tlearn: 0.3633988\ttotal: 3.64s\tremaining: 6.04s\n",
      "188:\tlearn: 0.3629578\ttotal: 3.66s\tremaining: 6.03s\n",
      "189:\tlearn: 0.3625058\ttotal: 3.68s\tremaining: 6s\n",
      "190:\tlearn: 0.3620800\ttotal: 3.7s\tremaining: 5.98s\n",
      "191:\tlearn: 0.3614923\ttotal: 3.72s\tremaining: 5.96s\n",
      "192:\tlearn: 0.3610268\ttotal: 3.73s\tremaining: 5.94s\n",
      "193:\tlearn: 0.3605859\ttotal: 3.75s\tremaining: 5.92s\n",
      "194:\tlearn: 0.3600531\ttotal: 3.77s\tremaining: 5.9s\n",
      "195:\tlearn: 0.3597308\ttotal: 3.79s\tremaining: 5.87s\n",
      "196:\tlearn: 0.3595257\ttotal: 3.8s\tremaining: 5.85s\n",
      "197:\tlearn: 0.3590818\ttotal: 3.82s\tremaining: 5.83s\n",
      "198:\tlearn: 0.3587041\ttotal: 3.84s\tremaining: 5.8s\n",
      "199:\tlearn: 0.3583350\ttotal: 3.86s\tremaining: 5.79s\n",
      "200:\tlearn: 0.3579737\ttotal: 3.88s\tremaining: 5.77s\n",
      "201:\tlearn: 0.3576708\ttotal: 3.9s\tremaining: 5.75s\n",
      "202:\tlearn: 0.3574916\ttotal: 3.92s\tremaining: 5.73s\n",
      "203:\tlearn: 0.3572685\ttotal: 3.94s\tremaining: 5.71s\n",
      "204:\tlearn: 0.3569740\ttotal: 3.96s\tremaining: 5.69s\n",
      "205:\tlearn: 0.3564934\ttotal: 3.98s\tremaining: 5.67s\n",
      "206:\tlearn: 0.3561830\ttotal: 3.99s\tremaining: 5.65s\n",
      "207:\tlearn: 0.3559133\ttotal: 4.01s\tremaining: 5.63s\n",
      "208:\tlearn: 0.3556601\ttotal: 4.03s\tremaining: 5.61s\n",
      "209:\tlearn: 0.3553082\ttotal: 4.04s\tremaining: 5.58s\n",
      "210:\tlearn: 0.3549642\ttotal: 4.06s\tremaining: 5.56s\n",
      "211:\tlearn: 0.3545764\ttotal: 4.08s\tremaining: 5.55s\n",
      "212:\tlearn: 0.3541223\ttotal: 4.1s\tremaining: 5.53s\n",
      "213:\tlearn: 0.3537737\ttotal: 4.12s\tremaining: 5.51s\n",
      "214:\tlearn: 0.3534969\ttotal: 4.14s\tremaining: 5.49s\n",
      "215:\tlearn: 0.3531821\ttotal: 4.16s\tremaining: 5.46s\n",
      "216:\tlearn: 0.3526972\ttotal: 4.18s\tremaining: 5.45s\n",
      "217:\tlearn: 0.3523320\ttotal: 4.19s\tremaining: 5.42s\n",
      "218:\tlearn: 0.3519063\ttotal: 4.21s\tremaining: 5.4s\n",
      "219:\tlearn: 0.3515336\ttotal: 4.23s\tremaining: 5.38s\n",
      "220:\tlearn: 0.3509922\ttotal: 4.25s\tremaining: 5.36s\n",
      "221:\tlearn: 0.3507752\ttotal: 4.26s\tremaining: 5.34s\n",
      "222:\tlearn: 0.3503641\ttotal: 4.28s\tremaining: 5.32s\n",
      "223:\tlearn: 0.3501011\ttotal: 4.3s\tremaining: 5.29s\n",
      "224:\tlearn: 0.3499247\ttotal: 4.32s\tremaining: 5.27s\n",
      "225:\tlearn: 0.3496253\ttotal: 4.33s\tremaining: 5.25s\n",
      "226:\tlearn: 0.3491459\ttotal: 4.35s\tremaining: 5.23s\n",
      "227:\tlearn: 0.3487623\ttotal: 4.37s\tremaining: 5.21s\n",
      "228:\tlearn: 0.3484202\ttotal: 4.38s\tremaining: 5.19s\n",
      "229:\tlearn: 0.3481163\ttotal: 4.4s\tremaining: 5.17s\n",
      "230:\tlearn: 0.3476209\ttotal: 4.42s\tremaining: 5.14s\n",
      "231:\tlearn: 0.3471335\ttotal: 4.44s\tremaining: 5.13s\n",
      "232:\tlearn: 0.3468558\ttotal: 4.45s\tremaining: 5.1s\n",
      "233:\tlearn: 0.3463957\ttotal: 4.47s\tremaining: 5.08s\n",
      "234:\tlearn: 0.3460112\ttotal: 4.49s\tremaining: 5.06s\n",
      "235:\tlearn: 0.3455557\ttotal: 4.51s\tremaining: 5.04s\n",
      "236:\tlearn: 0.3452237\ttotal: 4.53s\tremaining: 5.02s\n",
      "237:\tlearn: 0.3449863\ttotal: 4.54s\tremaining: 5s\n",
      "238:\tlearn: 0.3445255\ttotal: 4.56s\tremaining: 4.98s\n",
      "239:\tlearn: 0.3440823\ttotal: 4.58s\tremaining: 4.96s\n",
      "240:\tlearn: 0.3438476\ttotal: 4.6s\tremaining: 4.94s\n",
      "241:\tlearn: 0.3434875\ttotal: 4.62s\tremaining: 4.92s\n",
      "242:\tlearn: 0.3431795\ttotal: 4.63s\tremaining: 4.9s\n",
      "243:\tlearn: 0.3428584\ttotal: 4.65s\tremaining: 4.88s\n",
      "244:\tlearn: 0.3424017\ttotal: 4.67s\tremaining: 4.86s\n",
      "245:\tlearn: 0.3420536\ttotal: 4.69s\tremaining: 4.84s\n",
      "246:\tlearn: 0.3416652\ttotal: 4.71s\tremaining: 4.82s\n",
      "247:\tlearn: 0.3413269\ttotal: 4.73s\tremaining: 4.8s\n",
      "248:\tlearn: 0.3410185\ttotal: 4.75s\tremaining: 4.79s\n",
      "249:\tlearn: 0.3407857\ttotal: 4.76s\tremaining: 4.76s\n",
      "250:\tlearn: 0.3404916\ttotal: 4.78s\tremaining: 4.74s\n",
      "251:\tlearn: 0.3401245\ttotal: 4.8s\tremaining: 4.72s\n",
      "252:\tlearn: 0.3398422\ttotal: 4.82s\tremaining: 4.7s\n",
      "253:\tlearn: 0.3396039\ttotal: 4.84s\tremaining: 4.69s\n",
      "254:\tlearn: 0.3392748\ttotal: 4.86s\tremaining: 4.67s\n",
      "255:\tlearn: 0.3389304\ttotal: 4.88s\tremaining: 4.65s\n",
      "256:\tlearn: 0.3386364\ttotal: 4.9s\tremaining: 4.64s\n",
      "257:\tlearn: 0.3383426\ttotal: 4.92s\tremaining: 4.62s\n",
      "258:\tlearn: 0.3379478\ttotal: 4.95s\tremaining: 4.61s\n",
      "259:\tlearn: 0.3375925\ttotal: 4.97s\tremaining: 4.59s\n",
      "260:\tlearn: 0.3371881\ttotal: 4.99s\tremaining: 4.57s\n",
      "261:\tlearn: 0.3367880\ttotal: 5.01s\tremaining: 4.55s\n",
      "262:\tlearn: 0.3364909\ttotal: 5.03s\tremaining: 4.54s\n",
      "263:\tlearn: 0.3363380\ttotal: 5.05s\tremaining: 4.51s\n",
      "264:\tlearn: 0.3360746\ttotal: 5.07s\tremaining: 4.5s\n",
      "265:\tlearn: 0.3357090\ttotal: 5.09s\tremaining: 4.48s\n",
      "266:\tlearn: 0.3353977\ttotal: 5.12s\tremaining: 4.46s\n",
      "267:\tlearn: 0.3350691\ttotal: 5.14s\tremaining: 4.45s\n",
      "268:\tlearn: 0.3349287\ttotal: 5.16s\tremaining: 4.43s\n",
      "269:\tlearn: 0.3346167\ttotal: 5.18s\tremaining: 4.41s\n",
      "270:\tlearn: 0.3341585\ttotal: 5.2s\tremaining: 4.39s\n",
      "271:\tlearn: 0.3338591\ttotal: 5.22s\tremaining: 4.38s\n",
      "272:\tlearn: 0.3335112\ttotal: 5.24s\tremaining: 4.36s\n",
      "273:\tlearn: 0.3330826\ttotal: 5.26s\tremaining: 4.34s\n",
      "274:\tlearn: 0.3328228\ttotal: 5.28s\tremaining: 4.32s\n",
      "275:\tlearn: 0.3324995\ttotal: 5.29s\tremaining: 4.29s\n",
      "276:\tlearn: 0.3322635\ttotal: 5.31s\tremaining: 4.27s\n",
      "277:\tlearn: 0.3318882\ttotal: 5.33s\tremaining: 4.25s\n",
      "278:\tlearn: 0.3315398\ttotal: 5.34s\tremaining: 4.23s\n",
      "279:\tlearn: 0.3312778\ttotal: 5.36s\tremaining: 4.21s\n",
      "280:\tlearn: 0.3309810\ttotal: 5.38s\tremaining: 4.19s\n",
      "281:\tlearn: 0.3306309\ttotal: 5.4s\tremaining: 4.17s\n",
      "282:\tlearn: 0.3304023\ttotal: 5.42s\tremaining: 4.15s\n",
      "283:\tlearn: 0.3301066\ttotal: 5.43s\tremaining: 4.13s\n",
      "284:\tlearn: 0.3298053\ttotal: 5.45s\tremaining: 4.11s\n",
      "285:\tlearn: 0.3293990\ttotal: 5.47s\tremaining: 4.09s\n",
      "286:\tlearn: 0.3290220\ttotal: 5.49s\tremaining: 4.07s\n",
      "287:\tlearn: 0.3287664\ttotal: 5.5s\tremaining: 4.05s\n",
      "288:\tlearn: 0.3284253\ttotal: 5.52s\tremaining: 4.03s\n",
      "289:\tlearn: 0.3280756\ttotal: 5.54s\tremaining: 4.01s\n",
      "290:\tlearn: 0.3277720\ttotal: 5.56s\tremaining: 3.99s\n",
      "291:\tlearn: 0.3274194\ttotal: 5.58s\tremaining: 3.97s\n",
      "292:\tlearn: 0.3271701\ttotal: 5.6s\tremaining: 3.95s\n",
      "293:\tlearn: 0.3269385\ttotal: 5.62s\tremaining: 3.93s\n",
      "294:\tlearn: 0.3267893\ttotal: 5.63s\tremaining: 3.91s\n",
      "295:\tlearn: 0.3263676\ttotal: 5.65s\tremaining: 3.89s\n",
      "296:\tlearn: 0.3261524\ttotal: 5.67s\tremaining: 3.87s\n",
      "297:\tlearn: 0.3258315\ttotal: 5.69s\tremaining: 3.85s\n",
      "298:\tlearn: 0.3255530\ttotal: 5.7s\tremaining: 3.83s\n",
      "299:\tlearn: 0.3250938\ttotal: 5.72s\tremaining: 3.81s\n",
      "300:\tlearn: 0.3249214\ttotal: 5.74s\tremaining: 3.79s\n",
      "301:\tlearn: 0.3246026\ttotal: 5.75s\tremaining: 3.77s\n",
      "302:\tlearn: 0.3242607\ttotal: 5.77s\tremaining: 3.75s\n",
      "303:\tlearn: 0.3239351\ttotal: 5.79s\tremaining: 3.73s\n",
      "304:\tlearn: 0.3236865\ttotal: 5.81s\tremaining: 3.71s\n",
      "305:\tlearn: 0.3234620\ttotal: 5.83s\tremaining: 3.69s\n",
      "306:\tlearn: 0.3230256\ttotal: 5.85s\tremaining: 3.67s\n",
      "307:\tlearn: 0.3227536\ttotal: 5.86s\tremaining: 3.65s\n",
      "308:\tlearn: 0.3224518\ttotal: 5.88s\tremaining: 3.63s\n",
      "309:\tlearn: 0.3220671\ttotal: 5.9s\tremaining: 3.62s\n",
      "310:\tlearn: 0.3216914\ttotal: 5.92s\tremaining: 3.6s\n",
      "311:\tlearn: 0.3214199\ttotal: 5.94s\tremaining: 3.58s\n",
      "312:\tlearn: 0.3210658\ttotal: 5.96s\tremaining: 3.56s\n",
      "313:\tlearn: 0.3208583\ttotal: 5.97s\tremaining: 3.54s\n",
      "314:\tlearn: 0.3205867\ttotal: 5.99s\tremaining: 3.52s\n",
      "315:\tlearn: 0.3203357\ttotal: 6.01s\tremaining: 3.5s\n",
      "316:\tlearn: 0.3200328\ttotal: 6.03s\tremaining: 3.48s\n",
      "317:\tlearn: 0.3197020\ttotal: 6.05s\tremaining: 3.46s\n",
      "318:\tlearn: 0.3193840\ttotal: 6.07s\tremaining: 3.44s\n",
      "319:\tlearn: 0.3191146\ttotal: 6.08s\tremaining: 3.42s\n",
      "320:\tlearn: 0.3187620\ttotal: 6.1s\tremaining: 3.4s\n",
      "321:\tlearn: 0.3184613\ttotal: 6.12s\tremaining: 3.38s\n",
      "322:\tlearn: 0.3182819\ttotal: 6.14s\tremaining: 3.36s\n",
      "323:\tlearn: 0.3179852\ttotal: 6.16s\tremaining: 3.34s\n",
      "324:\tlearn: 0.3177238\ttotal: 6.17s\tremaining: 3.32s\n",
      "325:\tlearn: 0.3174409\ttotal: 6.19s\tremaining: 3.31s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "326:\tlearn: 0.3170797\ttotal: 6.21s\tremaining: 3.29s\n",
      "327:\tlearn: 0.3167920\ttotal: 6.23s\tremaining: 3.27s\n",
      "328:\tlearn: 0.3165583\ttotal: 6.25s\tremaining: 3.25s\n",
      "329:\tlearn: 0.3162540\ttotal: 6.27s\tremaining: 3.23s\n",
      "330:\tlearn: 0.3159889\ttotal: 6.29s\tremaining: 3.21s\n",
      "331:\tlearn: 0.3158125\ttotal: 6.3s\tremaining: 3.19s\n",
      "332:\tlearn: 0.3153626\ttotal: 6.32s\tremaining: 3.17s\n",
      "333:\tlearn: 0.3150224\ttotal: 6.34s\tremaining: 3.15s\n",
      "334:\tlearn: 0.3148245\ttotal: 6.36s\tremaining: 3.13s\n",
      "335:\tlearn: 0.3144970\ttotal: 6.37s\tremaining: 3.11s\n",
      "336:\tlearn: 0.3142473\ttotal: 6.39s\tremaining: 3.09s\n",
      "337:\tlearn: 0.3139410\ttotal: 6.41s\tremaining: 3.07s\n",
      "338:\tlearn: 0.3138230\ttotal: 6.43s\tremaining: 3.05s\n",
      "339:\tlearn: 0.3135921\ttotal: 6.45s\tremaining: 3.03s\n",
      "340:\tlearn: 0.3132910\ttotal: 6.47s\tremaining: 3.02s\n",
      "341:\tlearn: 0.3130906\ttotal: 6.49s\tremaining: 3s\n",
      "342:\tlearn: 0.3126892\ttotal: 6.5s\tremaining: 2.98s\n",
      "343:\tlearn: 0.3123651\ttotal: 6.52s\tremaining: 2.96s\n",
      "344:\tlearn: 0.3121911\ttotal: 6.54s\tremaining: 2.94s\n",
      "345:\tlearn: 0.3119892\ttotal: 6.55s\tremaining: 2.92s\n",
      "346:\tlearn: 0.3116795\ttotal: 6.57s\tremaining: 2.9s\n",
      "347:\tlearn: 0.3113254\ttotal: 6.59s\tremaining: 2.88s\n",
      "348:\tlearn: 0.3110047\ttotal: 6.61s\tremaining: 2.86s\n",
      "349:\tlearn: 0.3108229\ttotal: 6.63s\tremaining: 2.84s\n",
      "350:\tlearn: 0.3105773\ttotal: 6.65s\tremaining: 2.82s\n",
      "351:\tlearn: 0.3103636\ttotal: 6.67s\tremaining: 2.8s\n",
      "352:\tlearn: 0.3100583\ttotal: 6.69s\tremaining: 2.78s\n",
      "353:\tlearn: 0.3097877\ttotal: 6.71s\tremaining: 2.77s\n",
      "354:\tlearn: 0.3095539\ttotal: 6.72s\tremaining: 2.75s\n",
      "355:\tlearn: 0.3093572\ttotal: 6.74s\tremaining: 2.73s\n",
      "356:\tlearn: 0.3090952\ttotal: 6.76s\tremaining: 2.71s\n",
      "357:\tlearn: 0.3088926\ttotal: 6.78s\tremaining: 2.69s\n",
      "358:\tlearn: 0.3086020\ttotal: 6.79s\tremaining: 2.67s\n",
      "359:\tlearn: 0.3083622\ttotal: 6.81s\tremaining: 2.65s\n",
      "360:\tlearn: 0.3080828\ttotal: 6.83s\tremaining: 2.63s\n",
      "361:\tlearn: 0.3078416\ttotal: 6.85s\tremaining: 2.61s\n",
      "362:\tlearn: 0.3075173\ttotal: 6.87s\tremaining: 2.59s\n",
      "363:\tlearn: 0.3071954\ttotal: 6.89s\tremaining: 2.58s\n",
      "364:\tlearn: 0.3069960\ttotal: 6.92s\tremaining: 2.56s\n",
      "365:\tlearn: 0.3067368\ttotal: 6.93s\tremaining: 2.54s\n",
      "366:\tlearn: 0.3064433\ttotal: 6.96s\tremaining: 2.52s\n",
      "367:\tlearn: 0.3060367\ttotal: 6.98s\tremaining: 2.5s\n",
      "368:\tlearn: 0.3058133\ttotal: 7s\tremaining: 2.49s\n",
      "369:\tlearn: 0.3055870\ttotal: 7.03s\tremaining: 2.47s\n",
      "370:\tlearn: 0.3052610\ttotal: 7.05s\tremaining: 2.45s\n",
      "371:\tlearn: 0.3049978\ttotal: 7.07s\tremaining: 2.43s\n",
      "372:\tlearn: 0.3047632\ttotal: 7.09s\tremaining: 2.41s\n",
      "373:\tlearn: 0.3046087\ttotal: 7.1s\tremaining: 2.39s\n",
      "374:\tlearn: 0.3043361\ttotal: 7.12s\tremaining: 2.37s\n",
      "375:\tlearn: 0.3040310\ttotal: 7.14s\tremaining: 2.35s\n",
      "376:\tlearn: 0.3037858\ttotal: 7.16s\tremaining: 2.33s\n",
      "377:\tlearn: 0.3035307\ttotal: 7.18s\tremaining: 2.32s\n",
      "378:\tlearn: 0.3031296\ttotal: 7.2s\tremaining: 2.3s\n",
      "379:\tlearn: 0.3028753\ttotal: 7.22s\tremaining: 2.28s\n",
      "380:\tlearn: 0.3026321\ttotal: 7.23s\tremaining: 2.26s\n",
      "381:\tlearn: 0.3023741\ttotal: 7.25s\tremaining: 2.24s\n",
      "382:\tlearn: 0.3022103\ttotal: 7.27s\tremaining: 2.22s\n",
      "383:\tlearn: 0.3019497\ttotal: 7.3s\tremaining: 2.2s\n",
      "384:\tlearn: 0.3017106\ttotal: 7.32s\tremaining: 2.19s\n",
      "385:\tlearn: 0.3014445\ttotal: 7.34s\tremaining: 2.17s\n",
      "386:\tlearn: 0.3011212\ttotal: 7.36s\tremaining: 2.15s\n",
      "387:\tlearn: 0.3008829\ttotal: 7.38s\tremaining: 2.13s\n",
      "388:\tlearn: 0.3006935\ttotal: 7.39s\tremaining: 2.11s\n",
      "389:\tlearn: 0.3003868\ttotal: 7.41s\tremaining: 2.09s\n",
      "390:\tlearn: 0.3002365\ttotal: 7.43s\tremaining: 2.07s\n",
      "391:\tlearn: 0.2999963\ttotal: 7.45s\tremaining: 2.05s\n",
      "392:\tlearn: 0.2997258\ttotal: 7.46s\tremaining: 2.03s\n",
      "393:\tlearn: 0.2995554\ttotal: 7.48s\tremaining: 2.01s\n",
      "394:\tlearn: 0.2991172\ttotal: 7.5s\tremaining: 1.99s\n",
      "395:\tlearn: 0.2988898\ttotal: 7.52s\tremaining: 1.98s\n",
      "396:\tlearn: 0.2986331\ttotal: 7.54s\tremaining: 1.96s\n",
      "397:\tlearn: 0.2983993\ttotal: 7.55s\tremaining: 1.94s\n",
      "398:\tlearn: 0.2982523\ttotal: 7.57s\tremaining: 1.92s\n",
      "399:\tlearn: 0.2980229\ttotal: 7.59s\tremaining: 1.9s\n",
      "400:\tlearn: 0.2978290\ttotal: 7.61s\tremaining: 1.88s\n",
      "401:\tlearn: 0.2976366\ttotal: 7.62s\tremaining: 1.86s\n",
      "402:\tlearn: 0.2974352\ttotal: 7.64s\tremaining: 1.84s\n",
      "403:\tlearn: 0.2972028\ttotal: 7.66s\tremaining: 1.82s\n",
      "404:\tlearn: 0.2969863\ttotal: 7.68s\tremaining: 1.8s\n",
      "405:\tlearn: 0.2966648\ttotal: 7.69s\tremaining: 1.78s\n",
      "406:\tlearn: 0.2964704\ttotal: 7.71s\tremaining: 1.76s\n",
      "407:\tlearn: 0.2960888\ttotal: 7.73s\tremaining: 1.74s\n",
      "408:\tlearn: 0.2958545\ttotal: 7.75s\tremaining: 1.72s\n",
      "409:\tlearn: 0.2956124\ttotal: 7.77s\tremaining: 1.71s\n",
      "410:\tlearn: 0.2952283\ttotal: 7.79s\tremaining: 1.69s\n",
      "411:\tlearn: 0.2949470\ttotal: 7.8s\tremaining: 1.67s\n",
      "412:\tlearn: 0.2947539\ttotal: 7.82s\tremaining: 1.65s\n",
      "413:\tlearn: 0.2944312\ttotal: 7.84s\tremaining: 1.63s\n",
      "414:\tlearn: 0.2941671\ttotal: 7.86s\tremaining: 1.61s\n",
      "415:\tlearn: 0.2939043\ttotal: 7.88s\tremaining: 1.59s\n",
      "416:\tlearn: 0.2936138\ttotal: 7.89s\tremaining: 1.57s\n",
      "417:\tlearn: 0.2933406\ttotal: 7.91s\tremaining: 1.55s\n",
      "418:\tlearn: 0.2930909\ttotal: 7.93s\tremaining: 1.53s\n",
      "419:\tlearn: 0.2928259\ttotal: 7.96s\tremaining: 1.51s\n",
      "420:\tlearn: 0.2925128\ttotal: 7.98s\tremaining: 1.5s\n",
      "421:\tlearn: 0.2922173\ttotal: 8s\tremaining: 1.48s\n",
      "422:\tlearn: 0.2920147\ttotal: 8.01s\tremaining: 1.46s\n",
      "423:\tlearn: 0.2917926\ttotal: 8.03s\tremaining: 1.44s\n",
      "424:\tlearn: 0.2914641\ttotal: 8.05s\tremaining: 1.42s\n",
      "425:\tlearn: 0.2910305\ttotal: 8.08s\tremaining: 1.4s\n",
      "426:\tlearn: 0.2906968\ttotal: 8.1s\tremaining: 1.39s\n",
      "427:\tlearn: 0.2903536\ttotal: 8.13s\tremaining: 1.37s\n",
      "428:\tlearn: 0.2900980\ttotal: 8.15s\tremaining: 1.35s\n",
      "429:\tlearn: 0.2898596\ttotal: 8.17s\tremaining: 1.33s\n",
      "430:\tlearn: 0.2895537\ttotal: 8.2s\tremaining: 1.31s\n",
      "431:\tlearn: 0.2892991\ttotal: 8.22s\tremaining: 1.29s\n",
      "432:\tlearn: 0.2890717\ttotal: 8.24s\tremaining: 1.27s\n",
      "433:\tlearn: 0.2888449\ttotal: 8.27s\tremaining: 1.26s\n",
      "434:\tlearn: 0.2886902\ttotal: 8.29s\tremaining: 1.24s\n",
      "435:\tlearn: 0.2884297\ttotal: 8.31s\tremaining: 1.22s\n",
      "436:\tlearn: 0.2882200\ttotal: 8.34s\tremaining: 1.2s\n",
      "437:\tlearn: 0.2880901\ttotal: 8.36s\tremaining: 1.18s\n",
      "438:\tlearn: 0.2877487\ttotal: 8.38s\tremaining: 1.16s\n",
      "439:\tlearn: 0.2874934\ttotal: 8.41s\tremaining: 1.15s\n",
      "440:\tlearn: 0.2873396\ttotal: 8.43s\tremaining: 1.13s\n",
      "441:\tlearn: 0.2871506\ttotal: 8.45s\tremaining: 1.11s\n",
      "442:\tlearn: 0.2869373\ttotal: 8.47s\tremaining: 1.09s\n",
      "443:\tlearn: 0.2867137\ttotal: 8.49s\tremaining: 1.07s\n",
      "444:\tlearn: 0.2863009\ttotal: 8.51s\tremaining: 1.05s\n",
      "445:\tlearn: 0.2860100\ttotal: 8.53s\tremaining: 1.03s\n",
      "446:\tlearn: 0.2857839\ttotal: 8.55s\tremaining: 1.01s\n",
      "447:\tlearn: 0.2855185\ttotal: 8.57s\tremaining: 995ms\n",
      "448:\tlearn: 0.2852832\ttotal: 8.59s\tremaining: 975ms\n",
      "449:\tlearn: 0.2850344\ttotal: 8.61s\tremaining: 956ms\n",
      "450:\tlearn: 0.2847992\ttotal: 8.63s\tremaining: 937ms\n",
      "451:\tlearn: 0.2846216\ttotal: 8.64s\tremaining: 918ms\n",
      "452:\tlearn: 0.2844305\ttotal: 8.66s\tremaining: 898ms\n",
      "453:\tlearn: 0.2841682\ttotal: 8.68s\tremaining: 879ms\n",
      "454:\tlearn: 0.2838700\ttotal: 8.69s\tremaining: 860ms\n",
      "455:\tlearn: 0.2836026\ttotal: 8.71s\tremaining: 841ms\n",
      "456:\tlearn: 0.2834549\ttotal: 8.73s\tremaining: 822ms\n",
      "457:\tlearn: 0.2831461\ttotal: 8.75s\tremaining: 802ms\n",
      "458:\tlearn: 0.2829901\ttotal: 8.77s\tremaining: 783ms\n",
      "459:\tlearn: 0.2827682\ttotal: 8.79s\tremaining: 764ms\n",
      "460:\tlearn: 0.2824788\ttotal: 8.81s\tremaining: 745ms\n",
      "461:\tlearn: 0.2822871\ttotal: 8.83s\tremaining: 726ms\n",
      "462:\tlearn: 0.2820124\ttotal: 8.85s\tremaining: 708ms\n",
      "463:\tlearn: 0.2817626\ttotal: 8.88s\tremaining: 689ms\n",
      "464:\tlearn: 0.2815811\ttotal: 8.9s\tremaining: 670ms\n",
      "465:\tlearn: 0.2813073\ttotal: 8.93s\tremaining: 651ms\n",
      "466:\tlearn: 0.2811341\ttotal: 8.95s\tremaining: 632ms\n",
      "467:\tlearn: 0.2808017\ttotal: 8.97s\tremaining: 613ms\n",
      "468:\tlearn: 0.2806165\ttotal: 8.99s\tremaining: 594ms\n",
      "469:\tlearn: 0.2804749\ttotal: 9.01s\tremaining: 575ms\n",
      "470:\tlearn: 0.2802714\ttotal: 9.03s\tremaining: 556ms\n",
      "471:\tlearn: 0.2800828\ttotal: 9.04s\tremaining: 537ms\n",
      "472:\tlearn: 0.2797914\ttotal: 9.06s\tremaining: 517ms\n",
      "473:\tlearn: 0.2795853\ttotal: 9.08s\tremaining: 498ms\n",
      "474:\tlearn: 0.2793463\ttotal: 9.1s\tremaining: 479ms\n",
      "475:\tlearn: 0.2792149\ttotal: 9.12s\tremaining: 460ms\n",
      "476:\tlearn: 0.2789428\ttotal: 9.15s\tremaining: 441ms\n",
      "477:\tlearn: 0.2787399\ttotal: 9.17s\tremaining: 422ms\n",
      "478:\tlearn: 0.2785947\ttotal: 9.19s\tremaining: 403ms\n",
      "479:\tlearn: 0.2783631\ttotal: 9.21s\tremaining: 384ms\n",
      "480:\tlearn: 0.2780735\ttotal: 9.24s\tremaining: 365ms\n",
      "481:\tlearn: 0.2778290\ttotal: 9.26s\tremaining: 346ms\n",
      "482:\tlearn: 0.2776247\ttotal: 9.29s\tremaining: 327ms\n",
      "483:\tlearn: 0.2773795\ttotal: 9.31s\tremaining: 308ms\n",
      "484:\tlearn: 0.2771873\ttotal: 9.33s\tremaining: 289ms\n",
      "485:\tlearn: 0.2769746\ttotal: 9.36s\tremaining: 269ms\n",
      "486:\tlearn: 0.2767623\ttotal: 9.38s\tremaining: 250ms\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "487:\tlearn: 0.2765005\ttotal: 9.4s\tremaining: 231ms\n",
      "488:\tlearn: 0.2763225\ttotal: 9.42s\tremaining: 212ms\n",
      "489:\tlearn: 0.2761018\ttotal: 9.44s\tremaining: 193ms\n",
      "490:\tlearn: 0.2759686\ttotal: 9.46s\tremaining: 173ms\n",
      "491:\tlearn: 0.2757274\ttotal: 9.49s\tremaining: 154ms\n",
      "492:\tlearn: 0.2754949\ttotal: 9.51s\tremaining: 135ms\n",
      "493:\tlearn: 0.2751373\ttotal: 9.54s\tremaining: 116ms\n",
      "494:\tlearn: 0.2749335\ttotal: 9.56s\tremaining: 96.5ms\n",
      "495:\tlearn: 0.2747271\ttotal: 9.58s\tremaining: 77.3ms\n",
      "496:\tlearn: 0.2745283\ttotal: 9.61s\tremaining: 58ms\n",
      "497:\tlearn: 0.2743593\ttotal: 9.63s\tremaining: 38.7ms\n",
      "498:\tlearn: 0.2741571\ttotal: 9.65s\tremaining: 19.3ms\n",
      "499:\tlearn: 0.2739964\ttotal: 9.68s\tremaining: 0us\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<catboost.core.CatBoostClassifier at 0x28259e1d610>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_catboost = CatBoostClassifier(\n",
    "    iterations=500,\n",
    "    depth=8,\n",
    "    learning_rate=0.1,\n",
    "    loss_function='Logloss',\n",
    "    random_state=42,\n",
    "    verbose=1\n",
    ")\n",
    "\n",
    "model_catboost.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "# model_rf = RandomForestClassifier(\n",
    "#     n_estimators=750,\n",
    "#     max_depth=8,\n",
    "#     min_samples_split=2,\n",
    "#     min_samples_leaf=1,\n",
    "#     random_state=42\n",
    "# )\n",
    "\n",
    "# model_rf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "# model_svc = SVC(\n",
    "#     C=1.0,\n",
    "#     kernel='rbf',  # Radial Basis Function (RBF) kernel\n",
    "#     gamma='scale',\n",
    "#     probability=True,\n",
    "#     random_state=42\n",
    "# )\n",
    "\n",
    "# model_svc.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[LightGBM] [Info] Number of positive: 56881, number of negative: 56881\n",
      "[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.008760 seconds.\n",
      "You can set `force_col_wise=true` to remove the overhead.\n",
      "[LightGBM] [Info] Total Bins 2020\n",
      "[LightGBM] [Info] Number of data points in the train set: 113762, number of used features: 21\n",
      "[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000\n",
      "0:\tlearn: 0.6481974\ttotal: 21ms\tremaining: 10.5s\n",
      "1:\tlearn: 0.6132391\ttotal: 40.9ms\tremaining: 10.2s\n",
      "2:\tlearn: 0.5873360\ttotal: 59.9ms\tremaining: 9.92s\n",
      "3:\tlearn: 0.5670161\ttotal: 77.7ms\tremaining: 9.64s\n",
      "4:\tlearn: 0.5498595\ttotal: 96.2ms\tremaining: 9.52s\n",
      "5:\tlearn: 0.5346506\ttotal: 114ms\tremaining: 9.35s\n",
      "6:\tlearn: 0.5222284\ttotal: 132ms\tremaining: 9.27s\n",
      "7:\tlearn: 0.5126557\ttotal: 149ms\tremaining: 9.19s\n",
      "8:\tlearn: 0.5052121\ttotal: 167ms\tremaining: 9.12s\n",
      "9:\tlearn: 0.4989817\ttotal: 186ms\tremaining: 9.11s\n",
      "10:\tlearn: 0.4934037\ttotal: 203ms\tremaining: 9.04s\n",
      "11:\tlearn: 0.4879776\ttotal: 221ms\tremaining: 9s\n",
      "12:\tlearn: 0.4841587\ttotal: 243ms\tremaining: 9.12s\n",
      "13:\tlearn: 0.4806399\ttotal: 263ms\tremaining: 9.14s\n",
      "14:\tlearn: 0.4772098\ttotal: 282ms\tremaining: 9.13s\n",
      "15:\tlearn: 0.4739294\ttotal: 300ms\tremaining: 9.08s\n",
      "16:\tlearn: 0.4714404\ttotal: 318ms\tremaining: 9.03s\n",
      "17:\tlearn: 0.4690203\ttotal: 336ms\tremaining: 8.99s\n",
      "18:\tlearn: 0.4666430\ttotal: 356ms\tremaining: 9s\n",
      "19:\tlearn: 0.4646009\ttotal: 373ms\tremaining: 8.95s\n",
      "20:\tlearn: 0.4624483\ttotal: 392ms\tremaining: 8.93s\n",
      "21:\tlearn: 0.4607643\ttotal: 410ms\tremaining: 8.91s\n",
      "22:\tlearn: 0.4594271\ttotal: 427ms\tremaining: 8.87s\n",
      "23:\tlearn: 0.4575935\ttotal: 447ms\tremaining: 8.86s\n",
      "24:\tlearn: 0.4560619\ttotal: 470ms\tremaining: 8.94s\n",
      "25:\tlearn: 0.4545588\ttotal: 487ms\tremaining: 8.89s\n",
      "26:\tlearn: 0.4532975\ttotal: 505ms\tremaining: 8.84s\n",
      "27:\tlearn: 0.4522048\ttotal: 522ms\tremaining: 8.8s\n",
      "28:\tlearn: 0.4512019\ttotal: 539ms\tremaining: 8.76s\n",
      "29:\tlearn: 0.4497717\ttotal: 557ms\tremaining: 8.72s\n",
      "30:\tlearn: 0.4486225\ttotal: 575ms\tremaining: 8.7s\n",
      "31:\tlearn: 0.4478355\ttotal: 591ms\tremaining: 8.65s\n",
      "32:\tlearn: 0.4468437\ttotal: 609ms\tremaining: 8.61s\n",
      "33:\tlearn: 0.4460566\ttotal: 626ms\tremaining: 8.58s\n",
      "34:\tlearn: 0.4450856\ttotal: 645ms\tremaining: 8.57s\n",
      "35:\tlearn: 0.4441608\ttotal: 667ms\tremaining: 8.59s\n",
      "36:\tlearn: 0.4431290\ttotal: 685ms\tremaining: 8.57s\n",
      "37:\tlearn: 0.4422189\ttotal: 704ms\tremaining: 8.56s\n",
      "38:\tlearn: 0.4414307\ttotal: 720ms\tremaining: 8.52s\n",
      "39:\tlearn: 0.4405960\ttotal: 737ms\tremaining: 8.48s\n",
      "40:\tlearn: 0.4395743\ttotal: 755ms\tremaining: 8.45s\n",
      "41:\tlearn: 0.4388400\ttotal: 771ms\tremaining: 8.41s\n",
      "42:\tlearn: 0.4380693\ttotal: 789ms\tremaining: 8.38s\n",
      "43:\tlearn: 0.4372096\ttotal: 806ms\tremaining: 8.36s\n",
      "44:\tlearn: 0.4365575\ttotal: 823ms\tremaining: 8.32s\n",
      "45:\tlearn: 0.4359455\ttotal: 840ms\tremaining: 8.29s\n",
      "46:\tlearn: 0.4352182\ttotal: 858ms\tremaining: 8.27s\n",
      "47:\tlearn: 0.4344915\ttotal: 879ms\tremaining: 8.27s\n",
      "48:\tlearn: 0.4339844\ttotal: 895ms\tremaining: 8.24s\n",
      "49:\tlearn: 0.4332232\ttotal: 914ms\tremaining: 8.23s\n",
      "50:\tlearn: 0.4322423\ttotal: 935ms\tremaining: 8.23s\n",
      "51:\tlearn: 0.4317429\ttotal: 953ms\tremaining: 8.21s\n",
      "52:\tlearn: 0.4309024\ttotal: 972ms\tremaining: 8.2s\n",
      "53:\tlearn: 0.4301731\ttotal: 989ms\tremaining: 8.16s\n",
      "54:\tlearn: 0.4295995\ttotal: 1s\tremaining: 8.14s\n",
      "55:\tlearn: 0.4290265\ttotal: 1.02s\tremaining: 8.11s\n",
      "56:\tlearn: 0.4283908\ttotal: 1.04s\tremaining: 8.09s\n",
      "57:\tlearn: 0.4277163\ttotal: 1.06s\tremaining: 8.07s\n",
      "58:\tlearn: 0.4271775\ttotal: 1.08s\tremaining: 8.07s\n",
      "59:\tlearn: 0.4266029\ttotal: 1.1s\tremaining: 8.06s\n",
      "60:\tlearn: 0.4259887\ttotal: 1.12s\tremaining: 8.04s\n",
      "61:\tlearn: 0.4252893\ttotal: 1.14s\tremaining: 8.02s\n",
      "62:\tlearn: 0.4244404\ttotal: 1.15s\tremaining: 8s\n",
      "63:\tlearn: 0.4239101\ttotal: 1.17s\tremaining: 7.98s\n",
      "64:\tlearn: 0.4233110\ttotal: 1.19s\tremaining: 7.96s\n",
      "65:\tlearn: 0.4228212\ttotal: 1.21s\tremaining: 7.93s\n",
      "66:\tlearn: 0.4221198\ttotal: 1.22s\tremaining: 7.91s\n",
      "67:\tlearn: 0.4214123\ttotal: 1.24s\tremaining: 7.89s\n",
      "68:\tlearn: 0.4209371\ttotal: 1.26s\tremaining: 7.87s\n",
      "69:\tlearn: 0.4201275\ttotal: 1.28s\tremaining: 7.87s\n",
      "70:\tlearn: 0.4195140\ttotal: 1.3s\tremaining: 7.87s\n",
      "71:\tlearn: 0.4189901\ttotal: 1.32s\tremaining: 7.84s\n",
      "72:\tlearn: 0.4184057\ttotal: 1.34s\tremaining: 7.82s\n",
      "73:\tlearn: 0.4179484\ttotal: 1.35s\tremaining: 7.8s\n",
      "74:\tlearn: 0.4174019\ttotal: 1.37s\tremaining: 7.78s\n",
      "75:\tlearn: 0.4166372\ttotal: 1.39s\tremaining: 7.76s\n",
      "76:\tlearn: 0.4159930\ttotal: 1.41s\tremaining: 7.74s\n",
      "77:\tlearn: 0.4152109\ttotal: 1.43s\tremaining: 7.74s\n",
      "78:\tlearn: 0.4144652\ttotal: 1.45s\tremaining: 7.75s\n",
      "79:\tlearn: 0.4138346\ttotal: 1.48s\tremaining: 7.75s\n",
      "80:\tlearn: 0.4134500\ttotal: 1.5s\tremaining: 7.74s\n",
      "81:\tlearn: 0.4130115\ttotal: 1.52s\tremaining: 7.73s\n",
      "82:\tlearn: 0.4124637\ttotal: 1.53s\tremaining: 7.71s\n",
      "83:\tlearn: 0.4119634\ttotal: 1.55s\tremaining: 7.69s\n",
      "84:\tlearn: 0.4112715\ttotal: 1.57s\tremaining: 7.67s\n",
      "85:\tlearn: 0.4108024\ttotal: 1.59s\tremaining: 7.65s\n",
      "86:\tlearn: 0.4104974\ttotal: 1.61s\tremaining: 7.63s\n",
      "87:\tlearn: 0.4099704\ttotal: 1.63s\tremaining: 7.61s\n",
      "88:\tlearn: 0.4093609\ttotal: 1.64s\tremaining: 7.59s\n",
      "89:\tlearn: 0.4088832\ttotal: 1.66s\tremaining: 7.57s\n",
      "90:\tlearn: 0.4081269\ttotal: 1.68s\tremaining: 7.55s\n",
      "91:\tlearn: 0.4075088\ttotal: 1.7s\tremaining: 7.52s\n",
      "92:\tlearn: 0.4067476\ttotal: 1.72s\tremaining: 7.53s\n",
      "93:\tlearn: 0.4064231\ttotal: 1.74s\tremaining: 7.51s\n",
      "94:\tlearn: 0.4059659\ttotal: 1.76s\tremaining: 7.49s\n",
      "95:\tlearn: 0.4054307\ttotal: 1.77s\tremaining: 7.46s\n",
      "96:\tlearn: 0.4050239\ttotal: 1.79s\tremaining: 7.44s\n",
      "97:\tlearn: 0.4047187\ttotal: 1.81s\tremaining: 7.42s\n",
      "98:\tlearn: 0.4042154\ttotal: 1.83s\tremaining: 7.4s\n",
      "99:\tlearn: 0.4038038\ttotal: 1.84s\tremaining: 7.38s\n",
      "100:\tlearn: 0.4032556\ttotal: 1.86s\tremaining: 7.36s\n",
      "101:\tlearn: 0.4026434\ttotal: 1.88s\tremaining: 7.34s\n",
      "102:\tlearn: 0.4021713\ttotal: 1.9s\tremaining: 7.32s\n",
      "103:\tlearn: 0.4016961\ttotal: 1.92s\tremaining: 7.29s\n",
      "104:\tlearn: 0.4012272\ttotal: 1.94s\tremaining: 7.29s\n",
      "105:\tlearn: 0.4009487\ttotal: 1.96s\tremaining: 7.29s\n",
      "106:\tlearn: 0.4004641\ttotal: 1.98s\tremaining: 7.29s\n",
      "107:\tlearn: 0.4000781\ttotal: 2s\tremaining: 7.26s\n",
      "108:\tlearn: 0.3995329\ttotal: 2.02s\tremaining: 7.24s\n",
      "109:\tlearn: 0.3990069\ttotal: 2.04s\tremaining: 7.23s\n",
      "110:\tlearn: 0.3986390\ttotal: 2.05s\tremaining: 7.2s\n",
      "111:\tlearn: 0.3980677\ttotal: 2.07s\tremaining: 7.18s\n",
      "112:\tlearn: 0.3975777\ttotal: 2.09s\tremaining: 7.16s\n",
      "113:\tlearn: 0.3970932\ttotal: 2.11s\tremaining: 7.14s\n",
      "114:\tlearn: 0.3963167\ttotal: 2.13s\tremaining: 7.13s\n",
      "115:\tlearn: 0.3958280\ttotal: 2.15s\tremaining: 7.11s\n",
      "116:\tlearn: 0.3954328\ttotal: 2.17s\tremaining: 7.09s\n",
      "117:\tlearn: 0.3951083\ttotal: 2.19s\tremaining: 7.07s\n",
      "118:\tlearn: 0.3945788\ttotal: 2.2s\tremaining: 7.05s\n",
      "119:\tlearn: 0.3939444\ttotal: 2.22s\tremaining: 7.04s\n",
      "120:\tlearn: 0.3934700\ttotal: 2.24s\tremaining: 7.02s\n",
      "121:\tlearn: 0.3930988\ttotal: 2.26s\tremaining: 7s\n",
      "122:\tlearn: 0.3926321\ttotal: 2.27s\tremaining: 6.97s\n",
      "123:\tlearn: 0.3921010\ttotal: 2.29s\tremaining: 6.95s\n",
      "124:\tlearn: 0.3917470\ttotal: 2.31s\tremaining: 6.93s\n",
      "125:\tlearn: 0.3912472\ttotal: 2.33s\tremaining: 6.91s\n",
      "126:\tlearn: 0.3908063\ttotal: 2.35s\tremaining: 6.89s\n",
      "127:\tlearn: 0.3904035\ttotal: 2.37s\tremaining: 6.87s\n",
      "128:\tlearn: 0.3897958\ttotal: 2.38s\tremaining: 6.86s\n",
      "129:\tlearn: 0.3892977\ttotal: 2.4s\tremaining: 6.84s\n",
      "130:\tlearn: 0.3888215\ttotal: 2.42s\tremaining: 6.82s\n",
      "131:\tlearn: 0.3883825\ttotal: 2.44s\tremaining: 6.8s\n",
      "132:\tlearn: 0.3878710\ttotal: 2.46s\tremaining: 6.78s\n",
      "133:\tlearn: 0.3873359\ttotal: 2.48s\tremaining: 6.77s\n",
      "134:\tlearn: 0.3870444\ttotal: 2.5s\tremaining: 6.75s\n",
      "135:\tlearn: 0.3866687\ttotal: 2.51s\tremaining: 6.73s\n",
      "136:\tlearn: 0.3862841\ttotal: 2.53s\tremaining: 6.71s\n",
      "137:\tlearn: 0.3857571\ttotal: 2.55s\tremaining: 6.69s\n",
      "138:\tlearn: 0.3852237\ttotal: 2.57s\tremaining: 6.67s\n",
      "139:\tlearn: 0.3848454\ttotal: 2.58s\tremaining: 6.65s\n",
      "140:\tlearn: 0.3845735\ttotal: 2.6s\tremaining: 6.63s\n",
      "141:\tlearn: 0.3841837\ttotal: 2.62s\tremaining: 6.61s\n",
      "142:\tlearn: 0.3836160\ttotal: 2.64s\tremaining: 6.59s\n",
      "143:\tlearn: 0.3831407\ttotal: 2.66s\tremaining: 6.58s\n",
      "144:\tlearn: 0.3827877\ttotal: 2.68s\tremaining: 6.55s\n",
      "145:\tlearn: 0.3822213\ttotal: 2.69s\tremaining: 6.54s\n",
      "146:\tlearn: 0.3816035\ttotal: 2.71s\tremaining: 6.51s\n",
      "147:\tlearn: 0.3812336\ttotal: 2.73s\tremaining: 6.49s\n",
      "148:\tlearn: 0.3808577\ttotal: 2.75s\tremaining: 6.47s\n",
      "149:\tlearn: 0.3801954\ttotal: 2.77s\tremaining: 6.46s\n",
      "150:\tlearn: 0.3796989\ttotal: 2.79s\tremaining: 6.44s\n",
      "151:\tlearn: 0.3793348\ttotal: 2.81s\tremaining: 6.43s\n",
      "152:\tlearn: 0.3788843\ttotal: 2.83s\tremaining: 6.41s\n",
      "153:\tlearn: 0.3783291\ttotal: 2.84s\tremaining: 6.39s\n",
      "154:\tlearn: 0.3776486\ttotal: 2.86s\tremaining: 6.37s\n",
      "155:\tlearn: 0.3772182\ttotal: 2.88s\tremaining: 6.35s\n",
      "156:\tlearn: 0.3767964\ttotal: 2.9s\tremaining: 6.33s\n",
      "157:\tlearn: 0.3763543\ttotal: 2.91s\tremaining: 6.31s\n",
      "158:\tlearn: 0.3760447\ttotal: 2.93s\tremaining: 6.29s\n",
      "159:\tlearn: 0.3755730\ttotal: 2.95s\tremaining: 6.27s\n",
      "160:\tlearn: 0.3752093\ttotal: 2.97s\tremaining: 6.25s\n",
      "161:\tlearn: 0.3747544\ttotal: 2.99s\tremaining: 6.24s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "162:\tlearn: 0.3741821\ttotal: 3.01s\tremaining: 6.22s\n",
      "163:\tlearn: 0.3735257\ttotal: 3.03s\tremaining: 6.21s\n",
      "164:\tlearn: 0.3729583\ttotal: 3.05s\tremaining: 6.2s\n",
      "165:\tlearn: 0.3725307\ttotal: 3.07s\tremaining: 6.18s\n",
      "166:\tlearn: 0.3721977\ttotal: 3.09s\tremaining: 6.16s\n",
      "167:\tlearn: 0.3717120\ttotal: 3.1s\tremaining: 6.14s\n",
      "168:\tlearn: 0.3712708\ttotal: 3.12s\tremaining: 6.12s\n",
      "169:\tlearn: 0.3708315\ttotal: 3.14s\tremaining: 6.1s\n",
      "170:\tlearn: 0.3704685\ttotal: 3.16s\tremaining: 6.08s\n",
      "171:\tlearn: 0.3699860\ttotal: 3.17s\tremaining: 6.05s\n",
      "172:\tlearn: 0.3695337\ttotal: 3.19s\tremaining: 6.03s\n",
      "173:\tlearn: 0.3692383\ttotal: 3.21s\tremaining: 6.01s\n",
      "174:\tlearn: 0.3687911\ttotal: 3.23s\tremaining: 6s\n",
      "175:\tlearn: 0.3684708\ttotal: 3.25s\tremaining: 5.98s\n",
      "176:\tlearn: 0.3679775\ttotal: 3.27s\tremaining: 5.96s\n",
      "177:\tlearn: 0.3675312\ttotal: 3.29s\tremaining: 5.94s\n",
      "178:\tlearn: 0.3671661\ttotal: 3.3s\tremaining: 5.92s\n",
      "179:\tlearn: 0.3668329\ttotal: 3.32s\tremaining: 5.9s\n",
      "180:\tlearn: 0.3662299\ttotal: 3.34s\tremaining: 5.89s\n",
      "181:\tlearn: 0.3657643\ttotal: 3.36s\tremaining: 5.87s\n",
      "182:\tlearn: 0.3654284\ttotal: 3.38s\tremaining: 5.86s\n",
      "183:\tlearn: 0.3650777\ttotal: 3.4s\tremaining: 5.84s\n",
      "184:\tlearn: 0.3647627\ttotal: 3.42s\tremaining: 5.82s\n",
      "185:\tlearn: 0.3643467\ttotal: 3.44s\tremaining: 5.81s\n",
      "186:\tlearn: 0.3639713\ttotal: 3.47s\tremaining: 5.8s\n",
      "187:\tlearn: 0.3633988\ttotal: 3.49s\tremaining: 5.79s\n",
      "188:\tlearn: 0.3629578\ttotal: 3.51s\tremaining: 5.77s\n",
      "189:\tlearn: 0.3625058\ttotal: 3.52s\tremaining: 5.75s\n",
      "190:\tlearn: 0.3620800\ttotal: 3.54s\tremaining: 5.74s\n",
      "191:\tlearn: 0.3614923\ttotal: 3.56s\tremaining: 5.71s\n",
      "192:\tlearn: 0.3610268\ttotal: 3.58s\tremaining: 5.7s\n",
      "193:\tlearn: 0.3605859\ttotal: 3.6s\tremaining: 5.68s\n",
      "194:\tlearn: 0.3600531\ttotal: 3.62s\tremaining: 5.66s\n",
      "195:\tlearn: 0.3597308\ttotal: 3.63s\tremaining: 5.64s\n",
      "196:\tlearn: 0.3595257\ttotal: 3.65s\tremaining: 5.62s\n",
      "197:\tlearn: 0.3590818\ttotal: 3.67s\tremaining: 5.6s\n",
      "198:\tlearn: 0.3587041\ttotal: 3.69s\tremaining: 5.58s\n",
      "199:\tlearn: 0.3583350\ttotal: 3.71s\tremaining: 5.56s\n",
      "200:\tlearn: 0.3579737\ttotal: 3.73s\tremaining: 5.54s\n",
      "201:\tlearn: 0.3576708\ttotal: 3.74s\tremaining: 5.52s\n",
      "202:\tlearn: 0.3574916\ttotal: 3.76s\tremaining: 5.5s\n",
      "203:\tlearn: 0.3572685\ttotal: 3.78s\tremaining: 5.48s\n",
      "204:\tlearn: 0.3569740\ttotal: 3.79s\tremaining: 5.46s\n",
      "205:\tlearn: 0.3564934\ttotal: 3.81s\tremaining: 5.44s\n",
      "206:\tlearn: 0.3561830\ttotal: 3.83s\tremaining: 5.42s\n",
      "207:\tlearn: 0.3559133\ttotal: 3.85s\tremaining: 5.4s\n",
      "208:\tlearn: 0.3556601\ttotal: 3.87s\tremaining: 5.38s\n",
      "209:\tlearn: 0.3553082\ttotal: 3.88s\tremaining: 5.37s\n",
      "210:\tlearn: 0.3549642\ttotal: 3.9s\tremaining: 5.35s\n",
      "211:\tlearn: 0.3545764\ttotal: 3.92s\tremaining: 5.33s\n",
      "212:\tlearn: 0.3541223\ttotal: 3.94s\tremaining: 5.31s\n",
      "213:\tlearn: 0.3537737\ttotal: 3.96s\tremaining: 5.29s\n",
      "214:\tlearn: 0.3534969\ttotal: 3.98s\tremaining: 5.27s\n",
      "215:\tlearn: 0.3531821\ttotal: 3.99s\tremaining: 5.25s\n",
      "216:\tlearn: 0.3526972\ttotal: 4.02s\tremaining: 5.24s\n",
      "217:\tlearn: 0.3523320\ttotal: 4.03s\tremaining: 5.22s\n",
      "218:\tlearn: 0.3519063\ttotal: 4.05s\tremaining: 5.2s\n",
      "219:\tlearn: 0.3515336\ttotal: 4.07s\tremaining: 5.18s\n",
      "220:\tlearn: 0.3509922\ttotal: 4.09s\tremaining: 5.17s\n",
      "221:\tlearn: 0.3507752\ttotal: 4.11s\tremaining: 5.14s\n",
      "222:\tlearn: 0.3503641\ttotal: 4.13s\tremaining: 5.12s\n",
      "223:\tlearn: 0.3501011\ttotal: 4.14s\tremaining: 5.1s\n",
      "224:\tlearn: 0.3499247\ttotal: 4.16s\tremaining: 5.08s\n",
      "225:\tlearn: 0.3496253\ttotal: 4.18s\tremaining: 5.06s\n",
      "226:\tlearn: 0.3491459\ttotal: 4.19s\tremaining: 5.04s\n",
      "227:\tlearn: 0.3487623\ttotal: 4.21s\tremaining: 5.02s\n",
      "228:\tlearn: 0.3484202\ttotal: 4.23s\tremaining: 5s\n",
      "229:\tlearn: 0.3481163\ttotal: 4.25s\tremaining: 4.98s\n",
      "230:\tlearn: 0.3476209\ttotal: 4.26s\tremaining: 4.97s\n",
      "231:\tlearn: 0.3471335\ttotal: 4.28s\tremaining: 4.95s\n",
      "232:\tlearn: 0.3468558\ttotal: 4.3s\tremaining: 4.93s\n",
      "233:\tlearn: 0.3463957\ttotal: 4.32s\tremaining: 4.91s\n",
      "234:\tlearn: 0.3460112\ttotal: 4.34s\tremaining: 4.89s\n",
      "235:\tlearn: 0.3455557\ttotal: 4.36s\tremaining: 4.88s\n",
      "236:\tlearn: 0.3452237\ttotal: 4.38s\tremaining: 4.86s\n",
      "237:\tlearn: 0.3449863\ttotal: 4.4s\tremaining: 4.84s\n",
      "238:\tlearn: 0.3445255\ttotal: 4.42s\tremaining: 4.82s\n",
      "239:\tlearn: 0.3440823\ttotal: 4.44s\tremaining: 4.81s\n",
      "240:\tlearn: 0.3438476\ttotal: 4.45s\tremaining: 4.79s\n",
      "241:\tlearn: 0.3434875\ttotal: 4.47s\tremaining: 4.77s\n",
      "242:\tlearn: 0.3431795\ttotal: 4.49s\tremaining: 4.75s\n",
      "243:\tlearn: 0.3428584\ttotal: 4.51s\tremaining: 4.74s\n",
      "244:\tlearn: 0.3424017\ttotal: 4.54s\tremaining: 4.72s\n",
      "245:\tlearn: 0.3420536\ttotal: 4.55s\tremaining: 4.7s\n",
      "246:\tlearn: 0.3416652\ttotal: 4.57s\tremaining: 4.68s\n",
      "247:\tlearn: 0.3413269\ttotal: 4.59s\tremaining: 4.66s\n",
      "248:\tlearn: 0.3410185\ttotal: 4.61s\tremaining: 4.64s\n",
      "249:\tlearn: 0.3407857\ttotal: 4.63s\tremaining: 4.63s\n",
      "250:\tlearn: 0.3404916\ttotal: 4.65s\tremaining: 4.61s\n",
      "251:\tlearn: 0.3401245\ttotal: 4.67s\tremaining: 4.6s\n",
      "252:\tlearn: 0.3398422\ttotal: 4.69s\tremaining: 4.58s\n",
      "253:\tlearn: 0.3396039\ttotal: 4.71s\tremaining: 4.56s\n",
      "254:\tlearn: 0.3392748\ttotal: 4.73s\tremaining: 4.55s\n",
      "255:\tlearn: 0.3389304\ttotal: 4.75s\tremaining: 4.53s\n",
      "256:\tlearn: 0.3386364\ttotal: 4.77s\tremaining: 4.51s\n",
      "257:\tlearn: 0.3383426\ttotal: 4.79s\tremaining: 4.49s\n",
      "258:\tlearn: 0.3379478\ttotal: 4.81s\tremaining: 4.48s\n",
      "259:\tlearn: 0.3375925\ttotal: 4.83s\tremaining: 4.46s\n",
      "260:\tlearn: 0.3371881\ttotal: 4.85s\tremaining: 4.44s\n",
      "261:\tlearn: 0.3367880\ttotal: 4.87s\tremaining: 4.43s\n",
      "262:\tlearn: 0.3364909\ttotal: 4.89s\tremaining: 4.41s\n",
      "263:\tlearn: 0.3363380\ttotal: 4.91s\tremaining: 4.39s\n",
      "264:\tlearn: 0.3360746\ttotal: 4.93s\tremaining: 4.38s\n",
      "265:\tlearn: 0.3357090\ttotal: 4.96s\tremaining: 4.36s\n",
      "266:\tlearn: 0.3353977\ttotal: 4.98s\tremaining: 4.34s\n",
      "267:\tlearn: 0.3350691\ttotal: 5s\tremaining: 4.33s\n",
      "268:\tlearn: 0.3349287\ttotal: 5.02s\tremaining: 4.31s\n",
      "269:\tlearn: 0.3346167\ttotal: 5.04s\tremaining: 4.29s\n",
      "270:\tlearn: 0.3341585\ttotal: 5.06s\tremaining: 4.28s\n",
      "271:\tlearn: 0.3338591\ttotal: 5.08s\tremaining: 4.26s\n",
      "272:\tlearn: 0.3335112\ttotal: 5.1s\tremaining: 4.24s\n",
      "273:\tlearn: 0.3330826\ttotal: 5.11s\tremaining: 4.22s\n",
      "274:\tlearn: 0.3328228\ttotal: 5.13s\tremaining: 4.2s\n",
      "275:\tlearn: 0.3324995\ttotal: 5.15s\tremaining: 4.18s\n",
      "276:\tlearn: 0.3322635\ttotal: 5.17s\tremaining: 4.16s\n",
      "277:\tlearn: 0.3318882\ttotal: 5.19s\tremaining: 4.14s\n",
      "278:\tlearn: 0.3315398\ttotal: 5.21s\tremaining: 4.12s\n",
      "279:\tlearn: 0.3312778\ttotal: 5.22s\tremaining: 4.1s\n",
      "280:\tlearn: 0.3309810\ttotal: 5.24s\tremaining: 4.08s\n",
      "281:\tlearn: 0.3306309\ttotal: 5.26s\tremaining: 4.06s\n",
      "282:\tlearn: 0.3304023\ttotal: 5.27s\tremaining: 4.04s\n",
      "283:\tlearn: 0.3301066\ttotal: 5.29s\tremaining: 4.03s\n",
      "284:\tlearn: 0.3298053\ttotal: 5.31s\tremaining: 4s\n",
      "285:\tlearn: 0.3293990\ttotal: 5.33s\tremaining: 3.99s\n",
      "286:\tlearn: 0.3290220\ttotal: 5.35s\tremaining: 3.97s\n",
      "287:\tlearn: 0.3287664\ttotal: 5.37s\tremaining: 3.95s\n",
      "288:\tlearn: 0.3284253\ttotal: 5.38s\tremaining: 3.93s\n",
      "289:\tlearn: 0.3280756\ttotal: 5.41s\tremaining: 3.91s\n",
      "290:\tlearn: 0.3277720\ttotal: 5.42s\tremaining: 3.9s\n",
      "291:\tlearn: 0.3274194\ttotal: 5.44s\tremaining: 3.88s\n",
      "292:\tlearn: 0.3271701\ttotal: 5.46s\tremaining: 3.86s\n",
      "293:\tlearn: 0.3269385\ttotal: 5.48s\tremaining: 3.84s\n",
      "294:\tlearn: 0.3267893\ttotal: 5.5s\tremaining: 3.82s\n",
      "295:\tlearn: 0.3263676\ttotal: 5.52s\tremaining: 3.8s\n",
      "296:\tlearn: 0.3261524\ttotal: 5.54s\tremaining: 3.79s\n",
      "297:\tlearn: 0.3258315\ttotal: 5.56s\tremaining: 3.77s\n",
      "298:\tlearn: 0.3255530\ttotal: 5.58s\tremaining: 3.75s\n",
      "299:\tlearn: 0.3250938\ttotal: 5.6s\tremaining: 3.73s\n",
      "300:\tlearn: 0.3249214\ttotal: 5.62s\tremaining: 3.71s\n",
      "301:\tlearn: 0.3246026\ttotal: 5.64s\tremaining: 3.69s\n",
      "302:\tlearn: 0.3242607\ttotal: 5.65s\tremaining: 3.68s\n",
      "303:\tlearn: 0.3239351\ttotal: 5.67s\tremaining: 3.66s\n",
      "304:\tlearn: 0.3236865\ttotal: 5.69s\tremaining: 3.64s\n",
      "305:\tlearn: 0.3234620\ttotal: 5.71s\tremaining: 3.62s\n",
      "306:\tlearn: 0.3230256\ttotal: 5.72s\tremaining: 3.6s\n",
      "307:\tlearn: 0.3227536\ttotal: 5.74s\tremaining: 3.58s\n",
      "308:\tlearn: 0.3224518\ttotal: 5.76s\tremaining: 3.56s\n",
      "309:\tlearn: 0.3220671\ttotal: 5.78s\tremaining: 3.54s\n",
      "310:\tlearn: 0.3216914\ttotal: 5.8s\tremaining: 3.53s\n",
      "311:\tlearn: 0.3214199\ttotal: 5.82s\tremaining: 3.51s\n",
      "312:\tlearn: 0.3210658\ttotal: 5.84s\tremaining: 3.49s\n",
      "313:\tlearn: 0.3208583\ttotal: 5.86s\tremaining: 3.47s\n",
      "314:\tlearn: 0.3205867\ttotal: 5.88s\tremaining: 3.45s\n",
      "315:\tlearn: 0.3203357\ttotal: 5.89s\tremaining: 3.43s\n",
      "316:\tlearn: 0.3200328\ttotal: 5.91s\tremaining: 3.41s\n",
      "317:\tlearn: 0.3197020\ttotal: 5.93s\tremaining: 3.4s\n",
      "318:\tlearn: 0.3193840\ttotal: 5.95s\tremaining: 3.38s\n",
      "319:\tlearn: 0.3191146\ttotal: 5.97s\tremaining: 3.36s\n",
      "320:\tlearn: 0.3187620\ttotal: 5.99s\tremaining: 3.34s\n",
      "321:\tlearn: 0.3184613\ttotal: 6.01s\tremaining: 3.32s\n",
      "322:\tlearn: 0.3182819\ttotal: 6.03s\tremaining: 3.3s\n",
      "323:\tlearn: 0.3179852\ttotal: 6.05s\tremaining: 3.29s\n",
      "324:\tlearn: 0.3177238\ttotal: 6.07s\tremaining: 3.27s\n",
      "325:\tlearn: 0.3174409\ttotal: 6.09s\tremaining: 3.25s\n",
      "326:\tlearn: 0.3170797\ttotal: 6.11s\tremaining: 3.23s\n",
      "327:\tlearn: 0.3167920\ttotal: 6.13s\tremaining: 3.21s\n",
      "328:\tlearn: 0.3165583\ttotal: 6.14s\tremaining: 3.19s\n",
      "329:\tlearn: 0.3162540\ttotal: 6.16s\tremaining: 3.17s\n",
      "330:\tlearn: 0.3159889\ttotal: 6.18s\tremaining: 3.15s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "331:\tlearn: 0.3158125\ttotal: 6.2s\tremaining: 3.14s\n",
      "332:\tlearn: 0.3153626\ttotal: 6.22s\tremaining: 3.12s\n",
      "333:\tlearn: 0.3150224\ttotal: 6.24s\tremaining: 3.1s\n",
      "334:\tlearn: 0.3148245\ttotal: 6.26s\tremaining: 3.08s\n",
      "335:\tlearn: 0.3144970\ttotal: 6.28s\tremaining: 3.06s\n",
      "336:\tlearn: 0.3142473\ttotal: 6.3s\tremaining: 3.05s\n",
      "337:\tlearn: 0.3139410\ttotal: 6.32s\tremaining: 3.03s\n",
      "338:\tlearn: 0.3138230\ttotal: 6.34s\tremaining: 3.01s\n",
      "339:\tlearn: 0.3135921\ttotal: 6.36s\tremaining: 3s\n",
      "340:\tlearn: 0.3132910\ttotal: 6.39s\tremaining: 2.98s\n",
      "341:\tlearn: 0.3130906\ttotal: 6.41s\tremaining: 2.96s\n",
      "342:\tlearn: 0.3126892\ttotal: 6.43s\tremaining: 2.94s\n",
      "343:\tlearn: 0.3123651\ttotal: 6.45s\tremaining: 2.93s\n",
      "344:\tlearn: 0.3121911\ttotal: 6.47s\tremaining: 2.91s\n",
      "345:\tlearn: 0.3119892\ttotal: 6.49s\tremaining: 2.89s\n",
      "346:\tlearn: 0.3116795\ttotal: 6.52s\tremaining: 2.88s\n",
      "347:\tlearn: 0.3113254\ttotal: 6.54s\tremaining: 2.86s\n",
      "348:\tlearn: 0.3110047\ttotal: 6.56s\tremaining: 2.84s\n",
      "349:\tlearn: 0.3108229\ttotal: 6.58s\tremaining: 2.82s\n",
      "350:\tlearn: 0.3105773\ttotal: 6.6s\tremaining: 2.8s\n",
      "351:\tlearn: 0.3103636\ttotal: 6.62s\tremaining: 2.78s\n",
      "352:\tlearn: 0.3100583\ttotal: 6.64s\tremaining: 2.77s\n",
      "353:\tlearn: 0.3097877\ttotal: 6.66s\tremaining: 2.75s\n",
      "354:\tlearn: 0.3095539\ttotal: 6.68s\tremaining: 2.73s\n",
      "355:\tlearn: 0.3093572\ttotal: 6.7s\tremaining: 2.71s\n",
      "356:\tlearn: 0.3090952\ttotal: 6.72s\tremaining: 2.69s\n",
      "357:\tlearn: 0.3088926\ttotal: 6.74s\tremaining: 2.67s\n",
      "358:\tlearn: 0.3086020\ttotal: 6.76s\tremaining: 2.65s\n",
      "359:\tlearn: 0.3083622\ttotal: 6.78s\tremaining: 2.63s\n",
      "360:\tlearn: 0.3080828\ttotal: 6.8s\tremaining: 2.62s\n",
      "361:\tlearn: 0.3078416\ttotal: 6.82s\tremaining: 2.6s\n",
      "362:\tlearn: 0.3075173\ttotal: 6.84s\tremaining: 2.58s\n",
      "363:\tlearn: 0.3071954\ttotal: 6.86s\tremaining: 2.56s\n",
      "364:\tlearn: 0.3069960\ttotal: 6.88s\tremaining: 2.54s\n",
      "365:\tlearn: 0.3067368\ttotal: 6.9s\tremaining: 2.52s\n",
      "366:\tlearn: 0.3064433\ttotal: 6.92s\tremaining: 2.51s\n",
      "367:\tlearn: 0.3060367\ttotal: 6.94s\tremaining: 2.49s\n",
      "368:\tlearn: 0.3058133\ttotal: 6.96s\tremaining: 2.47s\n",
      "369:\tlearn: 0.3055870\ttotal: 6.97s\tremaining: 2.45s\n",
      "370:\tlearn: 0.3052610\ttotal: 6.99s\tremaining: 2.43s\n",
      "371:\tlearn: 0.3049978\ttotal: 7.01s\tremaining: 2.41s\n",
      "372:\tlearn: 0.3047632\ttotal: 7.03s\tremaining: 2.39s\n",
      "373:\tlearn: 0.3046087\ttotal: 7.04s\tremaining: 2.37s\n",
      "374:\tlearn: 0.3043361\ttotal: 7.06s\tremaining: 2.35s\n",
      "375:\tlearn: 0.3040310\ttotal: 7.08s\tremaining: 2.34s\n",
      "376:\tlearn: 0.3037858\ttotal: 7.1s\tremaining: 2.32s\n",
      "377:\tlearn: 0.3035307\ttotal: 7.12s\tremaining: 2.3s\n",
      "378:\tlearn: 0.3031296\ttotal: 7.14s\tremaining: 2.28s\n",
      "379:\tlearn: 0.3028753\ttotal: 7.16s\tremaining: 2.26s\n",
      "380:\tlearn: 0.3026321\ttotal: 7.18s\tremaining: 2.24s\n",
      "381:\tlearn: 0.3023741\ttotal: 7.21s\tremaining: 2.23s\n",
      "382:\tlearn: 0.3022103\ttotal: 7.23s\tremaining: 2.21s\n",
      "383:\tlearn: 0.3019497\ttotal: 7.25s\tremaining: 2.19s\n",
      "384:\tlearn: 0.3017106\ttotal: 7.27s\tremaining: 2.17s\n",
      "385:\tlearn: 0.3014445\ttotal: 7.29s\tremaining: 2.15s\n",
      "386:\tlearn: 0.3011212\ttotal: 7.31s\tremaining: 2.13s\n",
      "387:\tlearn: 0.3008829\ttotal: 7.33s\tremaining: 2.12s\n",
      "388:\tlearn: 0.3006935\ttotal: 7.35s\tremaining: 2.1s\n",
      "389:\tlearn: 0.3003868\ttotal: 7.37s\tremaining: 2.08s\n",
      "390:\tlearn: 0.3002365\ttotal: 7.39s\tremaining: 2.06s\n",
      "391:\tlearn: 0.2999963\ttotal: 7.4s\tremaining: 2.04s\n",
      "392:\tlearn: 0.2997258\ttotal: 7.42s\tremaining: 2.02s\n",
      "393:\tlearn: 0.2995554\ttotal: 7.44s\tremaining: 2s\n",
      "394:\tlearn: 0.2991172\ttotal: 7.46s\tremaining: 1.98s\n",
      "395:\tlearn: 0.2988898\ttotal: 7.49s\tremaining: 1.97s\n",
      "396:\tlearn: 0.2986331\ttotal: 7.51s\tremaining: 1.95s\n",
      "397:\tlearn: 0.2983993\ttotal: 7.54s\tremaining: 1.93s\n",
      "398:\tlearn: 0.2982523\ttotal: 7.56s\tremaining: 1.91s\n",
      "399:\tlearn: 0.2980229\ttotal: 7.58s\tremaining: 1.89s\n",
      "400:\tlearn: 0.2978290\ttotal: 7.6s\tremaining: 1.88s\n",
      "401:\tlearn: 0.2976366\ttotal: 7.61s\tremaining: 1.86s\n",
      "402:\tlearn: 0.2974352\ttotal: 7.63s\tremaining: 1.84s\n",
      "403:\tlearn: 0.2972028\ttotal: 7.65s\tremaining: 1.82s\n",
      "404:\tlearn: 0.2969863\ttotal: 7.67s\tremaining: 1.8s\n",
      "405:\tlearn: 0.2966648\ttotal: 7.69s\tremaining: 1.78s\n",
      "406:\tlearn: 0.2964704\ttotal: 7.71s\tremaining: 1.76s\n",
      "407:\tlearn: 0.2960888\ttotal: 7.73s\tremaining: 1.74s\n",
      "408:\tlearn: 0.2958545\ttotal: 7.75s\tremaining: 1.72s\n",
      "409:\tlearn: 0.2956124\ttotal: 7.77s\tremaining: 1.71s\n",
      "410:\tlearn: 0.2952283\ttotal: 7.79s\tremaining: 1.69s\n",
      "411:\tlearn: 0.2949470\ttotal: 7.82s\tremaining: 1.67s\n",
      "412:\tlearn: 0.2947539\ttotal: 7.84s\tremaining: 1.65s\n",
      "413:\tlearn: 0.2944312\ttotal: 7.86s\tremaining: 1.63s\n",
      "414:\tlearn: 0.2941671\ttotal: 7.88s\tremaining: 1.61s\n",
      "415:\tlearn: 0.2939043\ttotal: 7.91s\tremaining: 1.6s\n",
      "416:\tlearn: 0.2936138\ttotal: 7.93s\tremaining: 1.58s\n",
      "417:\tlearn: 0.2933406\ttotal: 7.95s\tremaining: 1.56s\n",
      "418:\tlearn: 0.2930909\ttotal: 7.97s\tremaining: 1.54s\n",
      "419:\tlearn: 0.2928259\ttotal: 7.99s\tremaining: 1.52s\n",
      "420:\tlearn: 0.2925128\ttotal: 8.01s\tremaining: 1.5s\n",
      "421:\tlearn: 0.2922173\ttotal: 8.03s\tremaining: 1.48s\n",
      "422:\tlearn: 0.2920147\ttotal: 8.04s\tremaining: 1.46s\n",
      "423:\tlearn: 0.2917926\ttotal: 8.06s\tremaining: 1.44s\n",
      "424:\tlearn: 0.2914641\ttotal: 8.08s\tremaining: 1.43s\n",
      "425:\tlearn: 0.2910305\ttotal: 8.1s\tremaining: 1.41s\n",
      "426:\tlearn: 0.2906968\ttotal: 8.13s\tremaining: 1.39s\n",
      "427:\tlearn: 0.2903536\ttotal: 8.16s\tremaining: 1.37s\n",
      "428:\tlearn: 0.2900980\ttotal: 8.18s\tremaining: 1.35s\n",
      "429:\tlearn: 0.2898596\ttotal: 8.2s\tremaining: 1.33s\n",
      "430:\tlearn: 0.2895537\ttotal: 8.22s\tremaining: 1.31s\n",
      "431:\tlearn: 0.2892991\ttotal: 8.24s\tremaining: 1.3s\n",
      "432:\tlearn: 0.2890717\ttotal: 8.25s\tremaining: 1.28s\n",
      "433:\tlearn: 0.2888449\ttotal: 8.27s\tremaining: 1.26s\n",
      "434:\tlearn: 0.2886902\ttotal: 8.29s\tremaining: 1.24s\n",
      "435:\tlearn: 0.2884297\ttotal: 8.31s\tremaining: 1.22s\n",
      "436:\tlearn: 0.2882200\ttotal: 8.32s\tremaining: 1.2s\n",
      "437:\tlearn: 0.2880901\ttotal: 8.34s\tremaining: 1.18s\n",
      "438:\tlearn: 0.2877487\ttotal: 8.36s\tremaining: 1.16s\n",
      "439:\tlearn: 0.2874934\ttotal: 8.38s\tremaining: 1.14s\n",
      "440:\tlearn: 0.2873396\ttotal: 8.4s\tremaining: 1.12s\n",
      "441:\tlearn: 0.2871506\ttotal: 8.42s\tremaining: 1.1s\n",
      "442:\tlearn: 0.2869373\ttotal: 8.44s\tremaining: 1.08s\n",
      "443:\tlearn: 0.2867137\ttotal: 8.45s\tremaining: 1.07s\n",
      "444:\tlearn: 0.2863009\ttotal: 8.47s\tremaining: 1.05s\n",
      "445:\tlearn: 0.2860100\ttotal: 8.49s\tremaining: 1.03s\n",
      "446:\tlearn: 0.2857839\ttotal: 8.51s\tremaining: 1.01s\n",
      "447:\tlearn: 0.2855185\ttotal: 8.53s\tremaining: 990ms\n",
      "448:\tlearn: 0.2852832\ttotal: 8.55s\tremaining: 971ms\n",
      "449:\tlearn: 0.2850344\ttotal: 8.57s\tremaining: 952ms\n",
      "450:\tlearn: 0.2847992\ttotal: 8.59s\tremaining: 933ms\n",
      "451:\tlearn: 0.2846216\ttotal: 8.61s\tremaining: 914ms\n",
      "452:\tlearn: 0.2844305\ttotal: 8.63s\tremaining: 895ms\n",
      "453:\tlearn: 0.2841682\ttotal: 8.64s\tremaining: 876ms\n",
      "454:\tlearn: 0.2838700\ttotal: 8.66s\tremaining: 857ms\n",
      "455:\tlearn: 0.2836026\ttotal: 8.68s\tremaining: 838ms\n",
      "456:\tlearn: 0.2834549\ttotal: 8.7s\tremaining: 819ms\n",
      "457:\tlearn: 0.2831461\ttotal: 8.72s\tremaining: 800ms\n",
      "458:\tlearn: 0.2829901\ttotal: 8.74s\tremaining: 781ms\n",
      "459:\tlearn: 0.2827682\ttotal: 8.77s\tremaining: 762ms\n",
      "460:\tlearn: 0.2824788\ttotal: 8.79s\tremaining: 744ms\n",
      "461:\tlearn: 0.2822871\ttotal: 8.81s\tremaining: 725ms\n",
      "462:\tlearn: 0.2820124\ttotal: 8.83s\tremaining: 706ms\n",
      "463:\tlearn: 0.2817626\ttotal: 8.85s\tremaining: 687ms\n",
      "464:\tlearn: 0.2815811\ttotal: 8.87s\tremaining: 668ms\n",
      "465:\tlearn: 0.2813073\ttotal: 8.9s\tremaining: 649ms\n",
      "466:\tlearn: 0.2811341\ttotal: 8.92s\tremaining: 630ms\n",
      "467:\tlearn: 0.2808017\ttotal: 8.94s\tremaining: 611ms\n",
      "468:\tlearn: 0.2806165\ttotal: 8.96s\tremaining: 592ms\n",
      "469:\tlearn: 0.2804749\ttotal: 8.99s\tremaining: 574ms\n",
      "470:\tlearn: 0.2802714\ttotal: 9.01s\tremaining: 555ms\n",
      "471:\tlearn: 0.2800828\ttotal: 9.03s\tremaining: 536ms\n",
      "472:\tlearn: 0.2797914\ttotal: 9.06s\tremaining: 517ms\n",
      "473:\tlearn: 0.2795853\ttotal: 9.08s\tremaining: 498ms\n",
      "474:\tlearn: 0.2793463\ttotal: 9.1s\tremaining: 479ms\n",
      "475:\tlearn: 0.2792149\ttotal: 9.12s\tremaining: 460ms\n",
      "476:\tlearn: 0.2789428\ttotal: 9.15s\tremaining: 441ms\n",
      "477:\tlearn: 0.2787399\ttotal: 9.17s\tremaining: 422ms\n",
      "478:\tlearn: 0.2785947\ttotal: 9.19s\tremaining: 403ms\n",
      "479:\tlearn: 0.2783631\ttotal: 9.22s\tremaining: 384ms\n",
      "480:\tlearn: 0.2780735\ttotal: 9.24s\tremaining: 365ms\n",
      "481:\tlearn: 0.2778290\ttotal: 9.26s\tremaining: 346ms\n",
      "482:\tlearn: 0.2776247\ttotal: 9.28s\tremaining: 327ms\n",
      "483:\tlearn: 0.2773795\ttotal: 9.3s\tremaining: 307ms\n",
      "484:\tlearn: 0.2771873\ttotal: 9.32s\tremaining: 288ms\n",
      "485:\tlearn: 0.2769746\ttotal: 9.34s\tremaining: 269ms\n",
      "486:\tlearn: 0.2767623\ttotal: 9.35s\tremaining: 250ms\n",
      "487:\tlearn: 0.2765005\ttotal: 9.37s\tremaining: 230ms\n",
      "488:\tlearn: 0.2763225\ttotal: 9.39s\tremaining: 211ms\n",
      "489:\tlearn: 0.2761018\ttotal: 9.41s\tremaining: 192ms\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "490:\tlearn: 0.2759686\ttotal: 9.43s\tremaining: 173ms\n",
      "491:\tlearn: 0.2757274\ttotal: 9.45s\tremaining: 154ms\n",
      "492:\tlearn: 0.2754949\ttotal: 9.47s\tremaining: 134ms\n",
      "493:\tlearn: 0.2751373\ttotal: 9.49s\tremaining: 115ms\n",
      "494:\tlearn: 0.2749335\ttotal: 9.52s\tremaining: 96.1ms\n",
      "495:\tlearn: 0.2747271\ttotal: 9.53s\tremaining: 76.9ms\n",
      "496:\tlearn: 0.2745283\ttotal: 9.55s\tremaining: 57.7ms\n",
      "497:\tlearn: 0.2743593\ttotal: 9.57s\tremaining: 38.4ms\n",
      "498:\tlearn: 0.2741571\ttotal: 9.59s\tremaining: 19.2ms\n",
      "499:\tlearn: 0.2739964\ttotal: 9.61s\tremaining: 0us\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>VotingClassifier(estimators=[(&#x27;xgboost&#x27;,\n",
       "                              XGBClassifier(base_score=None, booster=None,\n",
       "                                            callbacks=None,\n",
       "                                            colsample_bylevel=None,\n",
       "                                            colsample_bynode=None,\n",
       "                                            colsample_bytree=1, device=None,\n",
       "                                            early_stopping_rounds=None,\n",
       "                                            enable_categorical=False,\n",
       "                                            eval_metric=None,\n",
       "                                            feature_types=None, gamma=0.5,\n",
       "                                            grow_policy=None,\n",
       "                                            importance_type=None,\n",
       "                                            interaction_constraints=None,\n",
       "                                            learning_ra...\n",
       "                                            monotone_constraints=None,\n",
       "                                            multi_strategy=None,\n",
       "                                            n_estimators=750, n_jobs=None,\n",
       "                                            num_parallel_tree=None,\n",
       "                                            random_state=42, ...)),\n",
       "                             (&#x27;lgbm&#x27;,\n",
       "                              LGBMClassifier(colsample_bytree=1,\n",
       "                                             learning_rate=0.05, max_depth=8,\n",
       "                                             n_estimators=750, num_leaves=4,\n",
       "                                             random_state=42, reg_alpha=0.1,\n",
       "                                             subsample=0.6)),\n",
       "                             (&#x27;catboost&#x27;,\n",
       "                              &lt;catboost.core.CatBoostClassifier object at 0x0000028259E1D610&gt;)],\n",
       "                 voting=&#x27;soft&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">VotingClassifier</label><div class=\"sk-toggleable__content\"><pre>VotingClassifier(estimators=[(&#x27;xgboost&#x27;,\n",
       "                              XGBClassifier(base_score=None, booster=None,\n",
       "                                            callbacks=None,\n",
       "                                            colsample_bylevel=None,\n",
       "                                            colsample_bynode=None,\n",
       "                                            colsample_bytree=1, device=None,\n",
       "                                            early_stopping_rounds=None,\n",
       "                                            enable_categorical=False,\n",
       "                                            eval_metric=None,\n",
       "                                            feature_types=None, gamma=0.5,\n",
       "                                            grow_policy=None,\n",
       "                                            importance_type=None,\n",
       "                                            interaction_constraints=None,\n",
       "                                            learning_ra...\n",
       "                                            monotone_constraints=None,\n",
       "                                            multi_strategy=None,\n",
       "                                            n_estimators=750, n_jobs=None,\n",
       "                                            num_parallel_tree=None,\n",
       "                                            random_state=42, ...)),\n",
       "                             (&#x27;lgbm&#x27;,\n",
       "                              LGBMClassifier(colsample_bytree=1,\n",
       "                                             learning_rate=0.05, max_depth=8,\n",
       "                                             n_estimators=750, num_leaves=4,\n",
       "                                             random_state=42, reg_alpha=0.1,\n",
       "                                             subsample=0.6)),\n",
       "                             (&#x27;catboost&#x27;,\n",
       "                              &lt;catboost.core.CatBoostClassifier object at 0x0000028259E1D610&gt;)],\n",
       "                 voting=&#x27;soft&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>xgboost</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,\n",
       "              device=None, early_stopping_rounds=None, enable_categorical=False,\n",
       "              eval_metric=None, feature_types=None, gamma=0.5, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.05, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=8,\n",
       "              max_leaves=None, min_child_weight=1, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=750,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=42, ...)</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>lgbm</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LGBMClassifier</label><div class=\"sk-toggleable__content\"><pre>LGBMClassifier(colsample_bytree=1, learning_rate=0.05, max_depth=8,\n",
       "               n_estimators=750, num_leaves=4, random_state=42, reg_alpha=0.1,\n",
       "               subsample=0.6)</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>catboost</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">CatBoostClassifier</label><div class=\"sk-toggleable__content\"><pre>&lt;catboost.core.CatBoostClassifier object at 0x0000028259E1D610&gt;</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "VotingClassifier(estimators=[('xgboost',\n",
       "                              XGBClassifier(base_score=None, booster=None,\n",
       "                                            callbacks=None,\n",
       "                                            colsample_bylevel=None,\n",
       "                                            colsample_bynode=None,\n",
       "                                            colsample_bytree=1, device=None,\n",
       "                                            early_stopping_rounds=None,\n",
       "                                            enable_categorical=False,\n",
       "                                            eval_metric=None,\n",
       "                                            feature_types=None, gamma=0.5,\n",
       "                                            grow_policy=None,\n",
       "                                            importance_type=None,\n",
       "                                            interaction_constraints=None,\n",
       "                                            learning_ra...\n",
       "                                            monotone_constraints=None,\n",
       "                                            multi_strategy=None,\n",
       "                                            n_estimators=750, n_jobs=None,\n",
       "                                            num_parallel_tree=None,\n",
       "                                            random_state=42, ...)),\n",
       "                             ('lgbm',\n",
       "                              LGBMClassifier(colsample_bytree=1,\n",
       "                                             learning_rate=0.05, max_depth=8,\n",
       "                                             n_estimators=750, num_leaves=4,\n",
       "                                             random_state=42, reg_alpha=0.1,\n",
       "                                             subsample=0.6)),\n",
       "                             ('catboost',\n",
       "                              <catboost.core.CatBoostClassifier object at 0x0000028259E1D610>)],\n",
       "                 voting='soft')"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "voting_classifier = VotingClassifier(\n",
    "    estimators=[\n",
    "        ('xgboost', model_xgb),\n",
    "        ('lgbm', model_lgbm),\n",
    "        ('catboost', model_catboost),\n",
    "    ],\n",
    "    voting='soft'  # 'soft' for weighted voting based on probabilities\n",
    ")\n",
    "voting_classifier.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_df['Date'] = pd.to_datetime(test_df['Date'])\n",
    "\n",
    "test_df['Year'] = test_df['Date'].dt.year\n",
    "test_df['Month'] = test_df['Date'].dt.month\n",
    "test_df['Day'] = test_df['Date'].dt.day\n",
    "\n",
    "test_df.drop(['Date'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_df[\"Counts\"] = test_df[\"Location\"].apply(lambda x: counts[x]/totCounts[x])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "ids = test_df[\"ID\"]\n",
    "test_df.drop(\"ID\", inplace=True, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>MinTemp</th>\n",
       "      <th>MaxTemp</th>\n",
       "      <th>Rainfall</th>\n",
       "      <th>WindGustDir</th>\n",
       "      <th>WindGustSpeed</th>\n",
       "      <th>WindDir9am</th>\n",
       "      <th>WindDir3pm</th>\n",
       "      <th>WindSpeed9am</th>\n",
       "      <th>WindSpeed3pm</th>\n",
       "      <th>...</th>\n",
       "      <th>Humidity3pm</th>\n",
       "      <th>Pressure9am</th>\n",
       "      <th>Pressure3pm</th>\n",
       "      <th>Temp9am</th>\n",
       "      <th>Temp3pm</th>\n",
       "      <th>RainToday</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aurangabad</td>\n",
       "      <td>15.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>4.2</td>\n",
       "      <td>NNW</td>\n",
       "      <td>54.0</td>\n",
       "      <td>NNW</td>\n",
       "      <td>NW</td>\n",
       "      <td>24.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>1003.7</td>\n",
       "      <td>17.3</td>\n",
       "      <td>17.6</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "      <td>22</td>\n",
       "      <td>0.303550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sydney</td>\n",
       "      <td>13.1</td>\n",
       "      <td>26.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>W</td>\n",
       "      <td>WNW</td>\n",
       "      <td>22.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1013.0</td>\n",
       "      <td>1009.0</td>\n",
       "      <td>16.9</td>\n",
       "      <td>25.9</td>\n",
       "      <td>No</td>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>30</td>\n",
       "      <td>0.252383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Pune</td>\n",
       "      <td>18.1</td>\n",
       "      <td>32.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>30.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NE</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>...</td>\n",
       "      <td>51.0</td>\n",
       "      <td>1019.2</td>\n",
       "      <td>1014.6</td>\n",
       "      <td>20.9</td>\n",
       "      <td>31.6</td>\n",
       "      <td>No</td>\n",
       "      <td>2013</td>\n",
       "      <td>3</td>\n",
       "      <td>27</td>\n",
       "      <td>0.182358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Nagpore</td>\n",
       "      <td>17.7</td>\n",
       "      <td>22.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SSE</td>\n",
       "      <td>54.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.0</td>\n",
       "      <td>...</td>\n",
       "      <td>80.0</td>\n",
       "      <td>1012.8</td>\n",
       "      <td>1014.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2010</td>\n",
       "      <td>4</td>\n",
       "      <td>25</td>\n",
       "      <td>0.230864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Pune</td>\n",
       "      <td>18.4</td>\n",
       "      <td>25.7</td>\n",
       "      <td>2.6</td>\n",
       "      <td>NE</td>\n",
       "      <td>24.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NNE</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1026.5</td>\n",
       "      <td>1023.3</td>\n",
       "      <td>19.8</td>\n",
       "      <td>24.2</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2014</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0.182358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28422</th>\n",
       "      <td>Thane</td>\n",
       "      <td>5.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>N</td>\n",
       "      <td>19.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NNW</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>...</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1032.6</td>\n",
       "      <td>1028.3</td>\n",
       "      <td>13.2</td>\n",
       "      <td>21.9</td>\n",
       "      <td>No</td>\n",
       "      <td>2016</td>\n",
       "      <td>4</td>\n",
       "      <td>25</td>\n",
       "      <td>0.185200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28425</th>\n",
       "      <td>Guwahati</td>\n",
       "      <td>17.2</td>\n",
       "      <td>32.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>E</td>\n",
       "      <td>43.0</td>\n",
       "      <td>E</td>\n",
       "      <td>SE</td>\n",
       "      <td>20.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>...</td>\n",
       "      <td>18.0</td>\n",
       "      <td>1019.7</td>\n",
       "      <td>1015.8</td>\n",
       "      <td>24.3</td>\n",
       "      <td>32.0</td>\n",
       "      <td>No</td>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>0.074781</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28426</th>\n",
       "      <td>Chennai</td>\n",
       "      <td>17.4</td>\n",
       "      <td>22.8</td>\n",
       "      <td>35.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SE</td>\n",
       "      <td>SE</td>\n",
       "      <td>28.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>...</td>\n",
       "      <td>92.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21.4</td>\n",
       "      <td>20.8</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2009</td>\n",
       "      <td>3</td>\n",
       "      <td>31</td>\n",
       "      <td>0.242834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28430</th>\n",
       "      <td>Coimbatore</td>\n",
       "      <td>12.7</td>\n",
       "      <td>20.6</td>\n",
       "      <td>0.8</td>\n",
       "      <td>WNW</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NNW</td>\n",
       "      <td>WSW</td>\n",
       "      <td>15.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>...</td>\n",
       "      <td>83.0</td>\n",
       "      <td>1020.4</td>\n",
       "      <td>1020.4</td>\n",
       "      <td>15.9</td>\n",
       "      <td>19.2</td>\n",
       "      <td>No</td>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "      <td>23</td>\n",
       "      <td>0.318828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28431</th>\n",
       "      <td>Faridabad</td>\n",
       "      <td>20.2</td>\n",
       "      <td>26.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NNE</td>\n",
       "      <td>39.0</td>\n",
       "      <td>NNE</td>\n",
       "      <td>NNE</td>\n",
       "      <td>20.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>...</td>\n",
       "      <td>37.0</td>\n",
       "      <td>1018.3</td>\n",
       "      <td>1016.6</td>\n",
       "      <td>21.8</td>\n",
       "      <td>25.2</td>\n",
       "      <td>No</td>\n",
       "      <td>2016</td>\n",
       "      <td>4</td>\n",
       "      <td>28</td>\n",
       "      <td>0.245599</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7512 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Location  MinTemp  MaxTemp  Rainfall WindGustDir  WindGustSpeed  \\\n",
       "0      Aurangabad     15.0     18.9       4.2         NNW           54.0   \n",
       "1          Sydney     13.1     26.8       0.0         NaN            NaN   \n",
       "2            Pune     18.1     32.2       0.0          NE           30.0   \n",
       "6         Nagpore     17.7     22.3       NaN         SSE           54.0   \n",
       "7            Pune     18.4     25.7       2.6          NE           24.0   \n",
       "...           ...      ...      ...       ...         ...            ...   \n",
       "28422       Thane      5.0     23.0       0.0           N           19.0   \n",
       "28425    Guwahati     17.2     32.3       0.0           E           43.0   \n",
       "28426     Chennai     17.4     22.8      35.2         NaN            NaN   \n",
       "28430  Coimbatore     12.7     20.6       0.8         WNW           31.0   \n",
       "28431   Faridabad     20.2     26.4       0.0         NNE           39.0   \n",
       "\n",
       "      WindDir9am WindDir3pm  WindSpeed9am  WindSpeed3pm  ...  Humidity3pm  \\\n",
       "0            NNW         NW          24.0          31.0  ...         64.0   \n",
       "1              W        WNW          22.0          15.0  ...         22.0   \n",
       "2            NaN         NE           0.0          17.0  ...         51.0   \n",
       "6            NaN          S           NaN          37.0  ...         80.0   \n",
       "7            NaN        NNE           0.0           2.0  ...         64.0   \n",
       "...          ...        ...           ...           ...  ...          ...   \n",
       "28422        NaN        NNW           0.0           6.0  ...         32.0   \n",
       "28425          E         SE          20.0          24.0  ...         18.0   \n",
       "28426         SE         SE          28.0          19.0  ...         92.0   \n",
       "28430        NNW        WSW          15.0          11.0  ...         83.0   \n",
       "28431        NNE        NNE          20.0           9.0  ...         37.0   \n",
       "\n",
       "       Pressure9am  Pressure3pm  Temp9am  Temp3pm  RainToday  Year  Month  \\\n",
       "0           1005.2       1003.7     17.3     17.6        Yes  2012      4   \n",
       "1           1013.0       1009.0     16.9     25.9         No  2008      3   \n",
       "2           1019.2       1014.6     20.9     31.6         No  2013      3   \n",
       "6           1012.8       1014.3      NaN     17.0        NaN  2010      4   \n",
       "7           1026.5       1023.3     19.8     24.2        Yes  2014      3   \n",
       "...            ...          ...      ...      ...        ...   ...    ...   \n",
       "28422       1032.6       1028.3     13.2     21.9         No  2016      4   \n",
       "28425       1019.7       1015.8     24.3     32.0         No  2013      4   \n",
       "28426          NaN          NaN     21.4     20.8        Yes  2009      3   \n",
       "28430       1020.4       1020.4     15.9     19.2         No  2013      4   \n",
       "28431       1018.3       1016.6     21.8     25.2         No  2016      4   \n",
       "\n",
       "       Day    Counts  \n",
       "0       22  0.303550  \n",
       "1       30  0.252383  \n",
       "2       27  0.182358  \n",
       "6       25  0.230864  \n",
       "7        4  0.182358  \n",
       "...    ...       ...  \n",
       "28422   25  0.185200  \n",
       "28425    8  0.074781  \n",
       "28426   31  0.242834  \n",
       "28430   23  0.318828  \n",
       "28431   28  0.245599  \n",
       "\n",
       "[7512 rows x 21 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create DataFrames for each season\n",
    "spring_df = test_df[test_df[\"Month\"].isin([3, 4, 5])]\n",
    "summer_df = test_df[test_df[\"Month\"].isin([6,7,8])]\n",
    "fall_df = test_df[test_df[\"Month\"].isin([9,10,11])]\n",
    "winter_df = test_df[test_df[\"Month\"].isin([12,1,2])]\n",
    "\n",
    "seasons = [spring_df,summer_df,fall_df,winter_df]\n",
    "(spring_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "# These functions return median and mode for the season test_df belongs to\n",
    "def getMedian(row, idx, i):\n",
    "    row = row.to_dict()\n",
    "    x = row[i]\n",
    "    month = row[\"Month\"]\n",
    "\n",
    "    if (not pd.isna(x)):\n",
    "        return x\n",
    "    if(month in [3,4,5]):\n",
    "        return seasons[0].loc[: ,i].median()\n",
    "    elif(month in [6,7,8]):\n",
    "        return seasons[1].loc[:,i].median()\n",
    "    elif(month in [9,10,11]):\n",
    "        return seasons[2].loc[:,i].median()\n",
    "    else:\n",
    "        return seasons[3].loc[:,i].median()\n",
    "    return\n",
    "\n",
    "def getMode(row, idx, i):\n",
    "    row = row.to_dict()\n",
    "    x = row[i]\n",
    "    month = row[\"Month\"]\n",
    "    if (not pd.isna(x)):\n",
    "        return x\n",
    "    if (not pd.isna(x)):\n",
    "        return x\n",
    "    if(month in [3,4,5]):\n",
    "        return seasons[0].loc[: ,i].mode().iloc[0]\n",
    "    elif(month in [6,7,8]):\n",
    "        return seasons[1].loc[:,i].mode().iloc[0]\n",
    "    elif(month in [9,10,11]):\n",
    "        return seasons[2].loc[:,i].mode().iloc[0]\n",
    "    else:\n",
    "        return seasons[3].loc[:,i].mode().iloc[0]\n",
    "    return"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>MinTemp</th>\n",
       "      <th>MaxTemp</th>\n",
       "      <th>Rainfall</th>\n",
       "      <th>WindGustDir</th>\n",
       "      <th>WindGustSpeed</th>\n",
       "      <th>WindDir9am</th>\n",
       "      <th>WindDir3pm</th>\n",
       "      <th>WindSpeed9am</th>\n",
       "      <th>WindSpeed3pm</th>\n",
       "      <th>...</th>\n",
       "      <th>Humidity3pm</th>\n",
       "      <th>Pressure9am</th>\n",
       "      <th>Pressure3pm</th>\n",
       "      <th>Temp9am</th>\n",
       "      <th>Temp3pm</th>\n",
       "      <th>RainToday</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>Counts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aurangabad</td>\n",
       "      <td>15.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>4.2</td>\n",
       "      <td>NNW</td>\n",
       "      <td>54.0</td>\n",
       "      <td>NNW</td>\n",
       "      <td>NW</td>\n",
       "      <td>24.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1005.2</td>\n",
       "      <td>1003.7</td>\n",
       "      <td>17.3</td>\n",
       "      <td>17.6</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "      <td>22</td>\n",
       "      <td>0.303550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sydney</td>\n",
       "      <td>13.1</td>\n",
       "      <td>26.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>W</td>\n",
       "      <td>WNW</td>\n",
       "      <td>22.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1013.0</td>\n",
       "      <td>1009.0</td>\n",
       "      <td>16.9</td>\n",
       "      <td>25.9</td>\n",
       "      <td>No</td>\n",
       "      <td>2008</td>\n",
       "      <td>3</td>\n",
       "      <td>30</td>\n",
       "      <td>0.252383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Pune</td>\n",
       "      <td>18.1</td>\n",
       "      <td>32.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>30.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NE</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>...</td>\n",
       "      <td>51.0</td>\n",
       "      <td>1019.2</td>\n",
       "      <td>1014.6</td>\n",
       "      <td>20.9</td>\n",
       "      <td>31.6</td>\n",
       "      <td>No</td>\n",
       "      <td>2013</td>\n",
       "      <td>3</td>\n",
       "      <td>27</td>\n",
       "      <td>0.182358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Sydney</td>\n",
       "      <td>13.9</td>\n",
       "      <td>19.6</td>\n",
       "      <td>14.0</td>\n",
       "      <td>SSW</td>\n",
       "      <td>50.0</td>\n",
       "      <td>SW</td>\n",
       "      <td>S</td>\n",
       "      <td>17.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1018.4</td>\n",
       "      <td>15.5</td>\n",
       "      <td>19.1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2010</td>\n",
       "      <td>10</td>\n",
       "      <td>25</td>\n",
       "      <td>0.252383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Mumbai</td>\n",
       "      <td>0.6</td>\n",
       "      <td>11.9</td>\n",
       "      <td>0.2</td>\n",
       "      <td>W</td>\n",
       "      <td>22.0</td>\n",
       "      <td>SW</td>\n",
       "      <td>NW</td>\n",
       "      <td>2.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>...</td>\n",
       "      <td>54.0</td>\n",
       "      <td>1024.3</td>\n",
       "      <td>1021.8</td>\n",
       "      <td>2.8</td>\n",
       "      <td>11.5</td>\n",
       "      <td>No</td>\n",
       "      <td>2010</td>\n",
       "      <td>6</td>\n",
       "      <td>27</td>\n",
       "      <td>0.195374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28427</th>\n",
       "      <td>Visakhapatnam</td>\n",
       "      <td>10.8</td>\n",
       "      <td>19.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>N</td>\n",
       "      <td>43.0</td>\n",
       "      <td>NE</td>\n",
       "      <td>NNE</td>\n",
       "      <td>22.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>...</td>\n",
       "      <td>68.0</td>\n",
       "      <td>1017.5</td>\n",
       "      <td>1013.7</td>\n",
       "      <td>16.3</td>\n",
       "      <td>17.2</td>\n",
       "      <td>No</td>\n",
       "      <td>2014</td>\n",
       "      <td>9</td>\n",
       "      <td>24</td>\n",
       "      <td>0.256253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28428</th>\n",
       "      <td>Sydney</td>\n",
       "      <td>8.7</td>\n",
       "      <td>18.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>WNW</td>\n",
       "      <td>SSE</td>\n",
       "      <td>19.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>...</td>\n",
       "      <td>62.0</td>\n",
       "      <td>1025.7</td>\n",
       "      <td>1022.3</td>\n",
       "      <td>12.5</td>\n",
       "      <td>16.1</td>\n",
       "      <td>No</td>\n",
       "      <td>2008</td>\n",
       "      <td>8</td>\n",
       "      <td>29</td>\n",
       "      <td>0.252383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28429</th>\n",
       "      <td>Chennai</td>\n",
       "      <td>14.5</td>\n",
       "      <td>25.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NW</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>2016</td>\n",
       "      <td>11</td>\n",
       "      <td>26</td>\n",
       "      <td>0.242834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28430</th>\n",
       "      <td>Coimbatore</td>\n",
       "      <td>12.7</td>\n",
       "      <td>20.6</td>\n",
       "      <td>0.8</td>\n",
       "      <td>WNW</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NNW</td>\n",
       "      <td>WSW</td>\n",
       "      <td>15.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>...</td>\n",
       "      <td>83.0</td>\n",
       "      <td>1020.4</td>\n",
       "      <td>1020.4</td>\n",
       "      <td>15.9</td>\n",
       "      <td>19.2</td>\n",
       "      <td>No</td>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "      <td>23</td>\n",
       "      <td>0.318828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28431</th>\n",
       "      <td>Faridabad</td>\n",
       "      <td>20.2</td>\n",
       "      <td>26.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NNE</td>\n",
       "      <td>39.0</td>\n",
       "      <td>NNE</td>\n",
       "      <td>NNE</td>\n",
       "      <td>20.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>...</td>\n",
       "      <td>37.0</td>\n",
       "      <td>1018.3</td>\n",
       "      <td>1016.6</td>\n",
       "      <td>21.8</td>\n",
       "      <td>25.2</td>\n",
       "      <td>No</td>\n",
       "      <td>2016</td>\n",
       "      <td>4</td>\n",
       "      <td>28</td>\n",
       "      <td>0.245599</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>28432 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Location  MinTemp  MaxTemp  Rainfall WindGustDir  WindGustSpeed  \\\n",
       "0         Aurangabad     15.0     18.9       4.2         NNW           54.0   \n",
       "1             Sydney     13.1     26.8       0.0         NaN            NaN   \n",
       "2               Pune     18.1     32.2       0.0          NE           30.0   \n",
       "3             Sydney     13.9     19.6      14.0         SSW           50.0   \n",
       "4             Mumbai      0.6     11.9       0.2           W           22.0   \n",
       "...              ...      ...      ...       ...         ...            ...   \n",
       "28427  Visakhapatnam     10.8     19.7       0.0           N           43.0   \n",
       "28428         Sydney      8.7     18.2       0.0         NaN            NaN   \n",
       "28429        Chennai     14.5     25.2       0.0         NaN            NaN   \n",
       "28430     Coimbatore     12.7     20.6       0.8         WNW           31.0   \n",
       "28431      Faridabad     20.2     26.4       0.0         NNE           39.0   \n",
       "\n",
       "      WindDir9am WindDir3pm  WindSpeed9am  WindSpeed3pm  ...  Humidity3pm  \\\n",
       "0            NNW         NW          24.0          31.0  ...         64.0   \n",
       "1              W        WNW          22.0          15.0  ...         22.0   \n",
       "2            NaN         NE           0.0          17.0  ...         51.0   \n",
       "3             SW          S          17.0          22.0  ...         64.0   \n",
       "4             SW         NW           2.0          11.0  ...         54.0   \n",
       "...          ...        ...           ...           ...  ...          ...   \n",
       "28427         NE        NNE          22.0          20.0  ...         68.0   \n",
       "28428        WNW        SSE          19.0          20.0  ...         62.0   \n",
       "28429         NW        NaN          19.0           NaN  ...          NaN   \n",
       "28430        NNW        WSW          15.0          11.0  ...         83.0   \n",
       "28431        NNE        NNE          20.0           9.0  ...         37.0   \n",
       "\n",
       "       Pressure9am  Pressure3pm  Temp9am  Temp3pm  RainToday  Year  Month  \\\n",
       "0           1005.2       1003.7     17.3     17.6        Yes  2012      4   \n",
       "1           1013.0       1009.0     16.9     25.9         No  2008      3   \n",
       "2           1019.2       1014.6     20.9     31.6         No  2013      3   \n",
       "3              NaN       1018.4     15.5     19.1        Yes  2010     10   \n",
       "4           1024.3       1021.8      2.8     11.5         No  2010      6   \n",
       "...            ...          ...      ...      ...        ...   ...    ...   \n",
       "28427       1017.5       1013.7     16.3     17.2         No  2014      9   \n",
       "28428       1025.7       1022.3     12.5     16.1         No  2008      8   \n",
       "28429          NaN          NaN     22.5      NaN         No  2016     11   \n",
       "28430       1020.4       1020.4     15.9     19.2         No  2013      4   \n",
       "28431       1018.3       1016.6     21.8     25.2         No  2016      4   \n",
       "\n",
       "       Day    Counts  \n",
       "0       22  0.303550  \n",
       "1       30  0.252383  \n",
       "2       27  0.182358  \n",
       "3       25  0.252383  \n",
       "4       27  0.195374  \n",
       "...    ...       ...  \n",
       "28427   24  0.256253  \n",
       "28428   29  0.252383  \n",
       "28429   26  0.242834  \n",
       "28430   23  0.318828  \n",
       "28431   28  0.245599  \n",
       "\n",
       "[28432 rows x 21 columns]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filling null values of numerical columns with median of the season it belongs to and \n",
    "# with mode of the season it belongs to for categorical columns\n",
    "num_columns = test_df.select_dtypes(include=['number']).columns\n",
    "for i in num_columns:\n",
    "    if(i!='Task'):\n",
    "        test_df[i] = test_df.apply(lambda x: getMedian(x, x.name, i), axis=1)\n",
    "\n",
    "categorical_columns = test_df.select_dtypes(include=['object']).columns\n",
    "for i in categorical_columns:\n",
    "    test_df[i] = test_df.apply(lambda x: getMode(x, x.index, i), axis=1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "dir = {'N': 0, 'NNE': 22.5, 'NE': 45.0, 'ENE': 67.5, 'E': 90.0, 'ESE': 112.5, 'SE': 135.0, 'SSE': 157.5, 'S':\n",
    "180.0, 'SSW': 202.5, 'SW': 225.0, 'WSW': 247.5, 'W': 270.0, 'WNW': 292.5, 'NW': 315.0, 'NNW':\n",
    "337.5}\n",
    "dir_col = ['WindGustDir','WindDir9am','WindDir3pm']\n",
    "for i in dir_col:\n",
    "    test_df[i] = test_df[i].apply(lambda x: dir[x]).astype('float64')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_df = pd.DataFrame(test_df)\n",
    "test_df=encoder.transform(test_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Location', 'MinTemp', 'MaxTemp', 'Rainfall', 'WindGustDir',\n",
       "       'WindGustSpeed', 'WindDir9am', 'WindDir3pm', 'WindSpeed9am',\n",
       "       'WindSpeed3pm', 'Humidity9am', 'Humidity3pm', 'Pressure9am',\n",
       "       'Pressure3pm', 'Temp9am', 'Temp3pm', 'RainToday', 'Year', 'Month',\n",
       "       'Day', 'Counts', 'Task'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Location', 'MinTemp', 'MaxTemp', 'Rainfall', 'WindGustDir',\n",
       "       'WindGustSpeed', 'WindDir9am', 'WindDir3pm', 'WindSpeed9am',\n",
       "       'WindSpeed3pm', 'Humidity9am', 'Humidity3pm', 'Pressure9am',\n",
       "       'Pressure3pm', 'Temp9am', 'Temp3pm', 'RainToday', 'Year', 'Month',\n",
       "       'Day', 'Counts'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Y_pred = pd.to_numeric(model.predict(xgb.DMatrix(test_df)).round(), downcast ='signed')\n",
    "\n",
    "Y_pred = pd.to_numeric(voting_classifier.predict(test_df).round(), downcast ='signed')\n",
    "\n",
    "dict = {'ID':[],\n",
    "        'Task':[],\n",
    "       }\n",
    "for i in range(test_df.shape[0]):\n",
    "    dict['ID'].append(ids.iloc[i])\n",
    "    dict['Task'].append(int(Y_pred[i]))\n",
    "\n",
    "ans = pd.DataFrame(dict)\n",
    "\n",
    "ans.to_csv(\"subded3.csv\", index=False)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
